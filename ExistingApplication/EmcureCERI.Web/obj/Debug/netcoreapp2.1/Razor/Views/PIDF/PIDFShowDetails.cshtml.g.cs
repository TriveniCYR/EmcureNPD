#pragma checksum "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e05398ac5d17d0a267ebe51696d504b06d8b7903"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PIDF_PIDFShowDetails), @"mvc.1.0.view", @"/Views/PIDF/PIDFShowDetails.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PIDF/PIDFShowDetails.cshtml", typeof(AspNetCore.Views_PIDF_PIDFShowDetails))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\_ViewImports.cshtml"
using EmcureCERI.Web;

#line default
#line hidden
#line 2 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\_ViewImports.cshtml"
using EmcureCERI.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e05398ac5d17d0a267ebe51696d504b06d8b7903", @"/Views/PIDF/PIDFShowDetails.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e39e5b73b640da0f63a8b55154c17e2e753e04bc", @"/Views/_ViewImports.cshtml")]
    public class Views_PIDF_PIDFShowDetails : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<EmcureCERI.Web.Models.PIDFPViewModels.PIDFNewVM>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("CISCountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("CISCountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("LATAMCountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("LATAMCountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("ASIACountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ASIACountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("AFRICACountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("AFRICACountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("MENACountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("MENACountryCreate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(148, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
  
    ViewData["Title"] = "PIDF Show Details";

#line default
#line hidden
            BeginContext(203, 862, true);
            WriteLiteral(@"

    <div class=""content-wrapper pt-3"">
        <!-- Main content -->
        <section class=""content"">
            <div class=""container-fluid"">
                <!-- Small boxes (Stat box) -->
                <!-- Main row -->
                <div class=""row"">
                    <section class=""col-lg-12 "">
                        <!-- Custom tabs (Charts with tabs)-->
                        <div class=""card"">
                            <div class=""card-header"">
                                <h3 class=""card-title"">
                                    <i class=""far fa-plus-square mr-2""></i> PIDF
                                </h3>
                                <div class=""card-tools md-left"">
                                    <div class=""mybtn-group"">
                                            <a class=""btn btn-primary""");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1065, "\"", 1102, 1);
#line 25 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
WriteAttributeValue("", 1072, Url.Action("PIDFList","PIDF"), 1072, 30, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1103, 125, true);
            WriteLiteral("><i class=\"far fa-list-alt mr-1\"></i>Project List</a>\r\n                                            <a class=\"btn btn-primary\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1228, "\"", 1273, 1);
#line 26 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
WriteAttributeValue("", 1235, Url.Action("PIDFStrengthList","PIDF"), 1235, 38, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1274, 122, true);
            WriteLiteral("><i class=\"far fa-list-alt mr-1\"></i>PIDF List</a>\r\n                                            <a class=\"btn btn-primary\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1396, "\"", 1434, 1);
#line 27 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
WriteAttributeValue("", 1403, Url.Action("Index","GanttNew"), 1403, 31, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1435, 131, true);
            WriteLiteral("><i class=\"fas fa-project-diagram mr-2\"></i>Gantt Chart</a>\r\n                                            <a class=\"btn btn-primary\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1566, "\"", 1602, 1);
#line 28 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
WriteAttributeValue("", 1573, Url.Action("PIDFNew","PIDF"), 1573, 29, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1603, 3262, true);
            WriteLiteral(@"><i class=""far fa-plus-square mr-1""></i> Create New PIDF</a>
                                            <button class=""btn btn-primary"" onclick=""javascript:window.history.back();""><i class=""fas fa-undo mr-1""></i> Back</button>
                                    </div>
                                </div>
                            </div>

                            <div class=""card-body"">
                                <div>
                                    <div class=""row mt-2"">
                                        <div class=""col-sm-7"">
                                            <table class=""table table-bordered"">
                                                <tr>
                                                    <td width=""30%""><strong>Product Name</strong></td>
                                                    <td><div class=""col-sm-9"" id=""pidf_ProjectorProductName""></div></td>
                                                </tr>
                                       ");
            WriteLiteral(@"         <tr>
                                                    <td width=""30%""><strong>Product Type</strong></td>
                                                    <td><div class=""col-sm-9"" id=""pidf_ProductTypeName""></div></td>
                                                </tr>
                                                <tr>
                                                    <td width=""30%""><strong>Plant Name</strong></td>
                                                    <td><div class=""col-sm-9"" id=""pidf_PlantName""></div></td>
                                                </tr>
                                                <tr>
                                                    <td width=""30%""><label>Formulation</label></td>
                                                    <td><div class=""col-sm-9"" id=""pidf_FormulationName""></div></td>
                                                </tr>
                                                <tr>
                              ");
            WriteLiteral(@"                      <td width=""30%""><label>Work Flow</label></td>
                                                    <td><div class=""col-sm-9"" id=""pidf_WorkflowName""></div></td>
                                                </tr>
                                            </table>
                                        </div>
                                        <div class=""col-sm-5"" style=""height:205px; overflow:auto;"">
                                            <table id=""myTables"" class=""table order-list table-bordered"" style=""width:100%"">
                                                <thead>
                                                    <tr>
                                                        <th width=""30%"">Strength</th>
                                                        <th>Unit</th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
  ");
            WriteLiteral("                                          </table>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n");
            EndContext();
            BeginContext(4922, 3622, true);
            WriteLiteral(@"
                                <div class=""row mt-1"">
                                    <div class=""col-sm-12"">
                                        <div class=""card  card-primary card-outline card-outline-tabs nav-fill nav-pills"">
                                            <div class=""card-header p-0 "">
                                                <ul class=""nav nav-tabs"" id=""custom-tabs-one-tab"" role=""tablist"">
                                                    <li class=""pt-2 px-3"">
                                                        <h3 class=""card-title""><i class=""fas fa-globe mr-2""></i>Region</h3>
                                                    </li>
                                                    <li class=""nav-item"">
                                                        <a class=""nav-link active"" id=""CIS-tab"" data-toggle=""pill"" href=""#CIS"" role=""tab"" aria-controls=""CIS"" aria-selected=""true"">CIS</a>
                                                    </li>
        ");
            WriteLiteral(@"                                            <li class=""nav-item"">
                                                        <a class=""nav-link"" id=""LATAM-tab"" data-toggle=""pill"" href=""#LATAM"" role=""tab"" aria-controls=""LATAM"" aria-selected=""false"">LATAM</a>
                                                    </li>
                                                    <li class=""nav-item"">
                                                        <a class=""nav-link"" id=""ASIA-tab"" data-toggle=""pill"" href=""#ASIA"" role=""tab"" aria-controls=""ASIA"" aria-selected=""false"">ASIA</a>
                                                    </li>
                                                    <li class=""nav-item"">
                                                        <a class=""nav-link"" id=""AFRICA-tab"" data-toggle=""pill"" href=""#AFRICA"" role=""tab"" aria-controls=""AFRICA"" aria-selected=""false"">AFRICA</a>
                                                    </li>
                                                    <li clas");
            WriteLiteral(@"s=""nav-item"">
                                                        <a class=""nav-link"" id=""MENA-tab"" data-toggle=""pill"" href=""#MENA"" role=""tab"" aria-controls=""MENA"" aria-selected=""false"">MENA</a>
                                                    </li>
                                                    <div class=""card-tools"">
                                                        <button type=""button"" class=""btn btn-tool p-0 mr-3 ml-3"" data-card-widget=""maximize"">
                                                            <i class=""fas fa-expand""></i>
                                                        </button>
                                                        <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"">
                                                            <i class=""fas fa-minus""></i>
                                                        </button>
                                                    </div>
                                       ");
            WriteLiteral(@"         </ul>
                                            </div>
                                            <div class=""card-body"">
                                                <div class=""tab-content"" id=""custom-tabs-one-tabContent"">

                                                    <div class=""tab-pane fade show active"" id=""CIS"" role=""tabpanel"" aria-labelledby=""CIS-tab"">
                                                        <h4 class=""text-divider""><span>CIS</span></h4>
                                                        ");
            EndContext();
            BeginContext(8544, 4363, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e05398ac5d17d0a267ebe51696d504b06d8b790318116", async() => {
                BeginContext(8610, 4290, true);
                WriteLiteral(@"

                                                            <div class=""row mt-5 mb-3"">
                                                                <div class=""table-responsive"">
                                                                    <table id=""CISPIDFTable"" class=""table CISorder-list table-striped table-bordered dt-responsive nowrap"" style=""width:100%"">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Country</th>
                                                                                <th>Strength</th>
                                                                                <th>Pack Size</th>
                                                                                <th>Packing</th>
                                                                                <th>1");
                WriteLiteral(@"st Year CIF Price/Pack</th>
                                                                                <th>1st Year Qty.</th>
                                                                                <th>1st Year Volume</th>
                                                                                <th>2nd Year CIF Price/Pack</th>
                                                                                <th>2nd Year Qty.</th>
                                                                                <th>2nd Year Volume</th>
                                                                                <th>3rd Year CIF Price/Pack</th>
                                                                                <th>3rd Year Qty.</th>
                                                                                <th>3rd Year Volume</th>
                                                                                <th>Batch Size</th>
                                    ");
                WriteLiteral(@"                                            <th>Currency</th>
                                                                                <th>1st Year COGS</th>
                                                                                <th>2nd Year COGS</th>
                                                                                <th>3rd Year COGS</th>
                                                                                <th>Freight</th>
                                                                                <th>Total CIF Cost</th>
                                                                                <th>3 Year Contribution</th>
                                                                                <th>Cost of 3 Batches</th>
                                                                                <th>Analytical Cost</th>
                                                                                <th>BECost</th>
                         ");
                WriteLiteral(@"                                                       <th>RLD Cost</th>
                                                                                <th>R&D Cost</th>
                                                                                <th>Filing Cost</th>
                                                                                <th>Stability Cost</th>
                                                                                <th>Total Invest</th>
                                                                                <th>Other Cost</th>
                                                                                <th>API Source</th>
                                                                                <th>ROI</th>
                                                                            </tr>
                                                                        </thead>
                                                                    </table>
  ");
                WriteLiteral("                                                              </div>\r\n                                                            </div>\r\n                                                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(12907, 362, true);
            WriteLiteral(@"
                                                    </div>

                                                    <div class=""tab-pane fade"" id=""LATAM"" role=""tabpanel"" aria-labelledby=""LATAM-tab"">
                                                        <h4 class=""text-divider""><span>LATAM</span></h4>
                                                        ");
            EndContext();
            BeginContext(13269, 4371, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e05398ac5d17d0a267ebe51696d504b06d8b790324753", async() => {
                BeginContext(13339, 4294, true);
                WriteLiteral(@"

                                                            <div class=""row mt-5 mb-3"">
                                                                <div class=""table-responsive"">
                                                                    <table id=""LATAMPIDFTable"" class=""table LATAMorder-list table-striped table-bordered dt-responsive nowrap"" style=""width:100%"">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Country</th>
                                                                                <th>Strength</th>
                                                                                <th>Pack Size</th>
                                                                                <th>Packing</th>
                                                                                <");
                WriteLiteral(@"th>1st Year CIF Price/Pack</th>
                                                                                <th>1st Year Qty.</th>
                                                                                <th>1st Year Volume</th>
                                                                                <th>2nd Year CIF Price/Pack</th>
                                                                                <th>2nd Year Qty.</th>
                                                                                <th>2nd Year Volume</th>
                                                                                <th>3rd Year CIF Price/Pack</th>
                                                                                <th>3rd Year Qty.</th>
                                                                                <th>3rd Year Volume</th>
                                                                                <th>Batch Size</th>
                                ");
                WriteLiteral(@"                                                <th>Currency</th>
                                                                                <th>1st Year COGS</th>
                                                                                <th>2nd Year COGS</th>
                                                                                <th>3rd Year COGS</th>
                                                                                <th>Freight</th>
                                                                                <th>Total CIF Cost</th>
                                                                                <th>3 Year Contribution</th>
                                                                                <th>Cost of 3 Batches</th>
                                                                                <th>Analytical Cost</th>
                                                                                <th>BECost</th>
                     ");
                WriteLiteral(@"                                                           <th>RLD Cost</th>
                                                                                <th>R&D Cost</th>
                                                                                <th>Filing Cost</th>
                                                                                <th>Stability Cost</th>
                                                                                <th>Total Invest</th>
                                                                                <th>Other Cost</th>
                                                                                <th>API Source</th>
                                                                                <th>ROI</th>
                                                                            </tr>
                                                                        </thead>
                                                                    </table>");
                WriteLiteral("\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(17640, 359, true);
            WriteLiteral(@"
                                                    </div>

                                                    <div class=""tab-pane fade"" id=""ASIA"" role=""tabpanel"" aria-labelledby=""ASIA-tab"">
                                                        <h4 class=""text-divider""><span>ASIA</span></h4>
                                                        ");
            EndContext();
            BeginContext(17999, 4369, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e05398ac5d17d0a267ebe51696d504b06d8b790331394", async() => {
                BeginContext(18067, 4294, true);
                WriteLiteral(@"

                                                            <div class=""row mt-5 mb-3"">
                                                                <div class=""table-responsive"">
                                                                    <table id=""ASIAPIDFTable"" class=""table ASIAorder-list table-striped table-bordered dt-responsive nowrap"" style=""width:100%"">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Country</th>
                                                                                <th>Strength</th>
                                                                                <th>Pack Size</th>
                                                                                <th>Packing</th>
                                                                                <th");
                WriteLiteral(@">1st Year CIF Price/Pack</th>
                                                                                <th>1st Year Qty.</th>
                                                                                <th>1st Year Volume</th>
                                                                                <th>2nd Year CIF Price/Pack</th>
                                                                                <th>2nd Year Qty.</th>
                                                                                <th>2nd Year Volume</th>
                                                                                <th>3rd Year CIF Price/Pack</th>
                                                                                <th>3rd Year Qty.</th>
                                                                                <th>3rd Year Volume</th>
                                                                                <th>Batch Size</th>
                                  ");
                WriteLiteral(@"                                              <th>Currency</th>
                                                                                <th>1st Year COGS</th>
                                                                                <th>2nd Year COGS</th>
                                                                                <th>3rd Year COGS</th>
                                                                                <th>Freight</th>
                                                                                <th>Total CIF Cost</th>
                                                                                <th>3 Year Contribution</th>
                                                                                <th>Cost of 3 Batches</th>
                                                                                <th>Analytical Cost</th>
                                                                                <th>BECost</th>
                       ");
                WriteLiteral(@"                                                         <th>RLD Cost</th>
                                                                                <th>R&D Cost</th>
                                                                                <th>Filing Cost</th>
                                                                                <th>Stability Cost</th>
                                                                                <th>Total Invest</th>
                                                                                <th>Other Cost</th>
                                                                                <th>API Source</th>
                                                                                <th>ROI</th>
                                                                            </tr>
                                                                        </thead>
                                                                    </table>
");
                WriteLiteral("                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(22368, 363, true);
            WriteLiteral(@"
                                                    </div>
                                                    <div class=""tab-pane fade"" id=""AFRICA"" role=""tabpanel"" aria-labelledby=""AFRICA-tab"">
                                                        <h4 class=""text-divider""><span>AFRICA</span></h4>
                                                        ");
            EndContext();
            BeginContext(22731, 4377, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e05398ac5d17d0a267ebe51696d504b06d8b790338039", async() => {
                BeginContext(22803, 4298, true);
                WriteLiteral(@"

                                                            <div class=""row mt-5 mb-3"">
                                                                <div class=""table-responsive"">
                                                                    <table id=""AFRICAPIDFTable"" class=""table AFRICAorder-list table-striped table-bordered dt-responsive nowrap"" style=""width:100%"">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Country</th>
                                                                                <th>Strength</th>
                                                                                <th>Pack Size</th>
                                                                                <th>Packing</th>
                                                                               ");
                WriteLiteral(@" <th>1st Year CIF Price/Pack</th>
                                                                                <th>1st Year Qty.</th>
                                                                                <th>1st Year Volume</th>
                                                                                <th>2nd Year CIF Price/Pack</th>
                                                                                <th>2nd Year Qty.</th>
                                                                                <th>2nd Year Volume</th>
                                                                                <th>3rd Year CIF Price/Pack</th>
                                                                                <th>3rd Year Qty.</th>
                                                                                <th>3rd Year Volume</th>
                                                                                <th>Batch Size</th>
                              ");
                WriteLiteral(@"                                                  <th>Currency</th>
                                                                                <th>1st Year COGS</th>
                                                                                <th>2nd Year COGS</th>
                                                                                <th>3rd Year COGS</th>
                                                                                <th>Freight</th>
                                                                                <th>Total CIF Cost</th>
                                                                                <th>3 Year Contribution</th>
                                                                                <th>Cost of 3 Batches</th>
                                                                                <th>Analytical Cost</th>
                                                                                <th>BECost</th>
                   ");
                WriteLiteral(@"                                                             <th>RLD Cost</th>
                                                                                <th>R&D Cost</th>
                                                                                <th>Filing Cost</th>
                                                                                <th>Stability Cost</th>
                                                                                <th>Total Invest</th>
                                                                                <th>Other Cost</th>
                                                                                <th>API Source</th>
                                                                                <th>ROI</th>
                                                                            </tr>
                                                                        </thead>
                                                                    </tabl");
                WriteLiteral("e>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(27108, 357, true);
            WriteLiteral(@"
                                                    </div>
                                                    <div class=""tab-pane fade"" id=""MENA"" role=""tabpanel"" aria-labelledby=""MENA-tab"">
                                                        <h4 class=""text-divider""><span>MENA</span></h4>
                                                        ");
            EndContext();
            BeginContext(27465, 4369, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e05398ac5d17d0a267ebe51696d504b06d8b790344684", async() => {
                BeginContext(27533, 4294, true);
                WriteLiteral(@"

                                                            <div class=""row mt-5 mb-3"">
                                                                <div class=""table-responsive"">
                                                                    <table id=""MENAPIDFTable"" class=""table MENAorder-list table-striped table-bordered dt-responsive nowrap"" style=""width:100%"">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Country</th>
                                                                                <th>Strength</th>
                                                                                <th>Pack Size</th>
                                                                                <th>Packing</th>
                                                                                <th");
                WriteLiteral(@">1st Year CIF Price/Pack</th>
                                                                                <th>1st Year Qty.</th>
                                                                                <th>1st Year Volume</th>
                                                                                <th>2nd Year CIF Price/Pack</th>
                                                                                <th>2nd Year Qty.</th>
                                                                                <th>2nd Year Volume</th>
                                                                                <th>3rd Year CIF Price/Pack</th>
                                                                                <th>3rd Year Qty.</th>
                                                                                <th>3rd Year Volume</th>
                                                                                <th>Batch Size</th>
                                  ");
                WriteLiteral(@"                                              <th>Currency</th>
                                                                                <th>1st Year COGS</th>
                                                                                <th>2nd Year COGS</th>
                                                                                <th>3rd Year COGS</th>
                                                                                <th>Freight</th>
                                                                                <th>Total CIF Cost</th>
                                                                                <th>3 Year Contribution</th>
                                                                                <th>Cost of 3 Batches</th>
                                                                                <th>Analytical Cost</th>
                                                                                <th>BECost</th>
                       ");
                WriteLiteral(@"                                                         <th>RLD Cost</th>
                                                                                <th>R&D Cost</th>
                                                                                <th>Filing Cost</th>
                                                                                <th>Stability Cost</th>
                                                                                <th>Total Invest</th>
                                                                                <th>Other Cost</th>
                                                                                <th>API Source</th>
                                                                                <th>ROI</th>
                                                                            </tr>
                                                                        </thead>
                                                                    </table>
");
                WriteLiteral("                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(31834, 306, true);
            WriteLiteral(@"
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>


");
            EndContext();
            BeginContext(32548, 1271, true);
            WriteLiteral(@"                                <div class=""card mt-2"">
                                    <div class=""card-header mb-3"">
                                        <h3 class=""card-title"" for=""exampleInputFile""><i class=""fas fa-file-alt mr-3""></i>Uploaded Files</h3>
                                    </div>
                                    <div class=""row p-3"">
                                        <div class=""col-sm-12 "">
                                            <table class=""table fileorder-list table-bordered mr-3 "">
                                                <thead>
                                                    <tr>
                                                        <th>Files</th>
                                                    </tr>
                                                </thead>
                                            </table>
                                        </div>
                                    </div>
                                </");
            WriteLiteral("div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    </div>\r\n\r\n\r\n<script>\r\n    $(\'#loading\').show();\r\n    console.log(");
            EndContext();
            BeginContext(33820, 29, false);
#line 410 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
           Write(ViewBag.PIDFShowDetailsPIDFID);

#line default
#line hidden
            EndContext();
            BeginContext(33849, 1119, true);
            WriteLiteral(@");
      var dataTableMENA,dataTableAFRICA,dataTableASIA,dataTableLATAM,dataTableCIS;
     
    $(document).ready(function () {
        var dataTableMENA = $('#MENAPIDFTable').DataTable({
            responsive: false,
            lengthChange: true,
            autoWidth: true,
            paging: false,
            searching: false,
            sort: false,
            ""bInfo"": false,
            columnDefs: [
                { responsivePriority: 1, targets: -5 },
                { responsivePriority: 1, targets: -3 },
                { responsivePriority: 100, targets: -4 }
            ],
            //  buttons: [
            //    {
            //        extend: 'excel', text: '<i class=""far fa-file-excel""></i>', className: ""btn-primary"", exportOptions: {
            //            columns: ':visible'
            //        }
            //    },
            //    {
            //        extend: 'colvis', text: '<i class=""fas fa-list""></i> Select Fields', className: ""btn-primary""
");
            WriteLiteral("            //    }\r\n            //],\r\n            language: {\r\n                \"emptyTable\": \"");
            EndContext();
            BeginContext(34969, 51, false);
#line 438 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["No data available in table"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35020, 29, true);
            WriteLiteral("\",\r\n                \"info\": \"");
            EndContext();
            BeginContext(35050, 68, false);
#line 439 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                    Write(SharedLocalizer["Showing _START_ to _END_ of _TOTAL_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35118, 34, true);
            WriteLiteral("\",\r\n                \"infoEmpty\": \"");
            EndContext();
            BeginContext(35153, 52, false);
#line 440 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["Showing 0 to 0 of 0 entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35205, 37, true);
            WriteLiteral("\",\r\n                \"infoFiltered\": \"");
            EndContext();
            BeginContext(35243, 60, false);
#line 441 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["(filtered from _MAX_ total entries)"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35303, 35, true);
            WriteLiteral("\",\r\n                \"lengthMenu\": \"");
            EndContext();
            BeginContext(35339, 44, false);
#line 442 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Show _MENU_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35383, 39, true);
            WriteLiteral("\",\r\n                \"loadingRecords\": \"");
            EndContext();
            BeginContext(35423, 35, false);
#line 443 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                              Write(SharedLocalizer["Loading..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35458, 35, true);
            WriteLiteral("\",\r\n                \"processing\": \"");
            EndContext();
            BeginContext(35494, 38, false);
#line 444 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Processing..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35532, 31, true);
            WriteLiteral("\",\r\n                \"search\": \"");
            EndContext();
            BeginContext(35564, 31, false);
#line 445 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                      Write(SharedLocalizer["Search"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35595, 36, true);
            WriteLiteral("\",\r\n                \"zeroRecords\": \"");
            EndContext();
            BeginContext(35632, 50, false);
#line 446 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                           Write(SharedLocalizer["No matching records found"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35682, 65, true);
            WriteLiteral("\",\r\n                \"paginate\": {\r\n                    \"first\": \"");
            EndContext();
            BeginContext(35748, 30, false);
#line 448 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["First"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35778, 33, true);
            WriteLiteral("\",\r\n                    \"last\": \"");
            EndContext();
            BeginContext(35812, 29, false);
#line 449 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Last"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35841, 33, true);
            WriteLiteral("\",\r\n                    \"next\": \"");
            EndContext();
            BeginContext(35875, 29, false);
#line 450 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Next"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35904, 37, true);
            WriteLiteral("\",\r\n                    \"previous\": \"");
            EndContext();
            BeginContext(35942, 33, false);
#line 451 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["Previous"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(35975, 1047, true);
            WriteLiteral(@"""
                },
            }
        });

           var dataTableAFRICA = $('#AFRICAPIDFTable').DataTable({
            responsive: false,
            lengthChange: true,
            autoWidth: true,
            paging: false,
            searching: false,
            sort: false,
            ""bInfo"": false,
            columnDefs: [
                { responsivePriority: 1, targets: -5 },
                { responsivePriority: 1, targets: -3 },
                { responsivePriority: 100, targets: -4 }
            ],
            //  buttons: [
            //    {
            //        extend: 'excel', text: '<i class=""far fa-file-excel""></i>', className: ""btn-primary"", exportOptions: {
            //            columns: ':visible'
            //        }
            //    },
            //    {
            //        extend: 'colvis', text: '<i class=""fas fa-list""></i> Select Fields', className: ""btn-primary""
            //    }
            //],
            language: {
        ");
            WriteLiteral("        \"emptyTable\": \"");
            EndContext();
            BeginContext(37023, 51, false);
#line 480 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["No data available in table"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37074, 29, true);
            WriteLiteral("\",\r\n                \"info\": \"");
            EndContext();
            BeginContext(37104, 68, false);
#line 481 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                    Write(SharedLocalizer["Showing _START_ to _END_ of _TOTAL_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37172, 34, true);
            WriteLiteral("\",\r\n                \"infoEmpty\": \"");
            EndContext();
            BeginContext(37207, 52, false);
#line 482 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["Showing 0 to 0 of 0 entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37259, 37, true);
            WriteLiteral("\",\r\n                \"infoFiltered\": \"");
            EndContext();
            BeginContext(37297, 60, false);
#line 483 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["(filtered from _MAX_ total entries)"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37357, 35, true);
            WriteLiteral("\",\r\n                \"lengthMenu\": \"");
            EndContext();
            BeginContext(37393, 44, false);
#line 484 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Show _MENU_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37437, 39, true);
            WriteLiteral("\",\r\n                \"loadingRecords\": \"");
            EndContext();
            BeginContext(37477, 35, false);
#line 485 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                              Write(SharedLocalizer["Loading..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37512, 35, true);
            WriteLiteral("\",\r\n                \"processing\": \"");
            EndContext();
            BeginContext(37548, 38, false);
#line 486 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Processing..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37586, 31, true);
            WriteLiteral("\",\r\n                \"search\": \"");
            EndContext();
            BeginContext(37618, 31, false);
#line 487 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                      Write(SharedLocalizer["Search"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37649, 36, true);
            WriteLiteral("\",\r\n                \"zeroRecords\": \"");
            EndContext();
            BeginContext(37686, 50, false);
#line 488 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                           Write(SharedLocalizer["No matching records found"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37736, 65, true);
            WriteLiteral("\",\r\n                \"paginate\": {\r\n                    \"first\": \"");
            EndContext();
            BeginContext(37802, 30, false);
#line 490 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["First"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37832, 33, true);
            WriteLiteral("\",\r\n                    \"last\": \"");
            EndContext();
            BeginContext(37866, 29, false);
#line 491 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Last"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37895, 33, true);
            WriteLiteral("\",\r\n                    \"next\": \"");
            EndContext();
            BeginContext(37929, 29, false);
#line 492 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Next"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(37958, 37, true);
            WriteLiteral("\",\r\n                    \"previous\": \"");
            EndContext();
            BeginContext(37996, 33, false);
#line 493 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["Previous"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(38029, 1041, true);
            WriteLiteral(@"""
                },
            }
        });

         var dataTableASIA = $('#ASIAPIDFTable').DataTable({
            responsive: false,
            lengthChange: true,
            autoWidth: true,
            paging: false,
            searching: false,
            sort: false,
            ""bInfo"": false,
            columnDefs: [
                { responsivePriority: 1, targets: -5 },
                { responsivePriority: 1, targets: -3 },
                { responsivePriority: 100, targets: -4 }
            ],
            //  buttons: [
            //    {
            //        extend: 'excel', text: '<i class=""far fa-file-excel""></i>', className: ""btn-primary"", exportOptions: {
            //            columns: ':visible'
            //        }
            //    },
            //    {
            //        extend: 'colvis', text: '<i class=""fas fa-list""></i> Select Fields', className: ""btn-primary""
            //    }
            //],
            language: {
              ");
            WriteLiteral("  \"emptyTable\": \"");
            EndContext();
            BeginContext(39071, 51, false);
#line 522 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["No data available in table"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39122, 29, true);
            WriteLiteral("\",\r\n                \"info\": \"");
            EndContext();
            BeginContext(39152, 68, false);
#line 523 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                    Write(SharedLocalizer["Showing _START_ to _END_ of _TOTAL_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39220, 34, true);
            WriteLiteral("\",\r\n                \"infoEmpty\": \"");
            EndContext();
            BeginContext(39255, 52, false);
#line 524 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["Showing 0 to 0 of 0 entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39307, 37, true);
            WriteLiteral("\",\r\n                \"infoFiltered\": \"");
            EndContext();
            BeginContext(39345, 60, false);
#line 525 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["(filtered from _MAX_ total entries)"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39405, 35, true);
            WriteLiteral("\",\r\n                \"lengthMenu\": \"");
            EndContext();
            BeginContext(39441, 44, false);
#line 526 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Show _MENU_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39485, 39, true);
            WriteLiteral("\",\r\n                \"loadingRecords\": \"");
            EndContext();
            BeginContext(39525, 35, false);
#line 527 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                              Write(SharedLocalizer["Loading..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39560, 35, true);
            WriteLiteral("\",\r\n                \"processing\": \"");
            EndContext();
            BeginContext(39596, 38, false);
#line 528 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Processing..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39634, 31, true);
            WriteLiteral("\",\r\n                \"search\": \"");
            EndContext();
            BeginContext(39666, 31, false);
#line 529 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                      Write(SharedLocalizer["Search"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39697, 36, true);
            WriteLiteral("\",\r\n                \"zeroRecords\": \"");
            EndContext();
            BeginContext(39734, 50, false);
#line 530 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                           Write(SharedLocalizer["No matching records found"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39784, 65, true);
            WriteLiteral("\",\r\n                \"paginate\": {\r\n                    \"first\": \"");
            EndContext();
            BeginContext(39850, 30, false);
#line 532 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["First"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39880, 33, true);
            WriteLiteral("\",\r\n                    \"last\": \"");
            EndContext();
            BeginContext(39914, 29, false);
#line 533 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Last"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(39943, 33, true);
            WriteLiteral("\",\r\n                    \"next\": \"");
            EndContext();
            BeginContext(39977, 29, false);
#line 534 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Next"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(40006, 37, true);
            WriteLiteral("\",\r\n                    \"previous\": \"");
            EndContext();
            BeginContext(40044, 33, false);
#line 535 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["Previous"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(40077, 1043, true);
            WriteLiteral(@"""
                },
            }
        });
           var dataTableLATAM = $('#LATAMPIDFTable').DataTable({
            responsive: false,
            lengthChange: true,
            autoWidth: true,
            paging: false,
            searching: false,
            sort: false,
            ""bInfo"": false,
            columnDefs: [
                { responsivePriority: 1, targets: -5 },
                { responsivePriority: 1, targets: -3 },
                { responsivePriority: 100, targets: -4 }
            ],
            //  buttons: [
            //    {
            //        extend: 'excel', text: '<i class=""far fa-file-excel""></i>', className: ""btn-primary"", exportOptions: {
            //            columns: ':visible'
            //        }
            //    },
            //    {
            //        extend: 'colvis', text: '<i class=""fas fa-list""></i> Select Fields', className: ""btn-primary""
            //    }
            //],
            language: {
            ");
            WriteLiteral("    \"emptyTable\": \"");
            EndContext();
            BeginContext(41121, 51, false);
#line 563 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["No data available in table"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41172, 29, true);
            WriteLiteral("\",\r\n                \"info\": \"");
            EndContext();
            BeginContext(41202, 68, false);
#line 564 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                    Write(SharedLocalizer["Showing _START_ to _END_ of _TOTAL_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41270, 34, true);
            WriteLiteral("\",\r\n                \"infoEmpty\": \"");
            EndContext();
            BeginContext(41305, 52, false);
#line 565 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["Showing 0 to 0 of 0 entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41357, 37, true);
            WriteLiteral("\",\r\n                \"infoFiltered\": \"");
            EndContext();
            BeginContext(41395, 60, false);
#line 566 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["(filtered from _MAX_ total entries)"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41455, 35, true);
            WriteLiteral("\",\r\n                \"lengthMenu\": \"");
            EndContext();
            BeginContext(41491, 44, false);
#line 567 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Show _MENU_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41535, 39, true);
            WriteLiteral("\",\r\n                \"loadingRecords\": \"");
            EndContext();
            BeginContext(41575, 35, false);
#line 568 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                              Write(SharedLocalizer["Loading..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41610, 35, true);
            WriteLiteral("\",\r\n                \"processing\": \"");
            EndContext();
            BeginContext(41646, 38, false);
#line 569 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Processing..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41684, 31, true);
            WriteLiteral("\",\r\n                \"search\": \"");
            EndContext();
            BeginContext(41716, 31, false);
#line 570 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                      Write(SharedLocalizer["Search"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41747, 36, true);
            WriteLiteral("\",\r\n                \"zeroRecords\": \"");
            EndContext();
            BeginContext(41784, 50, false);
#line 571 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                           Write(SharedLocalizer["No matching records found"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41834, 65, true);
            WriteLiteral("\",\r\n                \"paginate\": {\r\n                    \"first\": \"");
            EndContext();
            BeginContext(41900, 30, false);
#line 573 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["First"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41930, 33, true);
            WriteLiteral("\",\r\n                    \"last\": \"");
            EndContext();
            BeginContext(41964, 29, false);
#line 574 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Last"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(41993, 33, true);
            WriteLiteral("\",\r\n                    \"next\": \"");
            EndContext();
            BeginContext(42027, 29, false);
#line 575 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Next"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(42056, 37, true);
            WriteLiteral("\",\r\n                    \"previous\": \"");
            EndContext();
            BeginContext(42094, 33, false);
#line 576 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["Previous"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(42127, 1046, true);
            WriteLiteral(@"""
                },
            }
           });
               var dataTableCIS = $('#CISPIDFTable').DataTable({
            responsive: false,
            lengthChange: true,
            autoWidth: true,
            paging: false,
            searching: false,
            sort: false,
            ""bInfo"": false,
            columnDefs: [
                { responsivePriority: 1, targets: -5 },
                { responsivePriority: 1, targets: -3 },
                { responsivePriority: 100, targets: -4 }
            ],
            //  buttons: [
            //    {
            //        extend: 'excel', text: '<i class=""far fa-file-excel""></i>', className: ""btn-primary"", exportOptions: {
            //            columns: ':visible'
            //        }
            //    },
            //    {
            //        extend: 'colvis', text: '<i class=""fas fa-list""></i> Select Fields', className: ""btn-primary""
            //    }
            //],
            language: {
         ");
            WriteLiteral("       \"emptyTable\": \"");
            EndContext();
            BeginContext(43174, 51, false);
#line 604 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["No data available in table"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43225, 29, true);
            WriteLiteral("\",\r\n                \"info\": \"");
            EndContext();
            BeginContext(43255, 68, false);
#line 605 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                    Write(SharedLocalizer["Showing _START_ to _END_ of _TOTAL_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43323, 34, true);
            WriteLiteral("\",\r\n                \"infoEmpty\": \"");
            EndContext();
            BeginContext(43358, 52, false);
#line 606 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["Showing 0 to 0 of 0 entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43410, 37, true);
            WriteLiteral("\",\r\n                \"infoFiltered\": \"");
            EndContext();
            BeginContext(43448, 60, false);
#line 607 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["(filtered from _MAX_ total entries)"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43508, 35, true);
            WriteLiteral("\",\r\n                \"lengthMenu\": \"");
            EndContext();
            BeginContext(43544, 44, false);
#line 608 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Show _MENU_ entries"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43588, 39, true);
            WriteLiteral("\",\r\n                \"loadingRecords\": \"");
            EndContext();
            BeginContext(43628, 35, false);
#line 609 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                              Write(SharedLocalizer["Loading..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43663, 35, true);
            WriteLiteral("\",\r\n                \"processing\": \"");
            EndContext();
            BeginContext(43699, 38, false);
#line 610 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                          Write(SharedLocalizer["Processing..."].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43737, 31, true);
            WriteLiteral("\",\r\n                \"search\": \"");
            EndContext();
            BeginContext(43769, 31, false);
#line 611 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                      Write(SharedLocalizer["Search"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43800, 36, true);
            WriteLiteral("\",\r\n                \"zeroRecords\": \"");
            EndContext();
            BeginContext(43837, 50, false);
#line 612 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                           Write(SharedLocalizer["No matching records found"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43887, 65, true);
            WriteLiteral("\",\r\n                \"paginate\": {\r\n                    \"first\": \"");
            EndContext();
            BeginContext(43953, 30, false);
#line 614 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                         Write(SharedLocalizer["First"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(43983, 33, true);
            WriteLiteral("\",\r\n                    \"last\": \"");
            EndContext();
            BeginContext(44017, 29, false);
#line 615 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Last"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(44046, 33, true);
            WriteLiteral("\",\r\n                    \"next\": \"");
            EndContext();
            BeginContext(44080, 29, false);
#line 616 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                        Write(SharedLocalizer["Next"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(44109, 37, true);
            WriteLiteral("\",\r\n                    \"previous\": \"");
            EndContext();
            BeginContext(44147, 33, false);
#line 617 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                            Write(SharedLocalizer["Previous"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(44180, 115, true);
            WriteLiteral("\"\r\n                },\r\n            }\r\n        });\r\n         $.ajax({\r\n            type: \"POST\",\r\n            url: \'");
            EndContext();
            BeginContext(44296, 56, false);
#line 623 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
             Write(Url.Action("GetPIDFDetailsForAddCountryDetails", "PIDF"));

#line default
#line hidden
            EndContext();
            BeginContext(44352, 9, true);
            WriteLiteral("/PidfID?=");
            EndContext();
            BeginContext(44362, 29, false);
#line 623 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFShowDetails.cshtml"
                                                                               Write(ViewBag.PIDFShowDetailsPIDFID);

#line default
#line hidden
            EndContext();
            BeginContext(44391, 14093, true);
            WriteLiteral(@"',
            //contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                console.log(response);
                $('#loading').hide();
                $('#pidf_ProjectorProductName').text(response.data.projectorProductName);
                $('#pidf_ProductTypeName').text(response.data.productName);
                $('#pidf_PlantName').text(response.data.plantName);
                $('#pidf_FormulationName').text(response.data.formulationName);
                $('#pidf_WorkflowName').text(response.data.workflowName);

                //Add pidfstrength
                $.each(response.strengthlist, function (i, List) {
                    //console.log(List);
                    var newRow = $(""<tr>"");
                    var cols = """";

                    cols += '<td>' + List.pidfStrength + '</td>';
                    cols += '<td>' + List.unitName + ' </td>';
                    newRow.append(cols);
      ");
            WriteLiteral(@"              $(""table.order-list"").append(newRow);

                });

                var MENAjsonObject = response.menaCountryDetails;
                        var result = MENAjsonObject.map(function (item) {
                            var result = [];
                            result.push(item.countryName);
                            result.push(item.pidfStrength);
                            result.push(item.packSizeName);
                            result.push(item.packingName);
                            result.push(item.cifPricePerPack1);
                            result.push(item.qtyOneyear);
                            result.push(item.volOneyear);
                             result.push(item.cifPricePerPack2);
                            result.push(item.qtyTwoyear);
                            result.push(item.volTwoyear);
                            result.push(item.cifPricePerPack3);
                            result.push(item.qtyThreeyear);
                       ");
            WriteLiteral(@"     result.push(item.volThreeyear);
                            result.push(item.batchSize);
                            result.push(item.currencyName);
                            result.push(item.cogS1);
                            result.push(item.cogS2);
                            result.push(item.cogS3);
                            result.push(item.freight);
                            result.push(item.totalCIFCost);
                            result.push(item.contributionThreeYear);
                            result.push(item.costofThreeBatches);
                            result.push(item.analyticalCost);
                            result.push(item.beCost);
                            result.push(item.rldCost);
                            result.push(item.randDCost);
                            result.push(item.filingCost);
                            result.push(item.stabilityCost);
                            result.push(item.totalInvest);
                            result.pus");
            WriteLiteral(@"h(item.otherCost);
                            result.push(item.apiSource);
                            result.push(item.roi);
                           
                            return result;
                        });
                        dataTableMENA.clear();
                        dataTableMENA.rows.add(result); // add to DataTable instance
                dataTableMENA.draw();

                var AFRICAjsonObject = response.africaCountryDetails;
                        var result = AFRICAjsonObject.map(function (item) {
                            var result = [];
                            result.push(item.countryName);
                            result.push(item.pidfStrength);
                            result.push(item.packSizeName);
                            result.push(item.packingName);
                            result.push(item.cifPricePerPack1);
                            result.push(item.qtyOneyear);
                            result.push(item.volOneyear);");
            WriteLiteral(@"
                             result.push(item.cifPricePerPack2);
                            result.push(item.qtyTwoyear);
                            result.push(item.volTwoyear);
                            result.push(item.cifPricePerPack3);
                            result.push(item.qtyThreeyear);
                            result.push(item.volThreeyear);
                            result.push(item.batchSize);
                            result.push(item.currencyName);
                            result.push(item.cogS1);
                            result.push(item.cogS2);
                            result.push(item.cogS3);
                            result.push(item.freight);
                            result.push(item.totalCIFCost);
                            result.push(item.contributionThreeYear);
                            result.push(item.costofThreeBatches);
                            result.push(item.analyticalCost);
                            result.push(item.beCost);");
            WriteLiteral(@"
                            result.push(item.rldCost);
                            result.push(item.randDCost);
                            result.push(item.filingCost);
                            result.push(item.stabilityCost);
                            result.push(item.totalInvest);
                            result.push(item.otherCost);
                            result.push(item.apiSource);
                            result.push(item.roi);
                           
                            return result;
                        });
                        dataTableAFRICA.clear();
                        dataTableAFRICA.rows.add(result); // add to DataTable instance
                        dataTableAFRICA.draw();

                var ASIAjsonObject = response.asiaCountryDetails;
                        var result = ASIAjsonObject.map(function (item) {
                            var result = [];
                            result.push(item.countryName);
                    ");
            WriteLiteral(@"        result.push(item.pidfStrength);
                            result.push(item.packSizeName);
                            result.push(item.packingName);
                            result.push(item.cifPricePerPack1);
                            result.push(item.qtyOneyear);
                            result.push(item.volOneyear);
                             result.push(item.cifPricePerPack2);
                            result.push(item.qtyTwoyear);
                            result.push(item.volTwoyear);
                            result.push(item.cifPricePerPack3);
                            result.push(item.qtyThreeyear);
                            result.push(item.volThreeyear);
                            result.push(item.batchSize);
                            result.push(item.currencyName);
                            result.push(item.cogS1);
                            result.push(item.cogS2);
                            result.push(item.cogS3);
                           ");
            WriteLiteral(@" result.push(item.freight);
                            result.push(item.totalCIFCost);
                            result.push(item.contributionThreeYear);
                            result.push(item.costofThreeBatches);
                            result.push(item.analyticalCost);
                            result.push(item.beCost);
                            result.push(item.rldCost);
                            result.push(item.randDCost);
                            result.push(item.filingCost);
                            result.push(item.stabilityCost);
                            result.push(item.totalInvest);
                            result.push(item.otherCost);
                            result.push(item.apiSource);
                            result.push(item.roi);
                           
                            return result;
                        });
                        dataTableASIA.clear();
                        dataTableASIA.rows.add(result); // add to ");
            WriteLiteral(@"DataTable instance
                        dataTableASIA.draw();

                 var LATAMjsonObject = response.latamCountryDetails;
                        var result = LATAMjsonObject.map(function (item) {
                            var result = [];
                            result.push(item.countryName);
                            result.push(item.pidfStrength);
                            result.push(item.packSizeName);
                            result.push(item.packingName);
                            result.push(item.cifPricePerPack1);
                            result.push(item.qtyOneyear);
                            result.push(item.volOneyear);
                             result.push(item.cifPricePerPack2);
                            result.push(item.qtyTwoyear);
                            result.push(item.volTwoyear);
                            result.push(item.cifPricePerPack3);
                            result.push(item.qtyThreeyear);
                            ");
            WriteLiteral(@"result.push(item.volThreeyear);
                            result.push(item.batchSize);
                            result.push(item.currencyName);
                            result.push(item.cogS1);
                            result.push(item.cogS2);
                            result.push(item.cogS3);
                            result.push(item.freight);
                            result.push(item.totalCIFCost);
                            result.push(item.contributionThreeYear);
                            result.push(item.costofThreeBatches);
                            result.push(item.analyticalCost);
                            result.push(item.beCost);
                            result.push(item.rldCost);
                            result.push(item.randDCost);
                            result.push(item.filingCost);
                            result.push(item.stabilityCost);
                            result.push(item.totalInvest);
                            result.push(ite");
            WriteLiteral(@"m.otherCost);
                            result.push(item.apiSource);
                            result.push(item.roi);
                           
                            return result;
                        });
                        dataTableLATAM.clear();
                        dataTableLATAM.rows.add(result); // add to DataTable instance
                dataTableLATAM.draw();

                 var CISjsonObject = response.cisCountryDetails;
                        var result = CISjsonObject.map(function (item) {
                            var result = [];
                            result.push(item.countryName);
                            result.push(item.pidfStrength);
                            result.push(item.packSizeName);
                            result.push(item.packingName);
                            result.push(item.cifPricePerPack1);
                            result.push(item.qtyOneyear);
                            result.push(item.volOneyear);
        ");
            WriteLiteral(@"                     result.push(item.cifPricePerPack2);
                            result.push(item.qtyTwoyear);
                            result.push(item.volTwoyear);
                            result.push(item.cifPricePerPack3);
                            result.push(item.qtyThreeyear);
                            result.push(item.volThreeyear);
                            result.push(item.batchSize);
                            result.push(item.currencyName);
                            result.push(item.cogS1);
                            result.push(item.cogS2);
                            result.push(item.cogS3);
                            result.push(item.freight);
                            result.push(item.totalCIFCost);
                            result.push(item.contributionThreeYear);
                            result.push(item.costofThreeBatches);
                            result.push(item.analyticalCost);
                            result.push(item.beCost);
        ");
            WriteLiteral(@"                    result.push(item.rldCost);
                            result.push(item.randDCost);
                            result.push(item.filingCost);
                            result.push(item.stabilityCost);
                            result.push(item.totalInvest);
                            result.push(item.otherCost);
                            result.push(item.apiSource);
                            result.push(item.roi);
                           
                            return result;
                        });
                        dataTableCIS.clear();
                        dataTableCIS.rows.add(result); // add to DataTable instance
                        dataTableCIS.draw();

                 if (response.uploadfilelist!=null) {
                            $.each(response.uploadfilelist, function (i, List) {
                                var newRow = $(""<tr>"");
                                var cols = """";
                                cols += '<td>");
            WriteLiteral(@"<a href=""' + List.saveFilePath + '"" download=""'+ List.saveFileName + '"" target=""_blank"">' + List.saveFileName + '</td>';
                                newRow.append(cols);
                                $(""table.fileorder-list"").append(newRow);

                            });

                        }
                        else {
                            var newRow = $(""<tr>"");
                                var cols = """";
                                cols += '<td>Data not available</td>';
                                newRow.append(cols);
                                $(""table.fileorder-list"").append(newRow);
                        }


            },
            failure: function () {

            }
        });


    });



");
            EndContext();
            BeginContext(59944, 17, true);
            WriteLiteral("      \r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> SharedLocalizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<EmcureCERI.Web.Models.PIDFPViewModels.PIDFNewVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
