#pragma checksum "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PIDF_PIDF), @"mvc.1.0.view", @"/Views/PIDF/PIDF.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PIDF/PIDF.cshtml", typeof(AspNetCore.Views_PIDF_PIDF))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\_ViewImports.cshtml"
using EmcureCERI.Web;

#line default
#line hidden
#line 2 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\_ViewImports.cshtml"
using EmcureCERI.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"abd3faaa32e28eed6db3f35dcb33d8b67b75f1b8", @"/Views/PIDF/PIDF.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e39e5b73b640da0f63a8b55154c17e2e753e04bc", @"/Views/_ViewImports.cshtml")]
    public class Views_PIDF_PIDF : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<EmcureCERI.Web.Models.PIDFPViewModels.PIDFViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap-datetimepicker/js/bootstrap-datetimepicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-primary"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "DRF", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "DRFList", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-responsive/js/dataTables.responsive.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-buttons/js/dataTables.buttons.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(152, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml"
  
	ViewData["Title"] = @SharedLocalizer[" Add PIDF"].Value;

#line default
#line hidden
            BeginContext(220, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(222, 89, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b89384", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(311, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(313, 96, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b810637", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(409, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(411, 90, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b811891", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(501, 149, true);
            WriteLiteral("\r\n\r\n<!--script src=\"~/lib/bootstrap-datetimepicker/js/moment-with-locales.js\"></!--script>\r\n<script-- src=\"~/lib/jquery/dist/jquery.js\"></script-->\r\n");
            EndContext();
            BeginContext(650, 85, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b813304", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(735, 987, true);
            WriteLiteral(@"
<!--link href=""~/css/main.css"" rel=""stylesheet"" />-->

<div class=""content-wrapper pt-5"">
	<!-- Main content -->
	<section class=""content"">
		<div class=""container-fluid"">
			<!-- Small boxes (Stat box) -->
			<!-- Main row -->
			<div class=""row"">
				<section class=""col-lg-12 "">
					<!-- Custom tabs (Charts with tabs)-->
					<div class=""card"">
						<div class=""card-header"">
							<h3 class=""card-title"">
								<i class=""far fa-plus-square mr-2""></i> Product Identification Form
							</h3>
							<div class=""card-tools"">
								<ul class=""nav nav-pills ml-auto"">
									<li class=""nav-item mr-3"">
										<a class=""btn btn-outline-primary"" href=""/PIDF/PIDFList""><i class=""far fa-list-alt mr-1""></i> Project List</a>
									</li>

									<li class=""nav-item"">
										<a class=""btn btn-primary"" href=""/PIDF/PIDF""><i class=""far fa-plus-square mr-1""></i> Create New Project</a>
									</li>
								</ul>
							</div>
						</div>

");
            EndContext();
            BeginContext(2023, 82, true);
            WriteLiteral("\t\t\t\t\t\t<div class=\"row\"><div class=\"col-sm-6 ml-3\"><strong>Note : </strong> <small>");
            EndContext();
            BeginContext(2106, 49, false);
#line 48 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml"
                                                                                               Write(SharedLocalizer["All fields are mandatory"].Value);

#line default
#line hidden
            EndContext();
            BeginContext(2155, 1662, true);
            WriteLiteral(@"</small></div></div>
						<div class=""card-body"">
							<div class=""row mt-3"">
								<div class=""col-sm-6"">
									<div class=""form-group"">
										<label>Product Name</label>
										<input type=""text"" placeholder=""Product Name"" class=""form-control"" id=""ProductName"" name=""ProductName"" />
										<small class=""text-danger"" id=""ProductName_error""></small>
									</div>
								</div>
								<div class=""col-sm-6"">
									<div class=""form-group"">
										<label>Strengths</label>
										<input type=""text"" placeholder=""Strengths"" class=""form-control"" id=""Strengths"" name=""Strengths"" />
										<small class=""text-danger"" id=""Strengths_error""></small>
									</div>
								</div>
							</div>

							<div class=""row mt-5"">
								<div class=""col-sm-12"">
									<table id=""PIDFTable"" class=""table table-striped table-bordered dt-responsive nowrap"" style=""width:100%"">
										<thead>
											<tr>
												<th>Region</th>
												<th>Country</th>
								");
            WriteLiteral(@"				<th>Packing</th>
												<th>Batch size</th>
												<th>Pack size</th>
												<th>COGS</th>
												<th>CIF Price Per Pack</th>
												<th>Freight</th>
												<th>Total CIF cost</th>
												<th>CIF Price Per Unit</th>
												<th>% Count</th>
												<th>Contribution (3 yrs)</th>
												<th>Cost of 3 batches</th>
												<th>Analytical Cost</th>
												<th>BE cost</th>
												<th>RLD cost</th>
												<th>R&D cost</th>
												<th>Filing cost</th>
												<th>Stability cost</th>
												<th>Total Invest</th>
												<th>ROI</th>
");
            EndContext();
            BeginContext(3850, 322, true);
            WriteLiteral(@"											</tr>
										</thead>
									</table>
								</div>
							</div>
							<div class=""card card-primary mt-4"">
								<div class=""card-header"">
									<h3 class=""card-title"">ADD PIDF WITH COUNTRY</h3>
								</div>
								<!-- /.card-header -->
								<!-- SELECT2 EXAMPLE -->
								<div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 4172, "\"", 4180, 0);
            EndWriteAttribute();
            BeginContext(4181, 358, true);
            WriteLiteral(@">

									<!-- /.card-header -->
									<div class=""card-body"">
										<div class=""row"">
											<div class=""col-md-6"">
												<div class=""form-group"">
													<label>Region</label>
													<select class=""form-control select2bs4"" onchange=""GetCountryList()"" name=""Region"" id=""IPD_region"" style=""width: 100%;"">
														");
            EndContext();
            BeginContext(4539, 47, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b818931", async() => {
                BeginContext(4557, 20, true);
                WriteLiteral("Please select Region");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4586, 404, true);
            WriteLiteral(@"
													</select>
													<small class=""text-danger"" id=""IPD_region_error""></small>
												</div>
											</div>
											<div class=""col-md-6"">
												<!-- /.form-group -->
												<div class=""form-group"">
													<label>Country</label>
													<select class=""form-control select2bs4"" name=""Country"" id=""IPD_country"" style=""width: 100%;"">
														");
            EndContext();
            BeginContext(4990, 48, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b820742", async() => {
                BeginContext(5008, 21, true);
                WriteLiteral("Please select Country");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5038, 555, true);
            WriteLiteral(@"
													</select>
													<small class=""text-danger"" id=""IPD_country_error""></small>
												</div>
												<!-- /.form-group -->
											</div>
											<!-- /.col -->
										</div>

										<h3 class=""text-divider""><span>INSERT PIDF DEATILS</span></h3>
										<div class=""row"">
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>Packing</label>
													<select class=""form-control select2bs4"" name=""Packing"" id=""IPD_packing"" style=""width: 100%;"">
														");
            EndContext();
            BeginContext(5593, 48, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b822709", async() => {
                BeginContext(5611, 21, true);
                WriteLiteral("Please select Packing");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5641, 2948, true);
            WriteLiteral(@"
													</select>
													<small class=""text-danger"" id=""IPD_packing_error""></small>
												</div>
											</div>
											<div class=""col-md-2"">
												<div class=""form-group"">
													<label>Batch size(in pack)</label>
													<input type=""number"" min=""0"" placeholder=""Enter Batch size eg. 100"" class=""form-control"" name=""Batch_size"" id=""IPD_batchsizeinpack"" />
													<small class=""text-danger"" id=""IPD_batchsizeinpack_error""></small>
												</div>
											</div>
											<div class=""col-md-2"">
												<div class=""form-group"">
													<label>Pack size</label>
													<input type=""number"" min=""0"" placeholder=""Enter Pack size eg. 100"" class=""form-control"" name=""Pack_size"" id=""IPD_packsize"" />
													<small class=""text-danger"" id=""IPD_packsize_error""></small>
												</div>
											</div>
											<div class=""col-md-2"">
												<div class=""form-group"">
													<label>COGS</label>
													<input typ");
            WriteLiteral(@"e=""number"" min=""0"" placeholder=""Enter COGS eg. 100"" class=""form-control"" onkeyup=""Changecogs()"" onchange=""Changecogs()"" name=""COGS"" id=""IPD_cogs"" />
													<small class=""text-danger"" id=""IPD_cogs_error""></small>
												</div>
											</div>
											<div class=""col-md-2"">
												<div class=""form-group"">
													<label>CIF Price Per Pack</label>
													<input type=""number"" min=""0"" onkeyup=""ChangeCIFPricePerPack()"" onchange=""ChangeCIFPricePerPack()"" placeholder=""Enter CIF Price Per Pack eg. 50"" class=""form-control"" name=""CIF_Price_Per_Pack"" id=""IPD_cifpriceperpack"" />
													<small class=""text-danger"" id=""IPD_cifpriceperpack_error""></small>
												</div>
											</div>
										</div>
										<!-- /.row -->
										<div class=""row"">
											<div class=""col-md-3"">
												<div class=""form-group"">
													<div class=""form-group"">
														<label>Freight (5% on COGS)</label>
														<input type=""number"" min=""0"" readonly cla");
            WriteLiteral(@"ss=""form-control"" name=""Freight"" id=""IPD_freight"" />
													</div>
												</div>
											</div>
											<div class=""col-md-2"">
												<div class=""form-group"">
													<label>Total CIF cost</label>
													<input type=""text"" readonly class=""form-control"" name=""Total_CIF_cost"" id=""IPD_totalcifcost"" />
												</div>
											</div>
											<div class=""col-md-2"">
												<div class=""form-group"">
													<label>CIF Price Per Unit</label>
													<input type=""text"" readonly class=""form-control"" name=""CIF_Price_Per_Unit"" id=""IPD_cifpriceperunit"" />
												</div>
											</div>
											<div class=""col-md-2"">
												<div class=""form-group"">
													<label>% Count</label>
													<input type=""text"" readonly class=""form-control"" name=""Count"" id=""IPD_count"" />
												</div>
											</div>
");
            EndContext();
            BeginContext(8845, 7841, true);
            WriteLiteral(@"										</div>
										<!-- /.row -->
										<div class=""row mt-4"">
											<table id=""example2"" class=""table table-bordered"">
												<thead>
													<tr>
														<th scope=""col"">#</th>
														<th scope=""col"">Quantity</th>
														<th scope=""col"">Volume</th>
														<th scope=""col"">COGS</th>
														<th scope=""col"">Contri</th>
													</tr>
												</thead>
												<tbody>
													<tr>
														<th scope=""row"">Year 1</th>
														<td>
															<input type=""number"" min=""0"" onkeyup=""Year1Calculation()"" onchange=""Year1Calculation()"" placeholder=""Enter Quantity"" class=""form-control"" name=""Quantity1"" id=""IPD_quantity1"" />
															<small class=""text-danger"" id=""IPD_quantity1_error""></small>
														</td>
														<td>
															<input type=""number"" min=""0"" readonly placeholder=""Volume"" class=""form-control"" name=""Volume1"" id=""IPD_volume1"" />
														</td>
														<td>
					");
            WriteLiteral(@"										<input type=""number"" min=""0"" readonly placeholder=""COGS"" class=""form-control"" name=""COGS1"" id=""IPD_cogs1"" />
														</td>
														<td>
															<input type=""number"" min=""0"" readonly placeholder=""Contri"" class=""form-control"" name=""Contri1"" id=""IPD_contri1"" />
														</td>
													</tr>
													<tr>
														<th scope=""row"">Year 2</th>
														<td>
															<input type=""number"" min=""0"" onkeyup=""Year2Calculation()"" onchange=""Year2Calculation()"" placeholder=""Enter Quantity"" class=""form-control"" name=""Quantity2"" id=""IPD_quantity2"" />
															<small class=""text-danger"" id=""IPD_quantity2_error""></small>
														</td>
														<td>
															<input type=""number"" min=""0"" readonly placeholder=""Volume"" class=""form-control"" name=""Volume2"" id=""IPD_volume2"" />
														</td>
														<td>
															<input type=""number"" min=""0"" readonly placeholder=""COGS"" class=""form-control"" name=""COGS2"" id=""IPD_cogs2"" />
	");
            WriteLiteral(@"													</td>
														<td>
															<input type=""number"" min=""0"" readonly placeholder=""Contri"" class=""form-control"" name=""Contri2"" id=""IPD_contri2"" />
														</td>
													</tr>
													<tr>
														<th scope=""row"">Year 3</th>
														<td>
															<input type=""number"" min=""0"" onkeyup=""Year3Calculation()"" onchange=""Year3Calculation()"" placeholder=""Enter Quantity"" class=""form-control"" name=""Quantity3"" id=""IPD_quantity3"" />
															<small class=""text-danger"" id=""IPD_quantity3_error""></small>
														</td>
														<td>
															<input type=""number"" min=""0"" readonly placeholder=""Volume"" class=""form-control"" name=""Volume3"" id=""IPD_volume3"" />
														</td>
														<td>
															<input type=""number"" min=""0"" readonly placeholder=""COGS"" class=""form-control"" name=""COGS3"" id=""IPD_cogs3"" />
														</td>
														<td>
															<input type=""number"" min=""0"" readonly placeholder=""Contri"" class=""");
            WriteLiteral(@"form-control"" name=""Contri3"" id=""IPD_contri3"" />
														</td>
													</tr>
												</tbody>
											</table>
										</div>

										<div class=""row mt-4"">
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>Contribution (3 yrs)</label>
													<input type=""text"" readonly class=""form-control"" name=""Contribution"" id=""IPD_contribution"" />
												</div>
											</div>
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>Cost of 3 batches</label>
													<input type=""number"" min=""0"" onkeyup=""CalculateTotalInvest()"" onchange=""CalculateTotalInvest()"" placeholder=""Cost of 3 batches"" class=""form-control"" name=""Cost_of_3_batches"" id=""IPD_costof3batches"" />
													<small class=""text-danger"" id=""IPD_costof3batches_error""></small>
												</div>
											</div>
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>Analytical Cost</la");
            WriteLiteral(@"bel>
													<input type=""number"" min=""0"" placeholder=""Analytical Cost"" class=""form-control"" name=""Analytical_Cost"" id=""IPD_analyticalcost"" />
													<small class=""text-danger"" id=""IPD_analyticalcost_error""></small>
												</div>
											</div>
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>BE cost</label>
													<input type=""number"" min=""0"" placeholder=""BE cost"" class=""form-control"" name=""BE_cost"" id=""IPD_becost"" />
													<small class=""text-danger"" id=""IPD_becost_error""></small>
												</div>
											</div>
										</div>

										<div class=""row mt-2"">
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>RLD cost</label>
													<input type=""number"" min=""0"" placeholder=""RLD cost"" class=""form-control"" name=""RLD_cost"" id=""IPD_rldcost"" />
													<small class=""text-danger"" id=""IPD_rldcost_error""></small>
												</div>
											</div>
											<di");
            WriteLiteral(@"v class=""col-md-3"">
												<div class=""form-group"">
													<label>R&D cost</label>
													<input type=""number"" min=""0"" placeholder=""R&D cost"" class=""form-control"" name=""RnD_cost"" id=""IPD_rndcost"" />
													<small class=""text-danger"" id=""IPD_rndcost_error""></small>
												</div>
											</div>
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>Filing cost</label>
													<input type=""number"" min=""0"" placeholder=""Filing cost"" class=""form-control"" name=""Filing_cost"" id=""IPD_filingcost"" />
													<small class=""text-danger"" id=""IPD_filingcost_error""></small>
												</div>
											</div>
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>Stability cost</label>
													<input type=""number"" min=""0"" onkeyup=""CalculateTotalInvest()"" onchange=""CalculateTotalInvest()"" placeholder=""Stability cost"" class=""form-control"" name=""Stability_cost"" id=""IPD_stabilitycost"" />
						");
            WriteLiteral(@"							<small class=""text-danger"" id=""IPD_stabilitycost_error""></small>
												</div>
											</div>
										</div>
										<div class=""row mt-2"">
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>Total Invest</label>
													<input type=""number"" min=""0"" readonly class=""form-control"" name=""Total_Invest"" id=""IPD_totalinvest"" />
												</div>
											</div>
											<div class=""col-md-3"">
												<div class=""form-group"">
													<label>ROI</label>
													<input type=""number"" min=""0"" placeholder=""ROI"" class=""form-control"" name=""ROI"" id=""IPD_roi"" />
													<small class=""text-danger"" id=""IPD_roi_error""></small>
												</div>
											</div>

										</div>
									</div>
									<!-- /.card-body -->
									<div class=""card-footer"">
										<button type=""button"" class=""btn btn-primary"" onclick=""AddNew()"">Add New</button>
									</div>
								</div>

							</div>


							<div cla");
            WriteLiteral(@"ss=""row mt-3"">
								<div class=""col-sm-6"">
									<div class=""form-group"">
										<label>Upload File</label>
										<input type=""file"" file-module=""UploadFile"" placeholder=""Upload File"" class=""form-control"" id=""UploadFile"" name=""UploadFile"" multiple />
									
										<small class=""text-danger"" id=""UploadFile_error""></small>
									</div>
								</div>
								<div class=""col-sm-6"">
									<input type=""button"" id=""btnUpload"" value=""Upload Files"" />
								</div>
							</div>



						</div>
						<div class=""card-footer"">
							<button type=""submit"" class=""btn btn-primary mr-3"" onclick=""SubmitForm()"">Submit</button>
							");
            EndContext();
            BeginContext(16686, 117, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b835867", async() => {
                BeginContext(16768, 31, false);
#line 378 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml"
                                                                                                        Write(SharedLocalizer["Cancel"].Value);

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16803, 46, true);
            WriteLiteral("\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<!-- /.card-body -->\r\n");
            EndContext();
            BeginContext(16862, 174, true);
            WriteLiteral("\r\n\t\t\t\t\t\t<!-- /.card -->\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t</div>\r\n\t\t\t<!-- /.row (main row) -->\r\n\t\t\t<!-- /.container-fluid -->\r\n\t</section>\r\n\t<!-- /.content -->\r\n</div>\r\n\r\n");
            EndContext();
            BeginContext(17049, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(17071, 3, true);
                WriteLiteral("\r\n\t");
                EndContext();
                BeginContext(17074, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b838651", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(17143, 3, true);
                WriteLiteral("\r\n\t");
                EndContext();
                BeginContext(17146, 80, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b839908", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(17226, 3, true);
                WriteLiteral("\r\n\t");
                EndContext();
                BeginContext(17229, 87, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b841165", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(17316, 3, true);
                WriteLiteral("\r\n\t");
                EndContext();
                BeginContext(17319, 87, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b842422", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(17406, 3, true);
                WriteLiteral("\r\n\t");
                EndContext();
                BeginContext(17409, 81, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "abd3faaa32e28eed6db3f35dcb33d8b67b75f1b843679", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(17490, 707, true);
                WriteLiteral(@"

	<script>
		var dataTable;
        var JsonListArray = [];
        var JSONUploadedFilesList = [];
		$(document).ready(function () {
			dataTable = $('#PIDFTable').DataTable({
				responsive: true,
				autoWidth: true,
				paging: false,
				bFilter: false,
				bInfo: false
			});

			GetRegionList();
			GetPackingList();
		});
		$(function () {
			//Initialize Select2 Elements
			$('.select2').select2()

			//Initialize Select2 Elements
			$('.select2bs4').select2({
				theme: 'bootstrap4'
			});
		});

		function GetRegionList() {
			var data = {};
			var defaultValue = ""<option value='0'>Please select Region</option>"";
			$.ajax({
					type: ""POST"",
					url: '");
                EndContext();
                BeginContext(18198, 35, false);
#line 437 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml"
                     Write(Url.Action("GetRegionList", "PIDF"));

#line default
#line hidden
                EndContext();
                BeginContext(18233, 1030, true);
                WriteLiteral(@"/',
					//contentType: ""application/json; charset=utf-8"",
					dataType: ""json"",
					data: data,
					success: function (response) {
						$('#IPD_region').empty();
						if (response.data.length > 0) {
							$('#IPD_region').empty().append(
								defaultValue
							);
							for (var i = 0; i < response.data.length; i++) {
								$('#IPD_region').append(
									""<option value='"" + response.data[i].Id + ""'>"" + response.data[i].Continent + ""</option>""
								);
							}
						}
						else {
							$('#IPD_region').empty().append(
								defaultValue
							);
						}
						$('#IPD_region').val(0);
					},
				failure: function () {
					$('#IPD_region').empty().append(
								defaultValue
					);
					$('#IPD_region').val(0);
				}
				});
		}

		function GetCountryList() {
			var data = {
				id: parseInt($('#IPD_region option:selected').val())
			};
			var defaultValue = ""<option value='0'>Please select Country</option>"";
			$.ajax({
					type: ""POST"",
					");
                WriteLiteral("url: \'");
                EndContext();
                BeginContext(19264, 36, false);
#line 476 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml"
                     Write(Url.Action("GetCountryList", "PIDF"));

#line default
#line hidden
                EndContext();
                BeginContext(19300, 919, true);
                WriteLiteral(@"/',
					dataType: ""json"",
					data: data,
				success: function (response) {

						$('#IPD_country').empty();
						if (response.data.length > 0) {
							$('#IPD_country').empty().append(
								defaultValue
							);
							for (var i = 0; i < response.data.length; i++) {
								$('#IPD_country').append(
									""<option value='"" + response.data[i].Id + ""'>"" + response.data[i].Country + ""</option>""
								);
							}
						}
						else {
							$('#IPD_country').empty().append(
								defaultValue
							);
						}
						$('#IPD_country').val(0);
					},
				failure: function () {
						$('#IPD_country').empty().append(
								defaultValue
					);
					$('#IPD_country').val(0);
					}
				});
		}

		function GetPackingList() {
			var data = {};
			var defaultValue = ""<option value='0'>Please select Packing</option>"";
			$.ajax({
					type: ""POST"",
					url: '");
                EndContext();
                BeginContext(20220, 36, false);
#line 513 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml"
                     Write(Url.Action("GetPackingList", "PIDF"));

#line default
#line hidden
                EndContext();
                BeginContext(20256, 2513, true);
                WriteLiteral(@"/',
					dataType: ""json"",
					data: data,
					success: function (response) {
						$('#IPD_packing').empty();
						if (response.data.length > 0) {
							$('#IPD_packing').empty().append(
								defaultValue
							);
							for (var i = 0; i < response.data.length; i++) {
								$('#IPD_packing').append(
									""<option value='"" + response.data[i].Id + ""'>"" + response.data[i].PackingName + ""</option>""
								);
							}
						}
						else {
							$('#IPD_packing').empty().append(
								defaultValue
							);
						}
						$('#IPD_packing').val(0);
				},
				failure: function () {
						$('#IPD_packing').empty().append(
								defaultValue
					);
					$('#IPD_packing').val(0);
					}
				});
		}

		function SubmitForm() {
			var isValid = true;

			if ($('#ProductName').val() == null || $('#ProductName').val() == """") {
				$('#ProductName_error').empty().append(""The 'Product Name' field is required."");
				isValid = false;
			}
			else {
				$('#ProductNam");
                WriteLiteral(@"e_error').empty();
			}

			if ($('#Strengths').val() == null || $('#Strengths').val() == """") {
				$('#Strengths_error').empty().append(""The 'Strengths' field is required."");
				isValid = false;
			}
			else {
				$('#Strengths_error').empty();
			}

            //if (document.getElementById('UploadFile').files.length == 0) {
            //    $('#UploadFile_error').empty().append(""Please select file."");
            //    isValid = false;
            //}
            //else {
            //    $('#UploadFile_error').empty();
            //}

			if (isValid) {
				var data = {
					""PidfID"": 0,
					""PIDFNo"": """",
					""PidfDate"": GetDate(),
					""ProjectorProductID"": 0,
					""ProjectorProductName"": $('#ProductName').val(),
					""Strengths"": $('#Strengths').val(),
					""PidfStatusID"": 1,
					""PidfStatus"": ""Pending Approval"",
					""ApprovedById1"": 0,
					""ApprovedByDate1"": GetDate(),
					""ApprovedById2"": 0,
					""ApprovedByDate2"": GetDate(),
					""ApprovedById3"": 0,
					""Ap");
                WriteLiteral(@"provedByDate3"": GetDate(),
					""ApprovedById4"": 0,
					""ApprovedByDate4"": GetDate(),
					""PidfLastStatusID"": 1,
					""PidfLastStatus"": ""Pending Approval"",
					""IsActive"": true,
					""Createdby"": 0,
					""CreatedDate"": GetDate(),
					""Modifiedby"": 0,
					""ModifiedDate"": GetDate(),
                    ""objPIDF_CountryDetails"": JsonListArray,
					""uploadedfilesdetails"":JSONUploadedFilesList
				};

				$.ajax({
					type: ""POST"",
					url: '");
                EndContext();
                BeginContext(22770, 36, false);
#line 602 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml"
                     Write(Url.Action("AddPIDFDetails", "PIDF"));

#line default
#line hidden
                EndContext();
                BeginContext(22806, 365, true);
                WriteLiteral(@"/',
					dataType: ""json"",
					data: data,
					success: function (response) {
                        if (response.data == 'success') {

							if (window.confirm('PIDF submited Successfully.'))
													{
														location.reload();
													}
													else
													{
														clearPreviousFormData();
													}


");
                EndContext();
                BeginContext(24001, 134, true);
                WriteLiteral("\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\talert(\'PIDF not submited Successfully.\');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfailure: function () {\r\n");
                EndContext();
                BeginContext(24280, 15537, true);
                WriteLiteral(@"					}
				});
			}
		}

		function GetDate() {
			var today = new Date();
			var dd = String(today.getDate()).padStart(2, '0');
			var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
			var yyyy = today.getFullYear();

			today = yyyy + '-' + mm + '-' + dd;
			return today;
		}

		function AddNew() {
			var isValid = true;
			if ($('#IPD_region option:selected').val() == 0) {
				$('#IPD_region_error').empty().append(""The 'Region' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_region_error').empty();
			}

			if ($('#IPD_country option:selected').val() == 0) {
				$('#IPD_country_error').empty().append(""The 'Country' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_country_error').empty();
			}

			if ($('#IPD_packing option:selected').val() == 0) {
				$('#IPD_packing_error').empty().append(""The 'Packing' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_packing_error').empty();
			}
");
                WriteLiteral(@"
			if ($('#IPD_batchsizeinpack').val() == null || $('#IPD_batchsizeinpack').val() == """") {
				$('#IPD_batchsizeinpack_error').empty().append(""The 'Batch size(in pack)' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_batchsizeinpack_error').empty();
			}

			if ($('#IPD_packsize').val() == null || $('#IPD_packsize').val() == """") {
				$('#IPD_packsize_error').empty().append(""The 'Pack size' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_packsize_error').empty();
			}

			if ($('#IPD_cogs').val() == null || $('#IPD_cogs').val() == """") {
				$('#IPD_cogs_error').empty().append(""The 'COGS' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_cogs_error').empty();
			}

			if ($('#IPD_cifpriceperpack').val() == null || $('#IPD_cifpriceperpack').val() == """") {
				$('#IPD_cifpriceperpack_error').empty().append(""The 'CIF Price Per Pack' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_cifpriceperpack_err");
                WriteLiteral(@"or').empty();
			}

			if ($('#IPD_quantity1').val() == null || $('#IPD_quantity1').val() == """") {
				$('#IPD_quantity1_error').empty().append(""The 'Quantity' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_quantity1_error').empty();
			}

			if ($('#IPD_quantity2').val() == null || $('#IPD_quantity2').val() == """") {
				$('#IPD_quantity2_error').empty().append(""The 'Quantity' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_quantity2_error').empty();
			}

			if ($('#IPD_quantity3').val() == null || $('#IPD_quantity3').val() == """") {
				$('#IPD_quantity3_error').empty().append(""The 'Quantity' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_quantity3_error').empty();
			}

			if ($('#IPD_costof3batches').val() == null || $('#IPD_costof3batches').val() == """") {
				$('#IPD_costof3batches_error').empty().append(""The 'Cost of 3 batches' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_costof3ba");
                WriteLiteral(@"tches_error').empty();
			}

			if ($('#IPD_analyticalcost').val() == null || $('#IPD_analyticalcost').val() == """") {
				$('#IPD_analyticalcost_error').empty().append(""The 'Analytical Cost' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_analyticalcost_error').empty();
			}

			if ($('#IPD_becost').val() == null || $('#IPD_becost').val() == """") {
				$('#IPD_becost_error').empty().append(""The 'BE cost' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_becost_error').empty();
			}

			if ($('#IPD_rldcost').val() == null || $('#IPD_rldcost').val() == """") {
				$('#IPD_rldcost_error').empty().append(""The 'RLD cost' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_rldcost_error').empty();
			}

			if ($('#IPD_rndcost').val() == null || $('#IPD_rndcost').val() == """") {
				$('#IPD_rndcost_error').empty().append(""The 'R&D cost' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_rndcost_error').empty();");
                WriteLiteral(@"
			}

			if ($('#IPD_filingcost').val() == null || $('#IPD_filingcost').val() == """") {
				$('#IPD_filingcost_error').empty().append(""The 'Filing cost' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_filingcost_error').empty();
			}

			if ($('#IPD_stabilitycost').val() == null || $('#IPD_stabilitycost').val() == """") {
				$('#IPD_stabilitycost_error').empty().append(""The 'Stability cost' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_stabilitycost_error').empty();
			}

			if ($('#IPD_roi').val() == null || $('#IPD_roi').val() == """") {
				$('#IPD_roi_error').empty().append(""The 'ROI' field is required."");
				isValid = false;
			}
			else {
				$('#IPD_roi_error').empty();
			}

			if (isValid) {
				var data = {
					""PidfDetailID"": 0,
					""PidfID"": 0,
					""PidfNo"": """",
					""ContinentID"": $('#IPD_region option:selected').val(),
					""ContinentName"": $('#IPD_region option:selected').text(),
					""CountryID"": $('#IPD_country o");
                WriteLiteral(@"ption:selected').val(),
					""CountryName"": $('#IPD_country option:selected').text(),
					""PatentStatusID"": 0,
					""PatentStatus"": """",
					""PackingID"": $('#IPD_packing option:selected').val(),
					""PackingName"": $('#IPD_packing option:selected').text(),
					""BatchSize"": $('#IPD_batchsizeinpack').val(),
					""PackSize"": $('#IPD_packsize').val(),
					""COGS"": $('#IPD_cogs').val(),
					""Freight"": $('#IPD_freight').val(),
					""TotalCIFCost"": $('#IPD_totalcifcost').val(),
					""CIFPricePerUnit"": $('#IPD_cifpriceperunit').val(),
					""CIFPricePerPack"": $('#IPD_cifpriceperpack').val(),
					""ProfitPerPack"": 1,
					""PercentCont"": $('#IPD_count').val(),
					""QtyOneyear"": $('#IPD_quantity1').val(),
					""QtyTwoyear"": $('#IPD_quantity2').val(),
					""QtyThreeyear"": $('#IPD_quantity3').val(),
					""VolOneyear"": $('#IPD_volume1').val(),
					""VolTwoyear"": $('#IPD_volume2').val(),
					""VolThreeyear"": $('#IPD_volume3').val(),
					""ContriOne"": $('#IPD_contri1').val(),
					""ContriTwo"": $('#IP");
                WriteLiteral(@"D_contri2').val(),
					""ContriThree"": $('#IPD_contri3').val(),
					""COGS1"": $('#IPD_cogs1').val(),
					""COGS2"": $('#IPD_cogs2').val(),
					""COGS3"": $('#IPD_cogs3').val(),
					""ContributionThreeYear"": $('#IPD_contribution').val(),
					""CostofThreeBatches"": $('#IPD_costof3batches').val(),
					""RandDCost"": $('#IPD_rndcost').val(),
					""FilingCost"": $('#IPD_filingcost').val(),
					""StabilityCost"": $('#IPD_stabilitycost').val(),
					""TotalInvest"": $('#IPD_totalinvest').val(),
					""ROI"": $('#IPD_roi').val(),
					""RejectionReason"": """",
					""AnalyticalCost"": $('#IPD_analyticalcost').val(),
					""BECost"": $('#IPD_becost').val(),
					""RLDCost"": $('#IPD_rldcost').val(),
					""IsActive"": true,
					""Createdby"": 0,
					""CreatedDate"": GetDate(),
					""Modifiedby"": 0,
					""ModifiedDate"": GetDate()
				}
				JsonListArray.push(data);
				InsertDataIntoTable();
			}
		}

		function InsertDataIntoTable() {
			var jsonObject = JsonListArray;
			var result = jsonObject.map(function (i");
                WriteLiteral(@"tem) {
				var result = [];
				result.push(item.ContinentName);
				result.push(item.CountryName);
				result.push(item.PackingName);
				result.push(item.BatchSize);
				result.push(item.PackSize);
				result.push(item.COGS);
				result.push(item.CIFPricePerPack);
				result.push(item.Freight);
				result.push(item.TotalCIFCost);
				result.push(item.CIFPricePerUnit);
				result.push(item.PercentCont);
				result.push(item.ContributionThreeYear);
				result.push(item.CostofThreeBatches);
				result.push(item.AnalyticalCost);
				result.push(item.BECost);
				result.push(item.RLDCost);
				result.push(item.RandDCost);
				result.push(item.FilingCost);
				result.push(item.StabilityCost);
				result.push(item.TotalInvest);
				result.push(item.ROI);
				return result;
			});
			dataTable.clear();
			dataTable.rows.add(result); // add to DataTable instance
			dataTable.draw().buttons().container().appendTo('#PIDFTable_wrapper .col-md-6:eq(0)'); // always redraw
			clearPreviousData(");
                WriteLiteral(@");
		}

		function clearPreviousFormData() {
			$('#ProductName').val('');
			$('#Strengths').val('');
			clearPreviousData();
		}

		function clearPreviousData() {
			$('#IPD_region').val(0);
			$('#IPD_country').val(0);
			$('#IPD_packing').val(0);
			$('#IPD_batchsizeinpack').val('');
			$('#IPD_packsize').val('');
			$('#IPD_cogs').val('');
			$('#IPD_freight').val('');
			$('#IPD_totalcifcost').val('');
			$('#IPD_cifpriceperunit').val('');
			$('#IPD_cifpriceperpack').val('');
			$('#IPD_count').val('');
			$('#IPD_quantity1').val('');
			$('#IPD_quantity2').val('');
			$('#IPD_quantity3').val('');
			$('#IPD_volume1').val('');
			$('#IPD_volume2').val('');
			$('#IPD_volume3').val('');
			$('#IPD_contri1').val('');
			$('#IPD_contri2').val('');
			$('#IPD_contri3').val('');
			$('#IPD_cogs1').val('');
			$('#IPD_cogs2').val('');
			$('#IPD_cogs3').val('');
			$('#IPD_contribution').val('');
			$('#IPD_costof3batches').val('');
			$('#IPD_rndcost').val('');
			$('#IPD");
                WriteLiteral(@"_filingcost').val('');
			$('#IPD_stabilitycost').val('');
			$('#IPD_totalinvest').val('');
			$('#IPD_roi').val('');
			$('#IPD_analyticalcost').val('');
			$('#IPD_becost').val('');
			$('#IPD_rldcost').val('');
		}

		function Changecogs() {
			var cogs = parseFloat($('#IPD_cogs').val() == """" || $('#IPD_cogs').val() == null ? 0 : $('#IPD_cogs').val());
			var Freight = parseFloat(cogs * (5 / 100)).toFixed(2);
			$('#IPD_freight').val(Freight);

			var TotalCIFCost = parseInt(cogs) + parseFloat(Freight);
			$('#IPD_totalcifcost').val(TotalCIFCost);
		}

		function ChangeCIFPricePerPack() {
			var CIFPricePerPack = parseFloat($('#IPD_cifpriceperpack').val() == """" || $('#IPD_cifpriceperpack').val() == null ? 0 : $('#IPD_cifpriceperpack').val());
			var PackSize = parseInt($('#IPD_packsize').val() == """" || $('#IPD_packsize').val() == null ? 0 : $('#IPD_packsize').val());

			var CIFPricePerUnit = parseFloat(CIFPricePerPack) / parseFloat(PackSize);
			CIFPricePerUnit = parseFloat(CIFPric");
                WriteLiteral(@"ePerUnit == ""Infinity"" ? 0 : CIFPricePerUnit).toFixed(2);
			$('#IPD_cifpriceperunit').val(CIFPricePerUnit);

			var ProfitPerPack = parseFloat($('#IPD_cifpriceperpack').val() == """" || $('#IPD_cifpriceperpack').val() == null ? 0 : $('#IPD_cifpriceperpack').val()) - parseFloat($('#IPD_totalcifcost').val() == """" || $('#IPD_totalcifcost').val() == null ? 0 : $('#IPD_totalcifcost').val());
			var CIFPerPack = parseFloat($('#IPD_cifpriceperpack').val() == """" || $('#IPD_cifpriceperpack').val() == null ? 0 : $('#IPD_cifpriceperpack').val());
			var TotalCIFCost = parseFloat((parseFloat(ProfitPerPack) / parseFloat(CIFPerPack)) * 100).toFixed(2);
			$('#IPD_count').val(TotalCIFCost);
		}

		function Year1Calculation() {
			var Quantity1 = parseInt($('#IPD_quantity1').val() == """" || $('#IPD_quantity1').val() == null ? 0 : $('#IPD_quantity1').val());
			var CIFPricePerPack = parseFloat($('#IPD_cifpriceperpack').val() == """" || $('#IPD_cifpriceperpack').val() == null ? 0 : $('#IPD_cifpriceperpack').val());
			");
                WriteLiteral(@"var Volume1 = parseInt(CIFPricePerPack * Quantity1);
			var TotalCIFcost = parseFloat($('#IPD_totalcifcost').val() == """" || $('#IPD_totalcifcost').val() == null ? 0 : $('#IPD_totalcifcost').val());
			var COGS1 = parseInt(TotalCIFcost * Quantity1);
			var Contri1 = parseInt(Volume1) - parseInt(COGS1);

			$('#IPD_volume1').val(Volume1);
			$('#IPD_cogs1').val(COGS1);
			$('#IPD_contri1').val(Contri1);

			var TotalContribution = parseInt($('#IPD_contri1').val() == """" || $('#IPD_contri1').val() == null ? 0 : $('#IPD_contri1').val()) +
				parseInt($('#IPD_contri2').val() == """" || $('#IPD_contri2').val() == null ? 0 : $('#IPD_contri2').val()) +
				parseInt($('#IPD_contri3').val() == """" || $('#IPD_contri3').val() == null ? 0 : $('#IPD_contri3').val());
			$('#IPD_contribution').val(TotalContribution);
		}

		function Year2Calculation() {
			var Quantity2 = parseInt($('#IPD_quantity2').val() == """" || $('#IPD_quantity2').val() == null ? 0 : $('#IPD_quantity2').val());
			var CIFPricePerPack = par");
                WriteLiteral(@"seFloat($('#IPD_cifpriceperpack').val() == """" || $('#IPD_cifpriceperpack').val() == null ? 0 : $('#IPD_cifpriceperpack').val());
			var Volume2 = parseInt(CIFPricePerPack * Quantity2);
			var TotalCIFcost = parseFloat($('#IPD_totalcifcost').val() == """" || $('#IPD_totalcifcost').val() == null ? 0 : $('#IPD_totalcifcost').val());
			var COGS2 = parseInt(TotalCIFcost * Quantity2);
			var Contri2 = parseInt(Volume2) - parseInt(COGS2);

			$('#IPD_volume2').val(Volume2);
			$('#IPD_cogs2').val(COGS2);
			$('#IPD_contri2').val(Contri2);

			var TotalContribution = parseInt($('#IPD_contri1').val() == """" || $('#IPD_contri1').val() == null ? 0 : $('#IPD_contri1').val()) +
				parseInt($('#IPD_contri2').val() == """" || $('#IPD_contri2').val() == null ? 0 : $('#IPD_contri2').val()) +
				parseInt($('#IPD_contri3').val() == """" || $('#IPD_contri3').val() == null ? 0 : $('#IPD_contri3').val());
			$('#IPD_contribution').val(TotalContribution);
		}

		function Year3Calculation() {
			var Quantity3 = parseInt");
                WriteLiteral(@"($('#IPD_quantity3').val() == """" || $('#IPD_quantity3').val() == null ? 0 : $('#IPD_quantity3').val());
			var CIFPricePerPack = parseFloat($('#IPD_cifpriceperpack').val() == """" || $('#IPD_cifpriceperpack').val() == null ? 0 : $('#IPD_cifpriceperpack').val());
			var Volume3 = parseInt(CIFPricePerPack * Quantity3);
			var TotalCIFcost = parseFloat($('#IPD_totalcifcost').val() == """" || $('#IPD_totalcifcost').val() == null ? 0 : $('#IPD_totalcifcost').val());
			var COGS3 = parseInt(TotalCIFcost * Quantity3);
			var Contri3 = parseInt(Volume3) - parseInt(COGS3);

			$('#IPD_volume3').val(Volume3);
			$('#IPD_cogs3').val(COGS3);
			$('#IPD_contri3').val(Contri3);

			var TotalContribution = parseInt($('#IPD_contri1').val() == """" || $('#IPD_contri1').val() == null ? 0 : $('#IPD_contri1').val()) +
				parseInt($('#IPD_contri2').val() == """" || $('#IPD_contri2').val() == null ? 0 : $('#IPD_contri2').val()) +
				parseInt($('#IPD_contri3').val() == """" || $('#IPD_contri3').val() == null ? 0 : $('#IPD_cont");
                WriteLiteral(@"ri3').val());
			$('#IPD_contribution').val(TotalContribution);
		}

		function CalculateTotalInvest() {
			var CostOf3batches = parseInt($('#IPD_costof3batches').val() == """" || $('#IPD_costof3batches').val() == null ? 0 : $('#IPD_costof3batches').val());
			var StabilityCost = parseInt($('#IPD_stabilitycost').val() == """" || $('#IPD_stabilitycost').val() == null ? 0 : $('#IPD_stabilitycost').val());

			var TotalInvest = CostOf3batches + StabilityCost;
			$('#IPD_totalinvest').val(TotalInvest);
		}

		$(""#btnUpload"").click(function () {
        var fileUpload = $(""#UploadFile"").get(0);
        var files = fileUpload.files;
        var data = new FormData();
        for (var i = 0; i < files.length ; i++) {
            data.append(files[i].name, files[i]);
        }
        $.ajax({
            type: ""POST"",
            url: ""/PIDF/UploadFiles"",
            contentType: false,
            processData: false,
            data: data,
            success: function (result) {
            ");
                WriteLiteral("    //alert(data.msg);\r\n                console.log(result);\r\n                   if (result.success ===true) {\r\n                       openCommonModal(\'successModal modal-sm\', \'");
                EndContext();
                BeginContext(39818, 42, false);
#line 1048 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml"
                                                            Write(Html.Raw(SharedLocalizer["Success"].Value));

#line default
#line hidden
                EndContext();
                BeginContext(39860, 566, true);
                WriteLiteral(@"', result.msg, true);
                       $.each(result.fileDetails, function (i,List) {
                           var temp = {
                               ""SaveFilePath"": List.saveFilePath,
                               ""SaveFileName"": List.saveFileName
                           };
                           JSONUploadedFilesList.push(temp);
                       });
                       //console.log(JSONUploadedFilesList);
                    }
                    else {
                        openCommonModal('alertModal modal-sm', '");
                EndContext();
                BeginContext(40427, 30, false);
#line 1059 "D:\work\EmcureGITRepo\EmcureNPD\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDF.cshtml"
                                                           Write(SharedLocalizer["Error"].Value);

#line default
#line hidden
                EndContext();
                BeginContext(40457, 217, true);
                WriteLiteral("\', result.msg, false);\r\n                    }        \r\n            },\r\n            error: function () {\r\n                alert(\"There was error uploading files!\");\r\n            }\r\n        });\r\n    }); \r\n\r\n\t</script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> SharedLocalizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<EmcureCERI.Web.Models.PIDFPViewModels.PIDFViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
