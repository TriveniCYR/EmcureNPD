#pragma checksum "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e1faaf2b99ca5a75fe821d8677fc9094ded58337"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PIDF_PIDFCountryWiseList), @"mvc.1.0.view", @"/Views/PIDF/PIDFCountryWiseList.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PIDF/PIDFCountryWiseList.cshtml", typeof(AspNetCore.Views_PIDF_PIDFCountryWiseList))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\_ViewImports.cshtml"
using EmcureCERI.Web;

#line default
#line hidden
#line 2 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\_ViewImports.cshtml"
using EmcureCERI.Web.Models;

#line default
#line hidden
#line 1 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e1faaf2b99ca5a75fe821d8677fc9094ded58337", @"/Views/PIDF/PIDFCountryWiseList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e39e5b73b640da0f63a8b55154c17e2e753e04bc", @"/Views/_ViewImports.cshtml")]
    public class Views_PIDF_PIDFCountryWiseList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/bs-custom-file-input/bs-custom-file-input.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/dataTables.treeGrid.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/xlsx.core.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/FileSaver.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jhxlsx.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 4 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
  
    ViewData["Title"] = "PIDF Countrywise List";

#line default
#line hidden
            BeginContext(233, 1165, true);
            WriteLiteral(@"
<style>


    .treegrid-control span {
        cursor: pointer;
        padding: 0px 5px;
        display: block;
        box-shadow: 0 0 1px #999;
        width: 20px;
        height: 25px;
    }

    .treegrid-control-open span {
        cursor: pointer;
        padding: 0px 7px;
        display: block;
        box-shadow: 0 0 1px #999;
        width: 20px;
        height: 25px;
    }
</style>



<div class=""content-wrapper"">
    <section class=""content pt-3"">
        <div class=""container-fluid"">
            <div class=""row"">
                <section class=""col-lg-12"">
                    <!-- Custom tabs (Charts with tabs)-->
                    <div class=""card"">
                        <div class=""card-header"">
                            <h3 class=""card-title"">
                                <i class=""far fa-list-alt mr-2""></i> PIDF Countrywise List
                            </h3>
                            <div class=""card-tools md-left"">
                     ");
            WriteLiteral("           <div class=\"mybtn-group\">\r\n                                   \r\n                                        <a class=\"btn btn-primary\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1398, "\"", 1435, 1);
#line 46 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
WriteAttributeValue("", 1405, Url.Action("PIDFList","PIDF"), 1405, 30, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1436, 153, true);
            WriteLiteral("><i class=\"fas fa-list mr-1\"></i>Project List</a>\r\n                                  \r\n                                        <a class=\"btn btn-primary\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1589, "\"", 1634, 1);
#line 48 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
WriteAttributeValue("", 1596, Url.Action("PIDFStrengthList","PIDF"), 1596, 38, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1635, 156, true);
            WriteLiteral("><i class=\"far fa-list-alt mr-1\"></i>PIDF List</a>\r\n                                    \r\n                                        <a class=\"btn btn-primary\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1791, "\"", 1827, 1);
#line 50 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
WriteAttributeValue("", 1798, Url.Action("PIDFNew","PIDF"), 1798, 29, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1828, 100, true);
            WriteLiteral("><i class=\"far fa-plus-square mr-1\"></i> Create New PIDF</a>\r\n                                    \r\n");
            EndContext();
            BeginContext(2059, 152, true);
            WriteLiteral("                                        <button class=\"btn btn-primary\" id=\"btnExport\"><i class=\"far fa-file-excel mr-1\"></i> Export to Excel</button>\r\n");
            EndContext();
            BeginContext(2287, 397, true);
            WriteLiteral(@"                                    
                                        <button class=""btn btn-primary"" onclick=""javascript:window.history.back();""><i class=""fas fa-undo mr-1""></i> Back</button>
                                    
                                </div>
                            </div>
                        </div>
                        <div class=""card-body"">
");
            EndContext();
            BeginContext(2793, 1382, true);
            WriteLiteral(@"                            <div class=""table-responsive"">
                                <table id=""PIDFCountrywiseTable"" class=""table table-bordered"" cellspacing=""0"" width=""100%""></table>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </section>


    <section class=""col-lg-12 "" id=""ShowInitialApproval"">
        <!-- Custom tabs (Charts with tabs)-->
        <div class=""card"">
            <div class=""card-header"">
                <h3 class=""card-title"">
                    <i class=""far fa-plus-square mr-2""></i> PIDF Initial Approval
                </h3>
            </div>
            <!-- /.card-header -->
            <div class=""card-body"">
                <div class=""row p-1"">
                    <div class=""col-sm-12 ml-3 "">
                        <label for=""check_approval "">Approve the Project :</label>
                        <div class=""icheck-primary d-inline mr-");
            WriteLiteral(@"5 pl-2"">
                            <input class=""radiobuttons"" id=""Approve"" onchange=""CheckRadioBox()"" name=""approval_status"" checked type=""radio"" value=""Approve"">
                            <label for=""Approve"">
                                Approve
                            </label>
                        </div>
                    </div>
");
            EndContext();
            BeginContext(4262, 1934, true);
            WriteLiteral(@"                </div>

                <div class=""row p-3"">
                    <div class=""col-sm-5"">
                        <div class=""form-group ml-"">
                            <label for=""exampleInputFile"" class=""d-none"">File inputs</label>
                            <div class=""input-group"">
                                <div class=""custom-file"">
                                    <input type=""file"" class=""custom-file-input"" file-module=""UploadFile"" id=""UploadFile"" name=""UploadFile"" multiple>
                                    <label id=""chooseFile"" class=""custom-file-label"" for=""exampleInputFile"" style=""overflow:hidden"">Choose File</label>

                                </div>
                                <div class=""input-group-append"">
                                    <button type=""button"" class=""input-group-text"" id=""btnUpload"">Upload Files</button>
                                </div>
                                <small class=""text-danger"" id=""UploadFile_error""");
            WriteLiteral(@"></small>
                            </div>
                        </div>
                    </div>
                    <div class=""col-sm-7 "">
                        <table class=""table fileorder-list table-bordered mr-3 "">
                            <thead>
                                <tr>
                                    <th>Files</th>
                                    <th style=""width:60px;"">Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                <!-- /.card-body -->
            </div>
            <div class=""card-footer text-center"">
                <button name=""submit"" id=""ApprovelSubmitBtn"" onclick=""SubmitRemark()"" type=""submit"" class=""btn btn-primary mr-3"">Submit</button>
                <a class=""btn btn-primary"" id=""cancelbtn""");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 6196, "\"", 6241, 1);
#line 133 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
WriteAttributeValue("", 6203, Url.Action("PIDFStrengthList","PIDF"), 6203, 38, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(6242, 125, true);
            WriteLiteral("><i class=\"far  mr-1\"></i>Cancel</a>\r\n            </div>\r\n        </div>\r\n        <!-- /.card -->\r\n    </section>\r\n</div>\r\n\r\n");
            EndContext();
            BeginContext(6562, 82, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1faaf2b99ca5a75fe821d8677fc9094ded5833713699", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6644, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(6646, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1faaf2b99ca5a75fe821d8677fc9094ded5833714879", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6697, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(6701, 45, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1faaf2b99ca5a75fe821d8677fc9094ded5833716063", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6746, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(6748, 41, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1faaf2b99ca5a75fe821d8677fc9094ded5833717243", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6789, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(6791, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1faaf2b99ca5a75fe821d8677fc9094ded5833718423", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6829, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(6851, 164, true);
                WriteLiteral("\r\n    <script>\r\n        $(function () {\r\n            bsCustomFileInput.init();\r\n        });\r\n        $(\'#ShowInitialApproval\').hide();\r\n         var currentRole = \'");
                EndContext();
                BeginContext(7016, 68, false);
#line 156 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                       Write(HttpContextAccessor.HttpContext.Session.GetString("CurrentUserRole"));

#line default
#line hidden
                EndContext();
                BeginContext(7084, 63, true);
                WriteLiteral("\';\r\n    //console.log(currentRole);\r\n\r\n\r\n        var PidfID = \'");
                EndContext();
                BeginContext(7148, 29, false);
#line 160 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                 Write(ViewBag.PIDFCountryListPIDFID);

#line default
#line hidden
                EndContext();
                BeginContext(7177, 4951, true);
                WriteLiteral(@"';
        var columns = [
            {
                title: '',
                target: 0,
                className: 'treegrid-control',
                data: function (item) {
                    if (item.children) {
                        return '<span>+<\/span>';
                    }
                    return '';
                }
            },
            //{
            //    title: 'Action',
            //    target: 17,
            //    data: function (item) {
            //        return item.action;
            //    }
            //},
            {
                title: 'PIDF No',
                target: 1,
                data: function (item) {
                    if (item.pidfNo)
                        return item.pidfNo;
                    else
                        return item.action;
                }
            },

            {
                title: 'Product / Region',
                target: 2,
                data: function (item) {
     ");
                WriteLiteral(@"               return item.projectorProductName;
                }
            },

            {
                title: 'Country',
                target: 3,
                data: function (item) {
                    return item.countryName;
                }
            },
            {
                title: 'Pack Size',
                target: 4,
                data: function (item) {
                    return item.packSizeName;
                }
            },
            {
                title: 'Packing',
                target: 5,
                data: function (item) {
                    return item.packingName;
                }
            },
            {
                title: 'Strength',
                target: 6,
                data: function (item) {
                    return item.pidfStrength;
                }
            },
            {
                title: '1st Year CIFPrice PerPack',
                target: 7,
                data: function (item");
                WriteLiteral(@") {
                    return item.cifPricePerPack1;
                }
            },{
                title: '2nd Year CIFPrice PerPack',
                target: 8,
                data: function (item) {
                    return item.cifPricePerPack2;
                }
            },{
                title: '3rd Year CIFPrice PerPack',
                target: 9,
                data: function (item) {
                    return item.cifPricePerPack3;
                }
            },{
                title: '1st Year Quantity',
                target: 10,
                data: function (item) {
                    return item.qtyOneyear;
                }
            },{
                title: '2nd Year Quantity',
                target: 11,
                data: function (item) {
                    return item.qtyTwoyear;
                }
            },{
                title: '3rd Year Quantity',
                target: 13,
                data: function (item) {
       ");
                WriteLiteral(@"             return item.qtyThreeyear;
                }
            },{
                title: '1st Year Volume',
                target: 14,
                data: function (item) {
                    return item.volOneyear;
                }
            },{
                title: '2nd Year Volume',
                target: 15,
                data: function (item) {
                    return item.volTwoyear;
                }
            },{
                title: '3rd Year Volume',
                target: 16,
                data: function (item) {
                    return item.volThreeyear;
                }
            }

        ];

        $(document).ready(function () {
            //var StatusId = 19;
            // var regEx = ""^"" + StatusId + ""$"";
            var table = $('#PIDFCountrywiseTable').DataTable({
                columns: columns,
               // dom: 'Bfrtip',
               //buttons: [
               //     {
               //         extend: 'exc");
                WriteLiteral(@"el', text: '<i class=""far fa-file-excel""></i> Export In Excel ', className: ""btn-primary"", exportOptions: {
               //             columns: ':visible'
               //         }
               //     },
               //     {extend: 'colvis', className:""btn-primary"" }
               //  ],

                lengthChange: false,
                //columnDefs: [
                //    {
                //        visible: false,
                //        targets: 8
                //    }

                //],
                //initComplete: function () {
                //    this
                //        .api()
                //        .column(8)
                //        .search(regEx, true, false,true)
                //        .draw()
                //},
                ajax: '/PIDF/GetPIDFCountrywiseList?ID='+");
                EndContext();
                BeginContext(12129, 29, false);
#line 315 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                                    Write(ViewBag.PIDFCountryListPIDFID);

#line default
#line hidden
                EndContext();
                BeginContext(12158, 852, true);
                WriteLiteral(@",
                treeGrid: {
                    'left': 10,
                    'expandIcon': '<span>+<\/span>',
                    'collapseIcon': '<span>-<\/span>'
                }
            });


            //table.buttons().container()
            //    .appendTo('.export-btn');

            //$('.status_filter').on('click', function () {
            //    var term = $(this).data('status');
            //    var regExp = ""^"" + term + ""$"";
            //    table.columns(8).search(regExp, true, false,true).draw();

            //});

            //$("".buttons-excel"").removeClass(""btn-secondary"");
            //$("".buttons-collection"").removeClass(""btn-secondary"");
        });


        function SubmitRemark() {

			var status = $(""input[name='approval_status']:checked"").val();

            //var data = ");
                EndContext();
                BeginContext(13011, 29, false);
#line 343 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                    Write(ViewBag.PIDFCountryListPIDFID);

#line default
#line hidden
                EndContext();
                BeginContext(13040, 53, true);
                WriteLiteral(";\r\n            var data = {\r\n                pidfID: ");
                EndContext();
                BeginContext(13094, 29, false);
#line 345 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                   Write(ViewBag.PIDFCountryListPIDFID);

#line default
#line hidden
                EndContext();
                BeginContext(13123, 192, true);
                WriteLiteral(",\r\n                pIDFNo: 0,\r\n                userID: 0,\r\n                pidfStatusID:9,\r\n                approvalRemark: \'test\'\r\n            };\r\n            //alert(data);\r\n\r\n\t\t\tvar url = \'");
                EndContext();
                BeginContext(13316, 38, false);
#line 353 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                  Write(Url.Action("PIDFStrengthList", "PIDF"));

#line default
#line hidden
                EndContext();
                BeginContext(13354, 57, true);
                WriteLiteral("\';\r\n            $.ajax({\r\n\t\t\t\t\ttype: \"POST\",\r\n\t\t\t\t\turl: \'");
                EndContext();
                BeginContext(13412, 47, false);
#line 356 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                     Write(Url.Action("UpdatePidfInitialApproval", "PIDF"));

#line default
#line hidden
                EndContext();
                BeginContext(13459, 243, true);
                WriteLiteral("/\',\r\n\t\t\t\t\tdataType: \"json\",\r\n\t\t\t\t\tdata: data,\r\n                success: function (response) {\r\n\r\n                        if (response.data == \'success\') {\r\n                            var filedata = {\r\n                                \"PidfID\":");
                EndContext();
                BeginContext(13703, 29, false);
#line 363 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                    Write(ViewBag.PIDFCountryListPIDFID);

#line default
#line hidden
                EndContext();
                BeginContext(13732, 252, true);
                WriteLiteral(",\r\n                                \"uploadedfilesdetails\":JSON.stringify(JSONUploadedFilesList)\r\n                            };\r\n                            $.ajax({\r\n                                type: \"POST\",\r\n                                url: \'");
                EndContext();
                BeginContext(13985, 49, false);
#line 368 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                 Write(Url.Action("UpdatePidfUploadFileDetails", "PIDF"));

#line default
#line hidden
                EndContext();
                BeginContext(14034, 364, true);
                WriteLiteral(@"/',
                                dataType: ""json"",
                                data: filedata,
                                success: function (response) {


                                   }, failure: function () {

                                    }
                                });

							openCommonModal('successModal modal-sm', '");
                EndContext();
                BeginContext(14399, 42, false);
#line 379 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                                                 Write(Html.Raw(SharedLocalizer["Success"].Value));

#line default
#line hidden
                EndContext();
                BeginContext(14441, 4, true);
                WriteLiteral("\', \'");
                EndContext();
                BeginContext(14446, 65, false);
#line 379 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                                                                                                Write(Html.Raw(SharedLocalizer["Initial approved successfully."].Value));

#line default
#line hidden
                EndContext();
                BeginContext(14511, 166, true);
                WriteLiteral("\', true);\r\n\t\t\t\t\t\t\tsetTimeout(function () { location.href = url; }, 2000);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n                            openCommonModal(\'alertModal modal-sm\', \'");
                EndContext();
                BeginContext(14678, 30, false);
#line 383 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                                               Write(SharedLocalizer["Error"].Value);

#line default
#line hidden
                EndContext();
                BeginContext(14708, 295, true);
                WriteLiteral(@"', response.data, false);
							}
				        },
				    failure: function () {

				    }
		    });
		}
        var JSONUploadedFilesList = [];
          var counter = 1;

        $.ajax({
                    type: ""POST"",
                    url: ""/PIDF/GetCountryDetails?PidfID=");
                EndContext();
                BeginContext(15004, 29, false);
#line 396 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                                    Write(ViewBag.PIDFCountryListPIDFID);

#line default
#line hidden
                EndContext();
                BeginContext(15033, 3244, true);
                WriteLiteral(@"&CountryID=0&StrengthID=0"",
                    //contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (response) {
                       // console.log('Call getcountrydetails method');
                        //console.log(response.data.pidfStatusID);
                        if (response.data.pidfStatusID==12) {
                             $('#ShowInitialApproval').hide();
                        }
                        if (response.data.pidfStatusID == 12 || response.data.pidfStatusID == 15 || response.data.pidfStatusID == 16 || response.data.pidfStatusID == 26 || response.data.pidfStatusID == 27) {
                            $('#ApprovelSubmitBtn').hide();
                            $('#cancelbtn').hide();
                        }

                            $.each(response.uploadfilelist, function (i, List) {
                                var newRow = $(""<tr id='"" + counter + ""'>"");
                          ");
                WriteLiteral(@"      var cols = """";
                                cols += '<td><a href=""' + List.saveFilePath + '"" download=""'+ List.saveFileName + '"" target=""_blank"">' + List.saveFileName +'</td>';
                                cols += '<td><button type=""button"" class=""ibtnDel btn btn-sm btn-danger""><i class=""far fa-trash-alt""></i></button></td>';
                                newRow.append(cols);
                                $(""table.fileorder-list"").append(newRow);

                                var temp = {
                                    ""CounterID"": counter,
                                    ""SaveFilePath"": List.saveFilePath,
                                    ""SaveFileName"": List.saveFileName
                                };
                                JSONUploadedFilesList.push(temp);
                                counter++;
                            });
                           // console.log(JSONUploadedFilesList);

                    },
                    failure: ");
                WriteLiteral(@"function () {

                    }
        });

        $(""table.fileorder-list"").on(""click"", "".ibtnDel"", function (event) {
            var get_id = $(this).parent().parent().attr('id');
            //console.log(get_id);
            $(this).closest(""tr"").remove();
            for (var i = 0; i < JSONUploadedFilesList.length; i++) {
                if (JSONUploadedFilesList[i].CounterID == get_id) {
                    JSONUploadedFilesList.splice(i, 1);
                }
            }

           // console.log(JSONUploadedFilesList);
        });

        $(""#btnUpload"").click(function () {
        var fileUpload = $(""#UploadFile"").get(0);
        var files = fileUpload.files;
        var data = new FormData();
        for (var i = 0; i < files.length ; i++) {
            data.append(files[i].name, files[i]);
            }
        $.ajax({
            type: ""POST"",
            url: ""/PIDF/UploadFiles"",
            contentType: false,
            processData: false,
          ");
                WriteLiteral("  data: data,\r\n            success: function (result) {\r\n                   if (result.success ===true) {\r\n                       openCommonModal(\'successModal modal-sm\', \'");
                EndContext();
                BeginContext(18278, 42, false);
#line 462 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                                            Write(Html.Raw(SharedLocalizer["Success"].Value));

#line default
#line hidden
                EndContext();
                BeginContext(18320, 1262, true);
                WriteLiteral(@"', result.msg, true);
                       $.each(result.fileDetails, function (i, List) {
                           var temp = {
                               ""CounterID"": counter,
                               ""SaveFilePath"": List.saveFilePath,
                               ""SaveFileName"": List.saveFileName
                           };
                           JSONUploadedFilesList.push(temp);
                           var newRow = $(""<tr id='"" + counter + ""'>"");
                           var cols = """";
                           cols += '<td><a href=""' + List.saveFilePath + '"" download=""'+ List.saveFileName + '"" target=""_blank"">' + List.saveFileName + '</td>';
                           cols += '<td><button type=""button"" class=""ibtnDel btn btn-sm btn-danger""><i class=""far fa-trash-alt""></i></button></td>';
                           newRow.append(cols);
                           $(""table.fileorder-list"").append(newRow);

                           counter++;

                  ");
                WriteLiteral("     });\r\n                       $(\'#chooseFile\').text(\'Choose File\');\r\n                       $(\'#UploadFile\').val(\'\');\r\n\r\n                    }\r\n                    else {\r\n                       openCommonModal(\'alertModal modal-sm\', \'");
                EndContext();
                BeginContext(19583, 30, false);
#line 485 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                                          Write(SharedLocalizer["Error"].Value);

#line default
#line hidden
                EndContext();
                BeginContext(19613, 267, true);
                WriteLiteral(@"', result.msg, false);
                        $('#chooseFile').text('Choose File');
                       $('#UploadFile').val('');
                    }
            },
            error: function () {
                 openCommonModal('alertModal modal-sm', '");
                EndContext();
                BeginContext(19881, 30, false);
#line 491 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                                    Write(SharedLocalizer["Error"].Value);

#line default
#line hidden
                EndContext();
                BeginContext(19911, 1120, true);
                WriteLiteral(@"', ""There was error uploading files!"", false);
                 $('#chooseFile').text('Choose File');
                       $('#UploadFile').val('');
            }
        });
    });


        setTimeout(function () {
            $('#PIDFCountrywiseTable tbody tr td span').trigger('click');

            var rowcount = $(""tr[parent-index='0']"").length;
            //console.log(rowcount);
            if (rowcount >= 1) {

                if (currentRole == ""ProjectManager"" || currentRole == ""Senior Project Manager"" || currentRole == ""Prescriber"") {
                    //console.log(currentRole);
                    $('#ShowInitialApproval').show();
                } else {
                    $(""#ShowInitialApproval"").hide();
                }
            //$('#PIDFCountrywiseTable tbody tr td span').trigger('click');
            } else {
                 $(""#ShowInitialApproval"").hide();
            }
        }, 1000);

        $(""#btnExport"").click(function (e) {

            $");
                WriteLiteral(".ajax({\r\n                type: \"POST\",\r\n                url: \"/PIDF/GetAllCountryDetails?PidfID=");
                EndContext();
                BeginContext(21032, 29, false);
#line 522 "C:\Users\user\Desktop\Latest Emcure\ExistingApplication\EmcureCERI.Web\Views\PIDF\PIDFCountryWiseList.cshtml"
                                                   Write(ViewBag.PIDFCountryListPIDFID);

#line default
#line hidden
                EndContext();
                BeginContext(21061, 3066, true);
                WriteLiteral(@""",
                //contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (response) {

                    var result = response.data;
                    var data = [[{ ""text"": ""Pidf No"" }, { ""text"": ""Region"" }, { ""text"": ""Country Name"" }, { ""text"": ""Pack Size"" }, { ""text"": ""Packing"" }, { ""text"": ""Strength"" }, { ""text"": ""1st Year CIF Price/Pack"" }, { ""text"": ""2nd Year CIF Price/Pack"" }, { ""text"": ""3rd Year CIF Price/Pack"" }, { ""text"": ""1st Year Qty"" }, { ""text"": ""2nd Year Qty"" }, { ""text"": ""3rd Year Qty"" }, { ""text"": ""1st Year Volume"" }, { ""text"": ""2nd Year Volume"" }, { ""text"": ""3rd Year Volume"" }]];
                    for (var index = 0; index < result.length; index++) {                       
                        var tempdata = [
                            {
                                'text': result[index].pidfNo
                            }, {
                                'text': result[index].continentName
        ");
                WriteLiteral(@"                    }, {
                                'text': result[index].countryName
                            }, {
                                'text': result[index].packSizeName
                            }, {
                                'text': result[index].packingName
                            }, {
                                'text': result[index].pidfStrength
                            }, {
                                'text': result[index].cifPricePerPack1
                            }, {
                                'text': result[index].cifPricePerPack2
                            }, {
                                'text': result[index].cifPricePerPack3
                            }, {
                                'text': result[index].qtyOneyear
                            }, {
                                'text': result[index].qtyTwoyear
                            }, {
                                'text': result[index].qtyThreeyear
      ");
                WriteLiteral(@"                      }, {
                                'text': result[index].volOneyear
                            }, {
                                'text': result[index].volTwoyear
                            }, {
                                'text': result[index].volThreeyear
                            }
                        ];
                        data.push(tempdata);
                    }
                   
                    var tableData = [
                        {
                            ""sheetName"": ""Sheet1"",
                            ""data"": data                           
                        }
                    ];                   
                    var options = {
                        fileName: ""PIDF Country Details List""
                    };
                    Jhxlsx.export(tableData, options);
                },
                failure: function () {

                }
            });




        });

    </script>
");
                EndContext();
            }
            );
            BeginContext(24130, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> SharedLocalizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
