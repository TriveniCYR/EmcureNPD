@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> SharedLocalizer
@model EmcureCERI.Web.Models.DRFViewModels.DRFAddDetailsModel

@{
    ViewData["Title"] = "DRFInitialization";
}

<div class="content-wrapper pt-3">
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <!-- Small boxes (Stat box) -->
            <!-- Main row -->
            <div class="row">
                <section class="col-lg-12">
                    <!-- Custom tabs (Charts with tabs)-->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">
                                <i class="far fa-plus-square mr-2"></i> DRF Details
                            </h3>
                            <div class="card-tools">
                                <a class="btn btn-primary" href="@Url.Action("DRFInitializationUpdation","DRFInitialization")"><i class="far fa-list-alt mr-1"></i>Edit</a>
                                <button class="btn btn-outline-primary mr-3" onclick="javascript:window.history.back();"><i class="fas fa-undo mr-1"></i> Back</button>
                                <button type="button" class="btn btn-tool expand1 p-0 mr-3" data-card-widget="maximize">
                                    <i class="fas fa-expand"></i>
                                </button>
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <!-- /.card-header -->

                        <div class="card-body">
                            <div class="min-max direct-chat-messages">
                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">Country : </label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetCountry
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">Generic Name : </label>
                                        <div class="col-sm-6">@ViewBag.DetGenericName</div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Brand Name : </label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetBrandName
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">Trademark Approved : </label>
                                        <div class="col-sm-6">
                                            @if (@ViewBag.DetTreadmarkApprovedInternal == true)
                                            {
                                                <label>Yes</label>
                                            }
                                            else
                                            {
                                                <label>No</label>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Trademark Suggested : </label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetTreadmarkSuggestedInternal
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Trademark : </label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetTreadmarkOwnerInternal
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Form : </label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetForm
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">Strength : </label>
                                        <div class="col-sm-6">@ViewBag.DetStrength</div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Pack Size/s : </label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetPackSize
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Pack Style : </label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetPackStyle
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Plant : </label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetPlant
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Product Type:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetProductType
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Samples Required : </label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetSamplesRequired
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">Remark:</label>
                                    </div>
                                    <div class="col-sm-3">
                                        @ViewBag.Remark
                                    </div>
                                </div>

                                <h4 class="text-divider d-none"><span>PIDF Details</span></h4>
                                <div class="row d-none">
                                    <div class="col-sm-4 row ">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">PIDF Attached : </label>
                                        <div class="col-sm-6">
                                            @if (@ViewBag.DetAttachedPIDF == true)
                                            {
                                                @Html.Label("Yes")
                                            }
                                            else
                                            {
                                                @Html.Label("No")
                                            }
                                        </div>
                                    </div>
                                </div>

                                <div class="row d-none">
                                    <div class="col-sm-12 table-responsive">
                                        <table id="PIDFTable" class="table table-bordered table-striped table-hover" style="width:100%;">
                                            <thead>
                                                <tr>
                                                    <th>@SharedLocalizer["Id"].Value</th>
                                                    <th>@SharedLocalizer["Project Name"].Value</th>
                                                    <th>@SharedLocalizer["Strength"].Value</th>
                                                    <th>@SharedLocalizer["Patent Status"].Value</th>
                                                    <th>@SharedLocalizer["Continent"].Value</th>
                                                    <th>@SharedLocalizer["Country"].Value</th>
                                                    <th>@SharedLocalizer["Packing"].Value</th>
                                                    <th>@SharedLocalizer["Batch Size (In pack)"].Value</th>
                                                    <th>@SharedLocalizer["Pack Size"].Value</th>
                                                    <th>@SharedLocalizer["Cogs"].Value</th>
                                                    <th>@SharedLocalizer["Freight($)"].Value</th>
                                                    <th>@SharedLocalizer["Total CIF Cost($)"].Value</th>
                                                    <th>@SharedLocalizer["CIF Price Per Unit($)"].Value</th>
                                                    <th>@SharedLocalizer["CIF Price Per Pack($)"].Value</th>
                                                    <th>@SharedLocalizer["Profit Per Pack"].Value</th>
                                                    <th>@SharedLocalizer["Percent Cont"].Value</th>
                                                    <th>@SharedLocalizer["Contribution 3 yr"].Value</th>
                                                    <th>@SharedLocalizer["Cost of 3 Batches"].Value</th>
                                                    <th>@SharedLocalizer["R&D Cost($)"].Value</th>
                                                    <th>@SharedLocalizer["Filing Cost($)"].Value</th>
                                                    <th>@SharedLocalizer["Stability Cost($)"].Value</th>
                                                    <th>@SharedLocalizer["Total Invest($)"].Value</th>
                                                    <th>@SharedLocalizer["ROI"].Value</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>

                                <h4 class="text-divider"><span>Regulated Details</span></h4>
                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Currency:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetCurrency
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">Fees to be Paid by:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetFeesToBePaidBy
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Registration Fee ($):</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetRegistrationFees
                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Mode of Fees Payment:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetModeOfFeesPayment
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">MA Holder:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetMAHolder
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Business Type:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetProposedMarketingStatus
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">Shipping Port:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetShippingPort
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Mode of Shipment:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetModeOfShipment
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Incoterms:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetIncoterms
                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Dossier submitted to MoH by:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetDossierSubmittedToMOHBy
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">Owner of Registration:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetOwnerOfRegistration
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">CDA Excecuted:</label>
                                        <div class="col-sm-6">
                                            @if (@ViewBag.DetAvailabilityofCDA == true)
                                            {
                                                @Html.Label("Yes")
                                            }
                                            else
                                            {
                                                @Html.Label("No")
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">TS Excecuted:</label>
                                        <div class="col-sm-6">
                                            @if (@ViewBag.DetTSExcecuted == true)
                                            {
                                                @Html.Label("Yes")
                                            }
                                            else
                                            {
                                                @Html.Label("No")
                                            }
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">DA Excecuted:</label>
                                        <div class="col-sm-6">
                                            @if (@ViewBag.DetDAExcecuted == true)
                                            {
                                                @Html.Label("Yes")
                                            }
                                            else
                                            {
                                                @Html.Label("No")
                                            }
                                        </div>
                                    </div>
                                </div>

                                <h4 class="text-divider"><span>Market Details</span></h4>
                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Current /Proposed Market Size:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetMarketSize
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">3 Yr. CAGR:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetThreeYearCAGR
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Number of Current Players:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetNumberOfCurrentPlayer
                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Expected Mkt. Value Growth(%):</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetExpectedMarketValueGrowth
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Innovator Brand:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetInnovatorBrand
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">Innovator Name:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetInnavotorName
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Top Brand:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetFirstBrand

                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">MS Top Brand:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetMSFirstBrand
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">2nd Brand:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetSecondBrand
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <label class="col-sm-6 text-right">MS 2nd Brand:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetMSSecondBrand
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">3rd Brand:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetThirdBrand
                                        </div>
                                    </div>
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">MS 3rd Brand:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetMSThirdBrand
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-4 row">
                                        <!-- text input -->
                                        <label class="col-sm-6 text-right">Partner or Potential Partner:</label>
                                        <div class="col-sm-6">
                                            @ViewBag.DetPartner
                                        </div>
                                    </div>
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-4"></div>
                                </div>
                                <h4 class="text-divider"><span>Value in USD only</span></h4>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            <label>Value in USD only</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group text-center">
                                            <label>Year 1</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group text-center">
                                            <label>Year 2</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group text-center">
                                            <label>Year 3</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            <label>Forecast Units (Packs) ($):</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group ">
                                            @ViewBag.DetFirstYearForecastUnitsPacks
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetSecondYearForecastUnitsPacks
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetThirdYearForecastUnitsPacks
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            <label>Forecast CIF (for Emcure) ($):</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetFirstYearForecastCIF
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetSecondYearForecastCIF
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetThirdYearForecastCIF
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            <label>Forecast Value (Emcure) ($):</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetFirstYearForecastValue
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetSecondYearForecastValue
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetThirdYearForecastValue
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            <label>API Quantity</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetFirstYearAPIQuantity
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetSecondYearAPIQuantity
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetThirdYearAPIQuantity
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            <label>Forecast Price to Patient (for our brand)($):</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetFirstYearForecastPriceToPatient
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetSecondYearForecastPriceToPatient
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetThirdYearForecastPriceToPatient
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            <label>Order frequency:</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetOrderFrequency
                                        </div>
                                    </div>
                                    <div class="col-sm-3"></div>
                                    <div class="col-sm-3"></div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group">
                                            <label>No. of Shipments:</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @ViewBag.DetNoofShipments
                                        </div>
                                    </div>
                                    <div class="col-sm-3"></div>
                                    <div class="col-sm-3"></div>
                                </div>
                                <hr />
                                <div class="row">
                                    <div class="col-sm-3 ">
                                        <label>Name to whom dossier to be sent:</label>
                                    </div>
                                    <div class="col-sm-3">
                                        @ViewBag.DetNameDossierSend
                                    </div>
                                    <div class="col-sm-3 ">
                                        <label>Address to whom dossier to be sent:</label>
                                    </div>
                                    <div class="col-sm-3">
                                        @ViewBag.DetAddressDossierSend
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-3 ">
                                        <label>Email to whom dossier to be sent:</label>
                                    </div>
                                    <div class="col-sm-3">
                                        @ViewBag.DetEmailDossierSend
                                    </div>
                                    <div class="col-sm-3 ">
                                        <label>Phone Number to whom dossier to be sent:</label>
                                    </div>
                                    <div class="col-sm-3">
                                        @ViewBag.DetPhoneDossierSend
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-3 ">
                                        <label>Strategy Alignment:</label>
                                    </div>
                                    <div class="col-sm-3">
                                        @if (@ViewBag.DetStrategyAlignment == true)
                                        {
                                            <label>Yes</label>
                                        }
                                        else
                                        {
                                            <label>No</label>
                                        }
                                    </div>
                                    <div class="col-sm-3">
                                        <label>Exception Explained:</label>
                                    </div>
                                    <div class="col-sm-3">
                                        @ViewBag.DetExceptionExplained
                                    </div>
                                </div>



                                <h3 class="text-divider" style="display:none"><span>Approval Details</span></h3>
                                <div class="row" style="display:none">
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <label>Do you want to approve this DRF :</label>
                                    </div>
                                    <div class="col-sm-3 row">
                                        <div class="form-group text-center">
                                            <div class="form-group">
                                                <div class="icheck-primary d-inline mr-5">
                                                    <label for="Approved">
                                                        Approved
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-1">
                                        <label>Comment :</label>

                                    </div>
                                    <div class="col-sm-5">
                                        <div class="form-group">
                                            @ViewBag.DetInitialApproveRejectComment
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                    </div>
                </section>

            </div>

            <div class="row">
                <section class="col-lg-12">
                    <!-- Custom tabs (Charts with tabs)-->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">
                                <i class="far fa-plus-square mr-2"></i> Approval Summary Table
                            </h3>
                        </div>
                        <!-- /.card-header -->

                        <div class="card-body">
                            <table class="table table-bordered">
                                <tr>
                                    <th>Responsible</th>
                                    <th>Name</th>
                                    <th>Date</th>
                                </tr>
                                <tr>
                                    <td><strong>Dossier raised by</strong></td>
                                    <td><div id="DossierCreatedName"></div></td>
                                    <td><div id="DossierCreatedDateTime"></div></td>
                                </tr>
                                <tr>
                                    <td><strong>Dossier checked by Country Manager</strong></td>
                                    <td><div id="CountryManagerApprovalName"></div></td>
                                    <td><div id="CountryManagerApprovalDateTime"></div></td>
                                </tr>
                                <tr>
                                    <td><strong>Dossier checked by Ho</strong></td>
                                    <td><div id="LineManagerApprovalName"></div></td>
                                    <td><div id="LineManagerApprovalDateTime"></div></td>
                                </tr>
                                <tr>
                                    <td><strong>HOD DRF Approval</strong></td>
                                    <td><div id="HODofDossierApprovalName"></div></td>
                                    <td><div id="HODofDossierApprovalDateTime"></div></td>
                                </tr>
                                <tr>
                                    <td><strong>HOD dossier prep. Approval</strong></td>
                                    <td><div id="HODofDossierApprovalName1"></div></td>
                                    <td><div id="HODofDossierApprovalDateTime1"></div></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <!-- /.card-body -->
                    <!-- /.card -->
                </section>
            </div>

            <div class="card  card-primary card-outline card-outline-tabs nav-fill nav-pills">
                <div class="card-header p-0 pt-1 border-bottom-0">
                    <ul class="nav nav-tabs" id="custom-tabs-three-tab" role="tablist">
                        <li class="nav-item" id="IPTabID">
                            <a class="nav-link active" id="custom-tabs-three-home-tab" data-toggle="pill" href="#custom-tabs-three-home" role="tab" aria-controls="custom-tabs-three-home" aria-selected="true">IP Details</a>
                        </li>
                        <li class="nav-item " id="ManufacturingTabID">
                            <a class="nav-link" id="custom-tabs-three-profile-tab" data-toggle="pill" href="#custom-tabs-three-profile" role="tab" aria-controls="custom-tabs-three-profile" aria-selected="false">Manufacturing Details</a>
                        </li>
                        <li class="nav-item" id="SCMTabID">
                            <a class="nav-link" id="custom-tabs-three-messages-tab" data-toggle="pill" href="#custom-tabs-three-messages" role="tab" aria-controls="custom-tabs-three-messages" aria-selected="false">SCM Details</a>
                        </li>
                        <li class="nav-item" id="RATabID">
                            <a class="nav-link" id="custom-tabs-three-settings-tab" data-toggle="pill" href="#custom-tabs-three-settings" role="tab" aria-controls="custom-tabs-three-settings" aria-selected="false">Requisite RA Information</a>
                        </li>
                        <li class="nav-item" id="MedicalTabID">
                            <a class="nav-link" id="custom-tabs-three-medical-tab" data-toggle="pill" href="#custom-tabs-three-medical" role="tab" aria-controls="custom-tabs-three-medical" aria-selected="false">Medical Details</a>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content" id="custom-tabs-three-tabContent">
                        <div class="tab-pane fade show active" id="custom-tabs-three-home" role="tabpanel" aria-labelledby="custom-tabs-three-home-tab">
                            <h4 class="text-divider"><span>IP Details</span></h4>
                            <form method="post" name="ipdetails" onsubmit="return SubmitIPForm(this)">
                                <div class="row">
                                    <div class="col-sm-9">
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <!-- text input -->
                                                @Html.HiddenFor(p => p.DRFIPModel.InitializationID)
                                                @Html.HiddenFor(p => p.DRFIPModel.DRFIPModelDetailsList)
                                                <div class="form-group required">
                                                    @Html.LabelFor(p => p.DRFIPModel.ProjectName, new { @class = "control-label" })
                                                    @Html.EditorFor(p => p.DRFIPModel.ProjectName, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(p => p.DRFIPModel.ProjectName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group required">
                                                    @Html.LabelFor(p => p.DRFIPModel.Markets, new { @class = "control-label" })
                                                    @*@Html.EditorFor(p => p.DRFIPModel.Markets, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Markets", @readonly = true } })*@
                                                    @Html.EditorFor(p => p.DRFIPModel.Markets, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Markets" } })
                                                    @Html.ValidationMessageFor(p => p.DRFIPModel.Markets, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <!-- text input -->
                                                <div class="form-group required">
                                                    @Html.LabelFor(p => p.DRFIPModel.NumbersOfApprovedANDA, new { @class = "control-label" })
                                                    @Html.EditorFor(p => p.DRFIPModel.NumbersOfApprovedANDA, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "No. of Approved ANDAs" } })
                                                    @Html.ValidationMessageFor(p => p.DRFIPModel.NumbersOfApprovedANDA, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <!-- text input -->
                                                <div class="form-group required">
                                                    @Html.LabelFor(p => p.DRFIPModel.PatentStatus, new { @class = "control-label" })
                                                    @Html.EditorFor(p => p.DRFIPModel.PatentStatus, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Patent Status" } })
                                                    @Html.ValidationMessageFor(p => p.DRFIPModel.PatentStatus, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <!-- text input -->
                                                <div class="form-group required">
                                                    @Html.LabelFor(p => p.DRFIPModel.LegalStatus, new { @class = "control-label" })
                                                    @Html.EditorFor(p => p.DRFIPModel.LegalStatus, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Legal Status" } })
                                                    @Html.ValidationMessageFor(p => p.DRFIPModel.LegalStatus, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group required">
                                                    @Html.LabelFor(p => p.DRFIPModel.NumbersOfApprovedGeneric, new { @class = "control-label" })
                                                    @Html.EditorFor(p => p.DRFIPModel.NumbersOfApprovedGeneric, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "No. of Approved Generics" } })
                                                    @Html.ValidationMessageFor(p => p.DRFIPModel.NumbersOfApprovedGeneric, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <!-- text input -->
                                                <div class="form-group required">
                                                    @Html.LabelFor(p => p.DRFIPModel.TypeOfFiling, new { @class = "control-label" })
                                                    @Html.EditorFor(p => p.DRFIPModel.TypeOfFiling, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Type of Filing" } })
                                                    @Html.ValidationMessageFor(p => p.DRFIPModel.TypeOfFiling, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <!-- text input -->
                                                <div class="form-group required">
                                                    @Html.LabelFor(p => p.DRFIPModel.CostofLitigation, new { @class = "control-label" })
                                                    @Html.EditorFor(p => p.DRFIPModel.CostofLitigation, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Cost of Litigation" } })
                                                    @Html.ValidationMessageFor(p => p.DRFIPModel.CostofLitigation, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group required">
                                            @Html.LabelFor(p => p.DRFIPModel.IPDComments, new { @class = "control-label" })                                            
                                            @Html.TextAreaFor(p => p.DRFIPModel.IPDComments, new { @autocomplete = "off", @class = "form-control", @placeholder = "IPD Comments", @rows = 5 })
                                            @Html.ValidationMessageFor(p => p.DRFIPModel.IPDComments, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <h4 class="text-divider"><span>IP Details</span></h4>
                                <div class="row">
                                    <table id="myTable" class=" table order-list table-bordered" style="width:100%">
                                        <thead>
                                            <tr>
                                                <th>Patent Numbers</th>
                                                <th>Original Expiry Date</th>
                                                <th>Type</th>
                                                <th>Extension Application</th>
                                                <th>Extn. Expiry Date</th>
                                                <th>Comment</th>
                                                <th>Strategy</th>
                                                <th class="ActionColumn">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr id="mainRow">
                                                <td>
                                                    <input type="text" name="PatentNumbers[]" id="PatentNumbers" placeholder="Patent Numbers" class="form-control" autocomplete="off" />
                                                    <small class="text-danger" id="IPD_PatentNumbers_Error"></small>
                                                </td>
                                                <td>
                                                    <div class="input-group date table-borderless table-sm" data-target-input="nearest">
                                                        <input type="text" name="OriginalExpiryDate[]" id="OriginalExpiryDate" autocomplete="off" placeholder="Original Expiry Date" class="form-control datetimepicker" />
                                                    </div>
                                                    <small class="text-danger" id="IPD_OriginalExpiryDate_Error"></small>
                                                </td>
                                                <td>
                                                    <input type="text" name="Type[]" id="Type" placeholder="Type" class="form-control" autocomplete="off" />
                                                    <small class="text-danger" id="IPD_Type_Error"></small>
                                                </td>
                                                <td>
                                                    <input type="text" name="ExtensionApplication[]" id="ExtensionApplication" placeholder="Extension Application" class="form-control" autocomplete="off" />
                                                    <small class="text-danger" id="IPD_ExtensionApplication_Error"></small>
                                                </td>
                                                <td>
                                                    <div class="input-group date table-borderless table-sm" data-target-input="nearest">
                                                        <input type="text" name="ExtnExpiryDate[]" id="ExtnExpiryDate" autocomplete="off" placeholder="Extn. Expiry Date" class="form-control datetimepicker" />
                                                    </div><small class="text-danger" id="IPD_ExtnExpiryDate_Error"></small>
                                                </td>
                                                <td>
                                                    <input type="text" name="Comment[]" id="Comment" placeholder="Comment (Patent Specific)" class="form-control" autocomplete="off" />
                                                    <small class="text-danger" id="IPD_Comment_Error"></small>
                                                </td>
                                                <td>
                                                    <input type="text" name="Strategy[]" id="Strategy" placeholder="Strategy" class="form-control" autocomplete="off" />
                                                    <small class="text-danger" id="IPD_Strategy_Error"></small>
                                                </td>
                                                <td><a class="deleteRow "></a><button class="btn btn-primary btn-sm" id="addrow" type="button"><i class="fas fa-plus"></i></button></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>

                                <small class="text-danger" id="IPD_RegulatedDetails_Error"></small>
                                <div class="card-footer text-center" style="margin:20px -20px -20px;">
                                    @if (User.IsInRole("Prescriber") || User.IsInRole("IPTeam") || User.IsInRole("IP Manager"))
                                    {
                                        <button id="DRFIPModel_Submit" type="submit" class="btn btn-primary">Submit IP Details</button>
                                    }
                                </div>
                            </form>
                        </div>

                        <div class="tab-pane fade" id="custom-tabs-three-profile" role="tabpanel" aria-labelledby="custom-tabs-three-profile-tab">
                            <h4 class="text-divider"><span>Manufacturing Details</span></h4>
                            <form method="post" name="ManufacturingDetails" onsubmit="return SubmitDRFManufacturingForm(this)">
                                @Html.Hidden("Dimensions")
                                <div class="row">
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        @Html.HiddenFor(m => m.DRFManufacturingModel.InitializationID)
                                        @Html.HiddenFor(m => m.DRFManufacturingModel.ManufacturingAPISiteList)
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.ManufacturingSiteId, new { @class = "control-label" })
                                            @Html.DropDownListFor(m => m.DRFManufacturingModel.ManufacturingSiteId, new SelectList(string.Empty, "Value", "Text"), "Please select option", htmlAttributes: new { @class = "form-control input-sm f-s-15 bg-eff4f55c w100per", id = "ManufactureSite" })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.ManufacturingSiteId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.ManufacturingSiteName, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFManufacturingModel.ManufacturingSiteName, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Name of the Manufacturing site" } })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.ManufacturingSiteName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.Batchsize, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFManufacturingModel.Batchsize, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Batch Size For Drug Product" } })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.Batchsize, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>                              
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.Leadtime, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFManufacturingModel.Leadtime, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "FG Lead Time" } })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.Leadtime, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.ArtworkTypeId, new { @class = "control-label" })
                                            @Html.DropDownListFor(m => m.DRFManufacturingModel.ArtworkTypeId, new SelectList(string.Empty, "Value", "Text"), "Please select option", htmlAttributes: new { @class = "form-control input-sm f-s-15 bg-eff4f55c w100per", id = "ArtworkType" })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.ArtworkTypeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(m => m.DRFManufacturingModel.Tentative_Artwork_Lead_Time, new { @class = "control-label" })
                                        @Html.EditorFor(m => m.DRFManufacturingModel.Tentative_Artwork_Lead_Time, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Tentative Artwork Lead Time" } })
                                        @Html.ValidationMessageFor(m => m.DRFManufacturingModel.Tentative_Artwork_Lead_Time, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.PackorShipper, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFManufacturingModel.PackorShipper, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Pack/Shipper" } })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.PackorShipper, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.GrossWeight, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFManufacturingModel.GrossWeight, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Gross Weight(in Kg)" } })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.GrossWeight, "", new { @class = "text-danger" })
                                        </div>
                                    </div>                                    
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.MWidth, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFManufacturingModel.MWidth, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Width" } })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.MWidth, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.MHeight, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFManufacturingModel.MHeight, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Height" } })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.MHeight, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.MLength, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFManufacturingModel.MLength, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Length" } })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.MLength, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4" style="display:none">
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFManufacturingModel.UnitEXW, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFManufacturingModel.UnitEXW, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Cost/Unit EXW (Commercial) (USD)" } })
                                            @Html.ValidationMessageFor(m => m.DRFManufacturingModel.UnitEXW, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                   
                                </div>
                                <div class="row">

                                    <div class="col-sm-12">
                                        <div class="table-responsive">
                                            <table id="MTT" class="table order-listAPI table-bordered" style="width:100%">
                                                <thead>
                                                    <tr>
                                                        <th>API</th>
                                                        <th>API Name</th>
                                                        <th>API Site</th>

                                                        <th style="width:50px;" class="ActionColumn1">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr id="mainRowApi">
                                                        <td>
                                                            <div class="form-group  date table-borderless table-sm" data-target-input="nearest">
                                                                <SELECT class="form-control input-sm f-s-15 bg-eff4f55c w100per" id="cmbSOM" name="cmbAPI">
                                                                    <OPTION value="">Please Select Option</OPTION>
                                                                </SELECT>
                                                            </div>
                                                            <small class="text-danger" id="DRF_cmbSOM_Error"></small>
                                                        </td>
                                                        <td>
                                                            <input type="text" name="APIName" id="APIName" placeholder="Enter Api Name" class="form-control" @*onkeypress="return isAlpha(event)"*@ autocomplete="off" />
                                                            <small class="text-danger" id="DRF_APIName_Error"></small>
                                                        </td>
                                                        <td>
                                                            <input type="text" name="APISite" id="APISite" placeholder="Enter Api Site" class="form-control" @*onkeypress="return isAlpha(event)"*@ autocomplete="off" />
                                                            <small class="text-danger" id="DRF_APISite_Error"></small>
                                                        </td>

                                                        <td><a class="deleteRow "></a><button class="btn btn-primary btn-sm" id="addrow_for_Api" type="button"><i class="fas fa-plus"></i></button></td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        @Html.LabelFor(m => m.DRFManufacturingModel.Remark, new { @class = "control-label" })
                                        @Html.TextAreaFor(m => m.DRFManufacturingModel.Remark, new { @autocomplete = "off", @class = "form-control", @placeholder = "Remarks", @rows = 4 })
                                    </div>
                                </div>
                                <div class="card-footer text-center" style="margin:20px -20px -20px;">
                                    @if (User.IsInRole("Prescriber") || User.IsInRole("ManufacturingTeam") || User.IsInRole("Manufacturing Manager"))
                                    {
                                        <button id="DRFManufacturingModel_Submit" type="submit" class="btn btn-primary">Submit Manufacturing Details</button>
                                    }
                                </div>
                            </form>
                        </div>

                        <div class="tab-pane fade" id="custom-tabs-three-messages" role="tabpanel" aria-labelledby="custom-tabs-three-messages-tab">
                            <h4 class="text-divider"><span>SCM Details</span></h4>
                            <form method="post" name="SCMDetails" onsubmit="return SubmitDRFSCMForm(this)">
                                <div class="row">
                                    <div class="col-sm-4">
                                        @Html.HiddenFor(m => m.DRFSCMModel.InitializationID)
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFSCMModel.FreightCost, new { @class = "control-label" })
                                            @Html.EditorFor(m => m.DRFSCMModel.FreightCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Freight Cost Per Pack (Basic form)" } })
                                            @Html.ValidationMessageFor(m => m.DRFSCMModel.FreightCost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFSCMModel.TentativeShipmente, new { @class = "control-label" })
                                            <div class="input-group date" id="SCMTentativeShipmente" data-target-input="nearest">
                                                @Html.TextBoxFor(m => m.DRFSCMModel.TentativeShipmente, new { @class = "form-control datetimepicker-input", autocomplete = "off" })
                                                <div class="input-group-append" data-target="#TentativeShipmente" data-toggle="datetimepicker">
                                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                </div><br>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.DRFSCMModel.TentativeShipmente, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(m => m.DRFSCMModel.TentativeDestination, new { @class = "control-label" })
                                            <div class="input-group date" id="SCMTentativeDestination" data-target-input="nearest">
                                                @Html.TextBoxFor(m => m.DRFSCMModel.TentativeDestination, new { @class = "form-control datetimepicker-input", autocomplete = "off" })
                                                <div class="input-group-append" data-target="#TentativeDestination" data-toggle="datetimepicker">
                                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                </div><br>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.DRFSCMModel.TentativeDestination, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(m => m.DRFSCMModel.Remark, new { @class = "control-label" })
                                            @Html.TextAreaFor(m => m.DRFSCMModel.Remark, new { @autocomplete = "off", @class = "form-control", @placeholder = "Remarks", @rows = 4 })
                                        </div>
                                    </div>                                
                                <div class="card-footer text-center" style="margin:20px -20px -20px;">
                                    @if (User.IsInRole("Prescriber") || User.IsInRole("SupplyChainManagement") || User.IsInRole("SCM Manager"))
                                    {
                                        <button type="submit" id="DRFSCMModel_Submit" class="btn btn-primary">Submit SCM Details</button>
                                    }
                                </div>
                            </form>
                        </div>

                        <div class="tab-pane fade" id="custom-tabs-three-settings" role="tabpanel" aria-labelledby="custom-tabs-three-settings-tab">
                            <h4 class="text-divider"><span>Requisite RA Information</span></h4>
                            <form method="post" name="RequisiteRAInformation" onsubmit="return SubmitDRFRAForm(this)">
                                <div class="row">
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        @Html.HiddenFor(r => r.DRFRAModel.InitializationID)
                                        <div class="form-group ">
                                            <label class="control-label" for="ZoneStabililtyData">Zone Stabililty Data</label><br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.CheckBoxFor(r => r.DRFRAModel.ACC, new { @class = "" })
                                                @Html.LabelFor(r => r.DRFRAModel.ACC)
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.CheckBoxFor(r => r.DRFRAModel.ZoneII, new { @class = "" })
                                                @Html.LabelFor(r => r.DRFRAModel.ZoneII)
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.CheckBoxFor(r => r.DRFRAModel.Ivbdata, new { @class = "" })
                                                @Html.LabelFor(r => r.DRFRAModel.Ivbdata)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.ProtocolAvailability, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.ProtocolAvailability, true, htmlAttributes: new { @class = "radiobuttons", id = "ProtocolAvailabilityYes" })
                                                <label for="ProtocolAvailabilityYes">
                                                    Yes
                                                </label>                                            
                                            </div>

                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.ProtocolAvailability, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "ProtocolAvailabilityNo" })
                                                <label for="ProtocolAvailabilityNo">
                                                    No
                                                </label>
                                            </div>
                                            <br>
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.ProtocolAvailability, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.COPPAvailability, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.COPPAvailability, true, htmlAttributes: new { @class = "radiobuttons", id = "COPPAvailabilityYes", @checked = 1 })
                                                <label for="COPPAvailabilityYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.COPPAvailability, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "COPPAvailabilityNo" })
                                                <label for="COPPAvailabilityNo">
                                                    No
                                                </label>
                                            </div>
                                            <br>
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.COPPAvailability, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(r => r.DRFRAModel.GMPAvailabilityId, new { @class = "control-label" })<br />
                                            @Html.DropDownListFor(r => r.DRFRAModel.GMPAvailabilityId, new SelectList(string.Empty, "Value", "Text"), "Please select option", htmlAttributes: new { @class = "form-control select2", })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.GMPAvailabilityId, "", new { @class = "text-danger" })

                                            @Html.EditorFor(r => r.DRFRAModel.GMPAvailability, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "GMP Availability" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.GMPAvailability, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                          
                                            @Html.LabelFor(r => r.DRFRAModel.MfgLicense, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.MfgLicense, true, htmlAttributes: new { @class = "radiobuttons", id = "MfgLicenseYes" })
                                                <label for="MfgLicenseYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.MfgLicense, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "MfgLicenseNo" })
                                                <label for="MfgLicensedNo">
                                                    No
                                                </label>
                                            </div>
                                            <br>
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.MfgLicense, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(r => r.DRFRAModel.DossierTemplateID, new { @class = "control-label" })
                                            @Html.DropDownListFor(r => r.DRFRAModel.DossierTemplateID, new SelectList(string.Empty, "Value", "Text"), "Please select option", htmlAttributes: new { @class = "form-control select2", id = "DossierTemplate" })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.DossierTemplateID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4" style="display:none">
                                        <!-- text input -->
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.PlantInspection, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.PlantInspection, true, htmlAttributes: new { @class = "radiobuttons", id = "PlantInspectionRequiredYes" })
                                                <label for="PlantInspectionRequiredYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.PlantInspection, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "PlantInspectionRequiredNo" })
                                                <label for="PlantInspectionRequiredNo">
                                                    No
                                                </label>
                                            </div>
                                            <br>
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.PlantInspection, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.ValidationBatches, new { @class = "control-label" })
                                            <br />
                                            @Html.DropDownListFor(r => r.DRFRAModel.ValidationBatches, new SelectList(string.Empty, "Value", "Text"), "Please select option", htmlAttributes: new { @class = "form-control select2", id = "ValidationBatches" })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.ValidationBatches, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.COAAvailability, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.COAAvailability, true, htmlAttributes: new { @class = "radiobuttons", id = "COAAvailabilityYes" })
                                                <label for="COAAvailabilityYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.COAAvailability, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "COAAvailabilityNo" })
                                                <label for="COAAvailabilityNo">
                                                    No
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.COAAvailability, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4" style="display:none">
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(r => r.DRFRAModel.BEAvailability, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.BEAvailability, true, htmlAttributes: new { @class = "radiobuttons", id = "BEAvailabililtyYes" })
                                                <label for="BEAvailabililtyYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.BEAvailability, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "BEAvailabililtyNo" })
                                                <label for="BEAvailabililtyNo">
                                                    No
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.BEAvailability, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.APIDMFstatus, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.APIDMFstatus, true, htmlAttributes: new { @class = "radiobuttons", id = "APIDMFstatusRequiredYes" })
                                                <label for="APIDMFstatusRequiredYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.APIDMFstatus, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "APIDMFstatusRequiredNo" })
                                                <label for="APIDMFstatusRequiredNo">
                                                    No
                                                </label>
                                            </div>                                            
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.APIDMFstatus, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.PlantApproval, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.PlantApproval, true, htmlAttributes: new { @class = "radiobuttons", id = "PlantApprovalRequiredYes" })
                                                <label for="PlantApprovalRequiredYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.PlantApproval, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "PlantApprovalRequiredNo" })
                                                <label for="PlantApprovalRequiredNo">
                                                    No
                                                </label>
                                            </div>
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.PlantApproval, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.PlantApprovalIfYes, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.PlantApprovalIfYes, "Onsite", htmlAttributes: new { @class = "radiobuttons", id = "Onsite", disabled = "disabled" })
                                                <label for="Onsite">
                                                    OnSite
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.PlantApprovalIfYes, "Desktop", htmlAttributes: new { @class = "radiobuttons", id = "Desktop", disabled = "disabled" })
                                                <label for="Desktop">
                                                    Desktop
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.PlantApprovalIfYes, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                           
                                            @Html.LabelFor(r => r.DRFRAModel.RegistrationValidity, new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(r => r.DRFRAModel.RegistrationValidity, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Registration Validity" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.RegistrationValidity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.Timefordossierpreparation, new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(r => r.DRFRAModel.Timefordossierpreparation, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "30 Days Post HOD Approval" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.Timefordossierpreparation, "", new { @class = "text-danger" })
                                            <label>*Translation and embassy Legalization is time consuming task which may defer stipluated timeline for few countries.</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.AMV, new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(r => r.DRFRAModel.AMV, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "AMV" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.AMV, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">                                           
                                            @Html.LabelFor(r => r.DRFRAModel.PDR, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.PDR, true, htmlAttributes: new { @class = "radiobuttons", id = "PDRYes" })
                                                <label for="PDRYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.PDR, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "PDRNo" })
                                                <label for="PDRNo">
                                                    No
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.PDR, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.SamplesAvailability, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.SamplesAvailability, true, htmlAttributes: new { @class = "radiobuttons", id = "SamplesAvailabilityYes" })
                                                <label for="SamplesAvailabilityYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.SamplesAvailability, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "SamplesAvailabilityNo" })
                                                <label for="SamplesAvailabilityNo">
                                                    No
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.SamplesAvailability, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.ImportPermit, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.ImportPermit, true, htmlAttributes: new { @class = "radiobuttons", id = "ImportPermitYes" })
                                                <label for="ImportPermitYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.ImportPermit, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "ImportPermitNo" })
                                                <label for="ImportPermitNo">
                                                    No
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.ImportPermit, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.BrandNameApproval, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.BrandNameApproval, "Yes", htmlAttributes: new { @class = "radiobuttons", id = "BrandNameApprovalYes" })
                                                <label for="BrandNameApprovalYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.BrandNameApproval, "No", htmlAttributes: new { @class = "radiobuttons radio-checked", id = "BrandNameApprovalNo" })
                                                <label for="BrandNameApprovalNo">
                                                    No
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.BrandNameApproval, "Not Applicable", htmlAttributes: new { @class = "radiobuttons", id = "BrandNameApprovalNotApplicable" })
                                                <label for="BrandNameApprovalNotApplicable">
                                                    Not Applicable
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.BrandNameApproval, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4" style="display:none">
                                        <div class="form-group required">
                                            @Html.LabelFor(r => r.DRFRAModel.AvailabilityofCDA, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.AvailabilityofCDA, true, htmlAttributes: new { @class = "radiobuttons", id = "AvailabilityOfCDAYes" })
                                                <label for="AvailabilityOfCDAYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(r => r.DRFRAModel.AvailabilityofCDA, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "AvailabilityOfCDANo" })
                                                <label for="AvailabilityOfCDANo">
                                                    No
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.AvailabilityofCDA, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(r => r.DRFRAModel.CurrencyID, new { @class = "control-label" })<br />
                                            @Html.DropDownListFor(r => r.DRFRAModel.CurrencyID, new SelectList(string.Empty, "Value", "Text"), "Please select option", htmlAttributes: new { @class = "form-control select2", })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.CurrencyID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.ProductRegistrationFee, new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(r => r.DRFRAModel.ProductRegistrationFee, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Product Registration Fee (from Basics)" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.ProductRegistrationFee, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                @***************************************@
                                <div class="row">
                                    <div class="col-sm-3">
                                        <div class="form-group required">
                                            @Html.LabelFor(r => r.DRFRAModel.ConsultantCost, new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(r => r.DRFRAModel.ConsultantCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Consultant Cost" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.ConsultantCost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group required">
                                            @Html.LabelFor(r => r.DRFRAModel.LegalizationCost, new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(r => r.DRFRAModel.LegalizationCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Legalization Cost" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.LegalizationCost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(r => r.DRFRAModel.TranslationCost, new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(r => r.DRFRAModel.TranslationCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Translation Cost" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.TranslationCost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <!-- text input -->
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.OtherCost, new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(r => r.DRFRAModel.OtherCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "OtherCost" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.OtherCost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                @***************************************@
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.ComparativeDissolutionProfileData, new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(r => r.DRFRAModel.ComparativeDissolutionProfileData, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Comparative Dissolution Profile Data" } })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.ComparativeDissolutionProfileData, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-8">
                                        <div class="form-group required">                                            
                                            @Html.LabelFor(r => r.DRFRAModel.Remarks, new { @class = "control-label" })
                                            <br />
                                            @Html.TextAreaFor(r => r.DRFRAModel.Remarks, new { @autocomplete = "off", @class = "form-control", @placeholder = "Additional Remarks" })
                                            @Html.ValidationMessageFor(r => r.DRFRAModel.Remarks, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer text-center" style="margin:20px -20px -20px;">
                                    @if (User.IsInRole("Prescriber") || User.IsInRole("RegulatoryTeam") || User.IsInRole("Regulatory Manager"))
                                    {
                                        <button id="DRFRAModel_Submit" type="submit" class="btn btn-primary">Submit RA Information</button>
                                    }
                                </div>
                            </form>
                        </div>

                        <div class="tab-pane fade" id="custom-tabs-three-medical" role="tabpanel" aria-labelledby="custom-tabs-three-medical-tab">
                            <h4 class="text-divider"><span>Medical Details</span></h4>
                            <form method="post" name="MedicalDetails" onsubmit="return SubmitDRFMedicalForm(this)">
                                <div class="row">
                                    @Html.HiddenFor(medical => medical.DRFMedicalModel.InitializationID)
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(medical => medical.DRFMedicalModel.BeCtVitroAvailable, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(medical => medical.DRFMedicalModel.BeCtVitroAvailable, true, htmlAttributes: new { @class = "radiobuttons", id = "BeCtVitroAvailableYes" })
                                                <label for="BeCtVitroAvailableYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(medical => medical.DRFMedicalModel.BeCtVitroAvailable, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "BeCtVitroAvailableNo" })
                                                <label for="BeCtVitroAvailableNo">
                                                    No
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(medical => medical.DRFMedicalModel.BeCtVitroAvailable, "", new { @class = "text-danger" })
                                        </div>

                                        
                                        <div class="form-group" id="BECost">
                                            @Html.LabelFor(medical => medical.DRFMedicalModel.BECost, new { @class = "control-label" })
                                            <br />
                                            @Html.TextBoxFor(medical => medical.DRFMedicalModel.BECost, new { @autocomplete = "off", @class = "form-control", @placeholder = "BE Cost" })
                                            <small class="text-danger" id="DRFMedicalModel_BECost_Error"></small>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(medical => medical.DRFMedicalModel.Remark1, new { @class = "control-label" })
                                            @Html.TextAreaFor(medical => medical.DRFMedicalModel.Remark1, new { @autocomplete = "off", @class = "form-control", @placeholder = "Remarks", @rows = 4, id = "Remark1" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group required">
                                            @Html.LabelFor(medical => medical.DRFMedicalModel.BioWaiver, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(medical => medical.DRFMedicalModel.BioWaiver, true, htmlAttributes: new { @class = "radiobuttons", id = "BioWaiverYes" })
                                                <label for="BioWaiverYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(medical => medical.DRFMedicalModel.BioWaiver, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "BioWaiverNo" })
                                                <label for="BioWaiverNo">
                                                    No
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(medical => medical.DRFMedicalModel.BioWaiver, "", new { @class = "text-danger" })
                                        </div>
                                                                                
                                        <div class="form-group" id="BioCost">
                                            @Html.LabelFor(medical => medical.DRFMedicalModel.BioCost, new { @class = "control-label" })
                                            <br />
                                            @Html.TextBoxFor(medical => medical.DRFMedicalModel.BioCost, new { @autocomplete = "off", @class = "form-control", @placeholder = "Bio Cost" })
                                            <small class="text-danger" id="DRFMedicalModel_BioCost_Error"></small>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(medical => medical.DRFMedicalModel.Remark2, new { @class = "control-label" })
                                            @Html.TextAreaFor(medical => medical.DRFMedicalModel.Remark2, new { @autocomplete = "off", @class = "form-control", @placeholder = "Remarks", @rows = 4, id = "Remark2" })
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <!-- text input -->
                                        <div class="form-group required">
                                            @Html.LabelFor(medical => medical.DRFMedicalModel.CTWaiver, new { @class = "control-label" })
                                            <br />
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(medical => medical.DRFMedicalModel.CTWaiver, true, htmlAttributes: new { @class = "radiobuttons", id = "CTWaiverYes" })
                                                <label for="CTWaiverYes">
                                                    Yes
                                                </label>
                                            </div>
                                            <div class="icheck-primary d-inline mr-5">
                                                @Html.RadioButtonFor(medical => medical.DRFMedicalModel.CTWaiver, false, htmlAttributes: new { @class = "radiobuttons radio-checked", id = "CTWaiverNo" })
                                                <label for="CTWaiverNo">
                                                    No
                                                </label>
                                            </div>
                                            <br />
                                            @Html.ValidationMessageFor(medical => medical.DRFMedicalModel.CTWaiver, "", new { @class = "text-danger" })
                                        </div>                                            
                                    <div class="form-group" id="CTCost">
                                        @Html.LabelFor(medical => medical.DRFMedicalModel.CTCost, new { @class = "control-label" })
                                        <br />
                                        @Html.TextBoxFor(medical => medical.DRFMedicalModel.CTCost, new { @autocomplete = "off", @class = "form-control", @placeholder = "CT Cost" })
                                        <small class="text-danger" id="DRFMedicalModel_CTCost_Error"></small>
                                    </div>

                                        <div class="form-group">
                                            @Html.LabelFor(medical => medical.DRFMedicalModel.Remark3, new { @class = "control-label" })
                                            @Html.TextAreaFor(medical => medical.DRFMedicalModel.Remark3, new { @autocomplete = "off", @class = "form-control", @placeholder = "Remarks", @rows = 4, id = "Remark3" })
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer text-center" style="margin:20px -20px -20px;">
                                    @if (User.IsInRole("Prescriber") || User.IsInRole("MedicalTeam") || User.IsInRole("Medical Manager"))
                                    {
                                        <button type="submit" id="DRFMedicalModel_Submit" class="btn btn-primary">Submit Medical Details</button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <!-- /.card -->
            </div>
            <!-- /.row (main row) -->
        </div>
        <!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>

<script>
    var currentRole = '@HttpContextAccessor.HttpContext.Session.GetString("CurrentUserRole")';
    //console.log(currentRole);
    if (currentRole == "ManufacturingTeam" || currentRole == "Manufacturing Manager") {

        //console.log("ip");
        $('#custom-tabs-three-home-tab').removeClass('active');
        $('#custom-tabs-three-home').removeClass('active');
        $('#custom-tabs-three-home').removeClass('show');

        //console.log("manufacturing");
        $('#custom-tabs-three-profile-tab').addClass('active');
        $('#custom-tabs-three-profile').addClass('active');
        $('#custom-tabs-three-profile').addClass('show');

    }
    else if (currentRole == "SupplyChainManagement" || currentRole == "SCM Manager") {
        //console.log("ip");
        $('#custom-tabs-three-home-tab').removeClass('active');
        $('#custom-tabs-three-home').removeClass('active');
        $('#custom-tabs-three-home').removeClass('show');

        //console.log("scm");
        $('#custom-tabs-three-messages-tab').addClass('active');
        $('#custom-tabs-three-messages').addClass('active');
        $('#custom-tabs-three-messages').addClass('show');

    }
    else if (currentRole == "RegulatoryTeam" || currentRole == "Regulatory Manager") {
        //console.log("ip");
        $('#custom-tabs-three-home-tab').removeClass('active');
        $('#custom-tabs-three-home').removeClass('active');
        $('#custom-tabs-three-home').removeClass('show');

        //console.log("ra");
        $('#custom-tabs-three-settings-tab').addClass('active');
        $('#custom-tabs-three-settings').addClass('active');
        $('#custom-tabs-three-settings').addClass('show');

    }
    else if (currentRole == "MedicalTeam" || currentRole == "Medical Manager") {
        //console.log("ip");
        $('#custom-tabs-three-home-tab').removeClass('active');
        $('#custom-tabs-three-home').removeClass('active');
        $('#custom-tabs-three-home').removeClass('show');

        //console.log("medical");
        $('#custom-tabs-three-medical-tab').addClass('active');
        $('#custom-tabs-three-medical').addClass('active');
        $('#custom-tabs-three-medical').addClass('show');
    }

    $("#DRFIPModel_ProjectName").val('@ViewBag.DetGenericNameIP');
	$("#DRFIPModel_Markets").val('@ViewBag.DetBrandNameIP');

    $("#DRFSCMModel_FreightCost").focusout(function () {
        if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
            $(this).val(0.00);
        }
		$("#DRFSCMModel_FreightCost").val(Number.parseFloat($("#DRFSCMModel_FreightCost").val().replace(/,/g, '')).toFixed(2));
    });

    $("#DRFIPModel_CostofLitigation").focusout(function () {

        if (isNaN($(this).val())){
            $(this).val(0.00);
        }
        if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
            $(this).val(0.00);
        }

		$("#DRFIPModel_CostofLitigation").val(Number.parseFloat($("#DRFIPModel_CostofLitigation").val().replace(/,/g, '')).toFixed(2));
   });

    $("#DRFRAModel_ProductRegistrationFee").focusout(function () {
		if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
			$(this).val(0.00);
		}
		$("#DRFRAModel_ProductRegistrationFee").val(Number.parseFloat($("#DRFRAModel_ProductRegistrationFee").val().replace(/,/g, '')).toFixed(2));
    });

	$("#DRFRAModel_ConsultantCost").focusout(function () {
		if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
			$(this).val(0.00);
		}
		$("#DRFRAModel_ConsultantCost").val(Number.parseFloat($("#DRFRAModel_ConsultantCost").val().replace(/,/g, '')).toFixed(2));
	});

	$("#DRFRAModel_LegalizationCost").focusout(function () {
        if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
            $(this).val(0.00);
        }
		$("#DRFRAModel_LegalizationCost").val(Number.parseFloat($("#DRFRAModel_LegalizationCost").val().replace(/,/g, '')).toFixed(2));
   });



	$("#DRFRAModel_TranslationCost").focusout(function () {
		if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
			$(this).val(0.00);
		}
		$("#DRFRAModel_TranslationCost").val(Number.parseFloat($("#DRFRAModel_TranslationCost").val().replace(/,/g, '')).toFixed(2));
    });



	$("#DRFRAModel_OtherCost").focusout(function () {
		if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
			$(this).val(0.00);
		}
		$("#DRFRAModel_OtherCost").val(Number.parseFloat($("#DRFRAModel_OtherCost").val().replace(/,/g, '')).toFixed(2));
    });

	$("#DRFMedicalModel_BECost").focusout(function () {
		if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
			$(this).val(0.00);
		}
		$("#DRFMedicalModel_BECost").val(Number.parseFloat($("#DRFMedicalModel_BECost").val().replace(/,/g, '')).toFixed(2));
    });

	$("#DRFMedicalModel_BioCost").focusout(function () {
		if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
			$(this).val(0.00);
		}
		$("#DRFMedicalModel_BioCost").val(Number.parseFloat($("#DRFMedicalModel_BioCost").val().replace(/,/g, '')).toFixed(2));
    });

    $("#DRFMedicalModel_CTCost").focusout(function () {

		if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
			$(this).val(0.00);
		}
		$("#DRFMedicalModel_CTCost").val(Number.parseFloat($("#DRFMedicalModel_CTCost").val().replace(/,/g, '')).toFixed(2));
    });

    $("#DRFIPModel_CostofLitigation").focusout(function () {
        //console.log("cost of litigation focus out called");
        if (isNaN($(this).val())) {
            $(this).val(0.00);
        }
        if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
            $(this).val(0.00);
        }

        $("#DRFIPModel_CostofLitigation").val(Number.parseFloat($("#DRFIPModel_CostofLitigation").val()).toFixed(2));
    });

    $('#DRFIPModel_CostofLitigation').on('keypress', function () {

        var charCode = window.event.keyCode;
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    });

    $("#DRFManufacturingModel_GrossWeight").focusout(function () {
        //console.log("cost of litigation focus out called");
        if (isNaN($(this).val())) {
            $(this).val(0.0000);
        }
        if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
            $(this).val(0.0000);
        }

        $("#DRFManufacturingModel_GrossWeight").val(Number.parseFloat($("#DRFManufacturingModel_GrossWeight").val()).toFixed(4));
    });

    $('#DRFManufacturingModel_GrossWeight').on('keypress', function () {

        var charCode = window.event.keyCode;
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    });

    $("#DRFManufacturingModel_PackorShipper").focusout(function () {
        //console.log("cost of litigation focus out called");
        if (isNaN($(this).val())) {
            $(this).val(0.00);
        }
        if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
            $(this).val(0.00);
        }

        $("#DRFManufacturingModel_PackorShipper").val(Number.parseFloat($("#DRFManufacturingModel_PackorShipper").val()).toFixed(2));
    });

    $('#DRFManufacturingModel_PackorShipper').on('keypress', function () {

        var charCode = window.event.keyCode;
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    });

    $("#DRFManufacturingModel_MWidth").focusout(function () {
        //console.log("cost of litigation focus out called");
        if (isNaN($(this).val())) {
            $(this).val(0.00);
        }
        if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
            $(this).val(0.00);
        }

        $("#DRFManufacturingModel_MWidth").val(Number.parseFloat($("#DRFManufacturingModel_MWidth").val()).toFixed(2));
    });

    $('#DRFManufacturingModel_MWidth').on('keypress', function () {

        var charCode = window.event.keyCode;
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    });

    $("#DRFManufacturingModel_MHeight").focusout(function () {
        //console.log("cost of litigation focus out called");
        if (isNaN($(this).val())) {
            $(this).val(0.00);
        }
        if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
            $(this).val(0.00);
        }

        $("#DRFManufacturingModel_MHeight").val(Number.parseFloat($("#DRFManufacturingModel_MHeight").val()).toFixed(2));
    });

    $('#DRFManufacturingModel_MHeight').on('keypress', function () {

        var charCode = window.event.keyCode;
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    });

    $("#DRFManufacturingModel_MLength").focusout(function () {
        //console.log("cost of litigation focus out called");
        if (isNaN($(this).val())) {
            $(this).val(0.00);
        }
        if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "") {
            $(this).val(0.00);
        }

        $("#DRFManufacturingModel_MLength").val(Number.parseFloat($("#DRFManufacturingModel_MLength").val()).toFixed(2));
    });

    $('#DRFManufacturingModel_MLength').on('keypress', function () {

        var charCode = window.event.keyCode;
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    });


    var counter = 1;
     var detailsArray = [];
    $('#DRFRAModel_GMPAvailability').hide();
    $(function () {
        $('.datetimepicker').datetimepicker({
            format: 'DD-MM-YYYY',
            minDate: new Date()
        });

        $(".datetimepicker").keydown(false);

        $(".radio-checked").attr('checked',true);



        $("#OriginalExpiryDate").on("dp.change", function (e) {
           // console.log(e.date);
             var tempMinDate = new Date(e.date);
            //console.log(tempMinDate);
            var setminDate = new Date(tempMinDate);
           // setminDate.setDate(tempMinDate.getDate() + 1);
            setminDate.setDate(tempMinDate.getDate());
            //console.log(setminDate);
           $('#ExtnExpiryDate').data("DateTimePicker").minDate(setminDate);
        });
        $("#ExtnExpiryDate").on("dp.change", function (e) {
            // console.log(e.date);
             var tempMaxDate = new Date(e.date);
            //console.log(tempMaxDate);
            var setmaxDate = new Date(tempMaxDate);
            //setmaxDate.setDate(setmaxDate.getDate() - 1);
            setmaxDate.setDate(setmaxDate.getDate());
            //console.log(setminDate);
           $('#OriginalExpiryDate').data("DateTimePicker").maxDate(setmaxDate);
       });


        $('#DRFRAModel_GMPAvailabilityId').change(function () {
           // console.log($(this).val());
            var selected = $(this).val();
            if (selected == 5) {
                $('#DRFRAModel_GMPAvailability').addClass('required').show();
            }
            else {
                $('#DRFRAModel_GMPAvailability').removeClass('required').hide();
            }
        });



        $('input:radio[id="PlantApprovalRequiredYes"]').change(function () {
           // console.log($(this).val());
            if ($(this).val() === 'True') {
               // console.log('selected');
               // $('#Onsite').addClass('radio-checked');
                $("#Onsite").attr('checked',true);
                $('#Onsite').removeAttr('disabled');
                $('#Desktop').removeAttr('disabled');
            }
        });

         $('input:radio[id="PlantApprovalRequiredNo"]').change(function () {
            //console.log($(this).val());
             if ($(this).val() === 'False') {
                $("#Onsite").removeAttr('checked');
                 $('#Onsite').attr("disabled", true);
                 $('#Desktop').attr("disabled", true);
             }

         });	


    });

    $(document).ready(function () {
         //$('.select2').select2()
        $("#DRFSCMModel_FreightCost").focusout(function () {
            if ($(this).val() == null || $(this).val() == "" || $(this).val() == undefined) {
                $(this).val(0.00);
            }
			$("#DRFSCMModel_FreightCost").val(Number.parseFloat($("#DRFSCMModel_FreightCost").val().replace(/,/g, '')).toFixed(2));
        });


        var dataTable, getPIDFList;
        $("#addrow").on("click", function () {
            var isValid = true;

           if ($('#PatentNumbers').val() == null || $('#PatentNumbers').val() == "" || $('#PatentNumbers').val() == undefined) {
                isValid = false;
                $('#IPD_PatentNumbers_Error').empty().append("The 'PatentNumbers' field is required.");
            }
            else {
                $('#IPD_PatentNumbers_Error').empty();
            }
            if ($('#OriginalExpiryDate').val() == null || $('#OriginalExpiryDate').val() == "" || $('#OriginalExpiryDate').val() == undefined) {
                isValid = false;
                $('#IPD_OriginalExpiryDate_Error').empty().append("The 'OriginalExpiryDate' field is required.");
            }
            else {
                 $('#IPD_OriginalExpiryDate_Error').empty();
            }
            if ($('#Type').val() == null || $('#Type').val() == "" || $('#Type').val() == undefined) {
                isValid = false;
                $('#IPD_Type_Error').empty().append("The 'Type' field is required.");
            }
            else {
                $('#IPD_Type_Error').empty();
            }
            if ($('#ExtensionApplication').val() == null || $('#ExtensionApplication').val() == "" || $('#ExtensionApplication').val() == undefined) {
                isValid = false;
                $('#IPD_ExtensionApplication_Error').empty().append("The 'ExtensionApplication' field is required.");
            }
            else {
                $('#IPD_ExtensionApplication_Error').empty();
            }

            if ($('#ExtnExpiryDate').val() == null || $('#ExtnExpiryDate').val() == "" || $('#ExtnExpiryDate').val() == undefined) {
                isValid = false;
                 $('#IPD_ExtnExpiryDate_Error').empty().append("The 'ExtnExpiryDate' field is required.");
            }
            else {
                $('#IPD_ExtnExpiryDate_Error').empty();
            }

            if ($('#Comment').val() == null || $('#Comment').val() == "" || $('#Comment').val() == undefined) {
                isValid = false;
                $('#IPD_Comment_Error').empty().append("The 'Comment' field is required.");
            }
            else {
                $('#IPD_Comment_Error').empty();
            }

            if ($('#Strategy').val() == null || $('#Strategy').val() == "" || $('#Strategy').val() == undefined) {
                isValid = false;
                 $('#IPD_Strategy_Error').empty().append("The 'Strategy' field is required.");
            }
            else {
                 $('#IPD_Strategy_Error').empty();
            }

            if (isValid) {


                //console.log($('#PatentNumbers').val());

            var tempPatentNumbers = $('#PatentNumbers').val();
            var tempOriginalExpiryDate = $('#OriginalExpiryDate').val();
            var tempType = $('#Type').val();
            var tempExtensionApplication = $('#ExtensionApplication').val();
            var tempExtnExpiryDate = $('#ExtnExpiryDate').val();
            var tempComment = $('#Comment').val();
            var tempStrategy = $('#Strategy').val();

            var newRow = $("<tr id='"+counter+"'>");
            var cols = "";

                //console.log(tempPatentNumbers);
            cols += '<td><input type="text" class="form-control" value="'+tempPatentNumbers+'" readonly/></td>';
            cols += '<td><input type="text" class="form-control" value="'+tempOriginalExpiryDate+'" readonly/></td>';
            cols += '<td><input type="text" class="form-control" value="'+tempType+'" readonly/></td>';
            cols += '<td><input type="text" class="form-control"  value="'+tempExtensionApplication+'" readonly/></td>';
            cols += '<td><input type="text" class="form-control"  value="'+tempExtnExpiryDate+'" readonly/></td>';
            cols += '<td><input type="text" class="form-control" value="'+tempComment+'" readonly/></td>';
            cols += '<td><input type="text" class="form-control"  value="'+tempStrategy+'" readonly/></td>';

            cols += '<td><button type="button" class="ibtnDel btn btn-sm btn-danger"><i class="far fa-trash-alt"></i></button></td>';
            newRow.append(cols);
            $("table.order-list").append(newRow);


                var temp = {
                CounterID :counter,
                PatentNumbers: tempPatentNumbers,
                OriginalExpiryDate: tempOriginalExpiryDate,
                Type:tempType,
                ExtensionApplication :tempExtensionApplication,
                ExtnExpiryDate:tempExtnExpiryDate,
                Comment:tempComment,
                Strategy:tempStrategy
            };
            detailsArray.push(temp);

            //console.log(detailsArray);

               counter++;

               $('.datetimepicker').datetimepicker({
                format: 'DD-MM-YYYY',
                minDate: new Date()
               });
                clearRow();
            }


        });

        function clearRow() {
             $('#PatentNumbers').val("");
            $('#OriginalExpiryDate').val("");
           $('#Type').val("");
             $('#ExtensionApplication').val("");
            $('#ExtnExpiryDate').val("");
            $('#Comment').val("");
             $('#Strategy').val("");
        }

        $("table.order-list").on("click", ".ibtnDel", function (event) {
            var get_id = $(this).parent().parent().attr('id');
            //alert(get_id);
            $(this).closest("tr").remove();

                for(var i = 0; i < detailsArray.length; i++)
                {
                    if (detailsArray[i].CounterID == get_id)
                    {
                         detailsArray.splice(i, 1);
                    }
                }

            //console.log(detailsArray);
        });
         $('#loading').show();
         $.ajax({
            type: "POST",
            url: '@Url.Action("GetDropdownsForDRFAddDetails", "DRFInitialization")/',
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            //data: data,
            success: function (response) {
                        //console.log(response);
                $('#loading').hide();
                $('#ManufactureSite').empty().append("<option value=''>Please select option</option>");
                $.each(response.data.drfManufacturingModel.manufacturingSiteList, function (i, List) {
                    $("#ManufactureSite").append('<option value="' + List.manufacturingSiteID + '">' + List.manufacturingSite + '</option>');
                });

                $('#ArtworkType').empty().append("<option value=''>Please select option</option>");
                $.each(response.data.drfManufacturingModel.artWorkTypeList, function (i, List) {
                    $("#ArtworkType").append('<option value="' + List.artworkTypeId + '">' + List.artworkTypeName + '</option>');
                });


                $('#APISite').empty().append("<option value=''>Please select option</option>");
                $.each(response.data.drfManufacturingModel.apiSiteList, function (i, List) {
                    $("#APISite").append('<option value="' + List.apiid + '">' + List.apiSite + '</option>');
                });

				$('#cmbSOM').empty().append("<option value=''>Please select option</option>");
                $.each(response.data.drfManufacturingModel.apiSiteList, function (i, List) {
                    $("#cmbSOM").append('<option value="' + List.apiid + '">' + List.apiSite + '</option>');
                });


                $('#DRFRAModel_GMPAvailabilityId').empty().append("<option value=''>Please select option</option>");
                $.each(response.data.drfraModel.gmpAvailabilityList, function (i, List) {
                    $("#DRFRAModel_GMPAvailabilityId").append('<option value="' + List.gmpAvailabilityID + '">' + List.gmpAvailability + '</option>');
                });
                       
                $('#DRFRAModel_CurrencyID').empty().append("<option value=''>Please select option</option>");
                $.each(response.data.drfraModel.currencyList, function (i, List) {
                    $("#DRFRAModel_CurrencyID").append('<option value="' + List.currencyID + '">' + List.currency + '</option>');
                });

                $('#DossierTemplate').empty().append("<option value=''>Please select option</option>");
                $.each(response.data.drfraModel.dossierTemplateList, function (i, List) {
                    $("#DossierTemplate").append('<option value="' + List.dossierTemplateID + '">' + List.dossierTemplate + '</option>');
                });

                var ValidationBatchesList = [];

                for (var i = 1; i <= 5; i++) {
                    var temp = {ID:i,Value:i};
                    ValidationBatchesList.push(temp);
                }

                $('#ValidationBatches').empty().append("<option value=''>Please select option</option>");
                $.each(ValidationBatchesList, function (i, List) {
                    $("#ValidationBatches").append('<option value="' + List.ID + '">' + List.Value + '</option>');
                });
            },
            failure: function () {

            }
        });

        var initialdata = {InitializationID:'@ViewBag.DetInitializationID'};

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetFilledIPMANSCMRADetails", "DRFInitialization")/',
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: initialdata,
            success: function (response) {
                //console.log(response);
                $('#loading').hide();

						 //Approval Summary table
                $('#DossierCreatedName').text(response.data.drfApprovalDetails.drfCreatedName);
               
                $('#DossierCreatedDateTime').text(convertDDMMYYY(response.data.drfApprovalDetails.drfCreatedDate.split('T')[0]));

                $('#CountryManagerApprovalName').text(response.data.drfApprovalDetails.cmApprovalName);
                if (response.data.drfApprovalDetails.drfCreatedName == response.data.drfApprovalDetails.lmApprovalName) {
                    $('#CountryManagerApprovalName').text("-")
                }
                else {
                    $('#CountryManagerApprovalName').text(response.data.drfApprovalDetails.cmApprovalName);
                    $('#CountryManagerApprovalDateTime').text(convertDDMMYYY(response.data.drfApprovalDetails.cmCreatedDate.split('T')[0]));
                }
                   
                $('#LineManagerApprovalName').text(response.data.drfApprovalDetails.lmApprovalName);
                $('#LineManagerApprovalDateTime').text(convertDDMMYYY(response.data.drfApprovalDetails.lmCreatedDate.split('T')[0]) );

                $('#HODofDossierApprovalName').text(response.data.drfApprovalDetails.hodApprovalName);
                $('#HODofDossierApprovalDateTime').text(convertDDMMYYY(response.data.drfApprovalDetails.hodCreatedDate.split('T')[0]) );

                if (response.data.ipHeaderList.length > 0) {
                    //console.log("ip");
                    if (currentRole == "ManufacturingTeam" || currentRole == "Manufacturing Manager" || currentRole == "SupplyChainManagement" || currentRole == "SCM Manager"||currentRole == "RegulatoryTeam" || currentRole == "Regulatory Manager" ||currentRole == "MedicalTeam" || currentRole == "Medical Manager") {
                        $('#custom-tabs-three-home-tab').removeClass('active');
                        $('#custom-tabs-three-home').removeClass('active');
                        $('#custom-tabs-three-home').removeClass('show');
                    }
                    if (response.data.manufacturingList.length == 0) {
                        //console.log("manufacturing");
                        if (currentRole == "ManufacturingTeam" || currentRole == "Manufacturing Manager" ) {
                            $('#custom-tabs-three-profile-tab').addClass('active');
                            $('#custom-tabs-three-profile').addClass('active');
                            $('#custom-tabs-three-profile').addClass('show');
                        }
                    }
                    else if (response.data.scmList.length == 0) {
                        //console.log("scm");
                        if (currentRole == "SupplyChainManagement" || currentRole == "SCM Manager") {
                            $('#custom-tabs-three-messages-tab').addClass('active');
                            $('#custom-tabs-three-messages').addClass('active');
                            $('#custom-tabs-three-messages').addClass('show');
                        }
                    }
                    else if (response.data.raList.length == 0) {
                        //console.log("ra");
                        if (currentRole == "RegulatoryTeam" || currentRole == "Regulatory Manager") {
                            $('#custom-tabs-three-settings-tab').addClass('active');
                            $('#custom-tabs-three-settings').addClass('active');
                            $('#custom-tabs-three-settings').addClass('show');
                        }
                    }
                    else if (response.data.medicalList.length == 0) {
                        //console.log("medical");
                        if (currentRole == "MedicalTeam" || currentRole == "Medical Manager") {
                            $('#custom-tabs-three-medical-tab').addClass('active');
                            $('#custom-tabs-three-medical').addClass('active');
                            $('#custom-tabs-three-medical').addClass('show');
                        }
                    }
                }


                if (response.data.ipHeaderList.length > 0) {
                    $('#DRFIPModel_ProjectName').val(response.data.ipHeaderList[0].projectName);
                    $('#DRFIPModel_ProjectName').attr("disabled", true);

                    $('#DRFIPModel_Markets').val(response.data.ipHeaderList[0].markets);                            
                    $('#DRFIPModel_Markets').attr("disabled", true);
                            
                    $('#DRFIPModel_NumbersOfApprovedANDA').val(response.data.ipHeaderList[0].numbersOfApprovedANDA);
                    $('#DRFIPModel_NumbersOfApprovedANDA').attr("disabled", true);

                    $('#DRFIPModel_PatentStatus').val(response.data.ipHeaderList[0].patentStatus);
                    $('#DRFIPModel_PatentStatus').attr("disabled", true);

                    $('#DRFIPModel_LegalStatus').val(response.data.ipHeaderList[0].legalStatus);
                    $('#DRFIPModel_LegalStatus').attr("disabled", true);

                    $('#DRFIPModel_NumbersOfApprovedGeneric').val(response.data.ipHeaderList[0].numbersOfApprovedGeneric);
                    $('#DRFIPModel_NumbersOfApprovedGeneric').attr("disabled", true);

                        $('#DRFIPModel_TypeOfFiling').val(response.data.ipHeaderList[0].typeOfFiling);
                    $('#DRFIPModel_TypeOfFiling').attr("disabled", true);

                    $('#DRFIPModel_CostofLitigation').val(response.data.ipHeaderList[0].costofLitigation);
                    $('#DRFIPModel_CostofLitigation').attr("disabled", true);

                    $('#DRFIPModel_IPDComments').val(response.data.ipHeaderList[0].ipdComments);
                    $('#DRFIPModel_IPDComments').attr("disabled", true);

                }

                if (response.data.ipDetailsList.length > 0) {
                    //console.log(response.data.ipDetailsList);
                    var ipdcounter = 1;
                    $('#mainRow').remove();
                    $('.ActionColumn').hide();
                    $.each(response.data.ipDetailsList, function (i, List) {
                        var newRow = $("<tr id='" + ipdcounter + "'>");
                        var cols = "";

                        cols += '<td><input type="text" class="form-control" value=' + List.patentNumbers + ' readonly/></td>';
                        cols += '<td><input type="text" class="form-control" value='+List.originalExpiryDate+' readonly/></td>';
                        cols += '<td><input type="text" class="form-control" value='+List.type+' readonly/></td>';
                        cols += '<td><input type="text" class="form-control"  value='+List.extensionApplication+' readonly/></td>';
                        cols += '<td><input type="text" class="form-control"  value='+List.extnExpiryDate+' readonly/></td>';
                        cols += '<td><input type="text" class="form-control" value='+List.comment+' readonly/></td>';
                        cols += '<td><input type="text" class="form-control"  value='+List.strategy+' readonly/></td>';
                                
                        newRow.append(cols);
                        //console.log(newRow);
                        $("table.order-list").append(newRow);
                        ipdcounter++;
                            $('.ActionColumn').hide();
                    });

                        $('#DRFIPModel_Submit').hide();
                    $('#IPTabID').addClass('bg-success border');

                }


                if (response.data.manufacturingList.length > 0) {
                    //console.log(response.data.manufacturingList);
                    $('#DRFManufacturingModel_ManufacturingSiteName').val(response.data.manufacturingList[0].manufacturingSiteName);
                    $('#DRFManufacturingModel_ManufacturingSiteName').attr("disabled", true);
                    $('#ManufactureSite option[value="' + response.data.manufacturingList[0].manufacturingSiteId + '"]').attr("selected", true);
                    $('#ManufactureSite').attr("disabled", true);
                    $('#DRFManufacturingModel_APISiteName').val(response.data.manufacturingList[0].apiSiteName);
                    $('#DRFManufacturingModel_APISiteName').attr("disabled", true);
                    $('#APISite option[value="' + response.data.manufacturingList[0].apiId + '"]').attr("selected", true);
                    $('#APISite').attr("disabled", true);
                    $('#DRFManufacturingModel_Batchsize') .val(response.data.manufacturingList[0].batchsize);
                    $('#DRFManufacturingModel_Batchsize').attr("disabled", true);
                    $('#DRFManufacturingModel_Leadtime').val(response.data.manufacturingList[0].leadtime);
                    $('#DRFManufacturingModel_Leadtime').attr("disabled", true);
                    $('#DRFManufacturingModel_UnitEXW').val(response.data.manufacturingList[0].unitEXW);
                    $('#DRFManufacturingModel_UnitEXW').attr("disabled", true);
                    $('#ArtworkType option[value="' + response.data.manufacturingList[0].artworkTypeId + '"]').attr("selected", true);
                    $('#ArtworkType').attr("disabled", true);
                   
                    $('#DRFManufacturingModel_Tentative_Artwork_Lead_Time').val(response.data.manufacturingList[0].tentative_Artwork_Lead_Time);
                    $('#DRFManufacturingModel_Tentative_Artwork_Lead_Time').attr("disabled", true);

                    $('#DRFManufacturingModel_PackorShipper').val(response.data.manufacturingList[0].packorShipper);
                    $('#DRFManufacturingModel_PackorShipper').attr("disabled", true);

                    $('#DRFManufacturingModel_GrossWeight').val(response.data.manufacturingList[0].grossWeight.toFixed(4));                        
                    $('#DRFManufacturingModel_GrossWeight').attr("disabled", true);

                    $('#DRFManufacturingModel_Dimensions').val(response.data.manufacturingList[0].dimensions);
                    $('#DRFManufacturingModel_Dimensions').attr("disabled", true);

                    $('#DRFManufacturingModel_MWidth').val(response.data.manufacturingList[0].mWidth);
                    $('#DRFManufacturingModel_MWidth').attr("disabled", true);

                    $('#DRFManufacturingModel_MHeight').val(response.data.manufacturingList[0].mHeight);
                    $('#DRFManufacturingModel_MHeight').attr("disabled", true);

                    $('#DRFManufacturingModel_MLength').val(response.data.manufacturingList[0].mLength);
                    $('#DRFManufacturingModel_MLength').attr("disabled", true);

					$('#DRFManufacturingModel_Remark').val(response.data.manufacturingList[0].remark);
					$('#DRFManufacturingModel_Remark').attr("disabled", true);

                    $('#DRFManufacturingModel_Submit').hide();
                    $('#ManufacturingTabID').addClass('bg-success border');

                    //if (response.data.manufacturingAPIList.length > 0) {
					//	var counter = 1;
					//	//var newRow = $("<tr id='" + counter + "'>");
					//	//console.log(response.data.manufacturingAPIList);
							            //	$('.ibtnDel').closest("tr").remove();
                    //                         $('.ibtnEdit').closest("tr").remove();
                    //                         $('#cmbSOM').attr("disabled", true);
                    //                         $('#APIName').attr("disabled", true);
							            //	$('#addrow_for_Api').attr("disabled", true);
                    //                         $.each(response.data.manufacturingAPIList, function (i, List) {
							            //		var cols = '';

					//		var newRow = $("<tr id='" + counter + "'>");
					//		cols += '<td><input type="text" class="form-control" value="' + List.apiSite + '" readonly/></td>';
                    //  cols += '<td><input type="text" class="form-control" value="' + List.apiName + '" readonly/></td>';
                        //  cols += '<td><input type="text" class="form-control" value="' + List.apiSiteName + '" readonly/></td>';

                            //cols += '<td></td>';
					//		//cols += '<td><button type="button" style=" background-color: orangered;border-color: orangered;" class="ibtnEdit btn btn-primary btn-sm"><i class="fas fa-edit"></i></button></td>';
					//		newRow.append(cols);
					//		$("table.order-listAPI").append(newRow);
					//		counter++;
					//	});
					//}


                    //old commented by sonali gore

                    if (response.data.manufacturingAPIList.length > 0) {
                        var counter = 1;
                        console.log(response.data.manufacturingAPIList);
                        $('#mainRowApi').remove();
                        $('.ActionColumn1').hide();
                                                
                        $.each(response.data.manufacturingAPIList, function (i, List) {
                            var cols = '';

                            var newRow = $("<tr id='" + counter + "'>");
                            cols += '<td><input type="text" class="form-control" value="' + List.apiSite + '" readonly/></td>';
                            cols += '<td><input type="text" class="form-control" value="' + List.apiName + '" readonly/></td>';
                            cols += '<td><input type="text" class="form-control" value="' + List.apiSiteName + '" readonly/></td>';

                            cols += '<td></td>';
                            newRow.append(cols);
                            $("table.order-listAPI").append(newRow);
                            counter++;
                            $('.ActionColumn1').hide();
                        });

                        $('#DRFManufacturingModel_Submit').hide();
                        $('#ManufacturingTabID').addClass('bg-success border');
                    }
                }

                if (response.data.scmList.length > 0) {
                    $('#DRFSCMModel_FreightCost').val(response.data.scmList[0].freightCost.toFixed(2));
                    $('#DRFSCMModel_FreightCost').attr("disabled", true);
                    $('#DRFSCMModel_TentativeShipmente').data("DateTimePicker").date(new Date(response.data.scmList[0].tentativeShipmente.split('T')[0]));
                    $('#DRFSCMModel_TentativeShipmente').attr("disabled", true);
                    $('#DRFSCMModel_TentativeDestination').data("DateTimePicker").date(new Date(response.data.scmList[0].tentativeDestination.split('T')[0]));
                    $('#DRFSCMModel_TentativeDestination').attr("disabled", true);
                    $('#DRFSCMModel_Remark').val(response.data.scmList[0].remark);
                    $('#DRFSCMModel_Remark').attr("disabled", true);
                    $('#DRFSCMModel_Submit').hide();
                    $('#SCMTabID').addClass('bg-success border');                    
                }
                if (response.data.raList.length > 0) {

                    if (response.data.raList[0].acc == true) {
                        $('#DRFRAModel_ACC').attr("checked", true);
                        $('#DRFRAModel_ACC').attr("disabled", true);
                    }
                    else {
                        $('#DRFRAModel_ACC').attr("disabled", true);
                    }

                    if (response.data.raList[0].zoneII == true) {
                        $('#DRFRAModel_ZoneII').attr("checked", true);
                        $('#DRFRAModel_ZoneII').attr("disabled", true);
                    }
                    else {
                        $('#DRFRAModel_ZoneII').attr("disabled", true);
                    }

                    if (response.data.raList[0].ivbdata == true) {
                        $('#DRFRAModel_Ivbdata').attr("checked", true);
                        $('#DRFRAModel_Ivbdata').attr("disabled", true);
                    }
                    else {
                        $('#DRFRAModel_Ivbdata').attr("disabled", true);
                    }

                    if (response.data.raList[0].protocolAvailability == true) {
                        $('#ProtocolAvailabilityYes').attr("checked", true);
                        $('#ProtocolAvailabilityYes').attr("disabled", true);
                        $('#ProtocolAvailabilityNo').attr("disabled", true);
                        $('#ProtocolAvailabilityNo').removeClass('radio-checked');
                    }
                    else {
                        $('#ProtocolAvailabilityYes').attr("disabled", true);
                        $('#ProtocolAvailabilityNo').attr("disabled", true);
                    }

                    if (response.data.raList[0].coppAvailability == true) {
                        $('#COPPAvailabilityYes').attr("checked", true);
                        $('#COPPAvailabilityYes').attr("disabled", true);
                        $('#COPPAvailabilityNo').attr("disabled", true);
                        $('#COPPAvailabilityNo').removeClass('radio-checked');
                    }
                    else {
                        $('#COPPAvailabilityYes').attr("disabled", true);
                        $('#COPPAvailabilityNo').attr("disabled", true);
                    }

                    $('#DRFRAModel_GMPAvailabilityId option[value="' + response.data.raList[0].gmpAvailabilityId + '"]').attr("selected", true);
                    $('#DRFRAModel_GMPAvailabilityId').attr("disabled", true);

                    if (response.data.raList[0].gmpAvailabilityId == 5) {
                        $('#DRFRAModel_GMPAvailability').val(response.data.raList[0].gmpAvailability);
                        $('#DRFRAModel_GMPAvailability').attr("disabled", true).show();
                    }

                    
                    if (response.data.raList[0].mfgLicense == true) {
                        $('#MfgLicenseYes').attr("checked", true);
                        $('#MfgLicenseYes').attr("disabled", true);
                        $('#MfgLicenseNo').attr("disabled", true);
                        $('#MfgLicenseNo').removeClass('radio-checked');
                    }
                    else {
                        $('#MfgLicenseYes').attr("disabled", true);
                        $('#MfgLicenseNo').attr("disabled", true);
                    }

                    $('#DossierTemplate option[value="' + response.data.initializationDetails.dossierTemplateID + '"]').attr("selected", true);
                    $('#DossierTemplate').attr("disabled", true);

                    if (response.data.raList[0].plantInspection == true) {
                        $('#PlantInspectionRequiredYes').attr("checked", true);
                        $('#PlantInspectionRequiredYes').attr("disabled", true);
                        $('#PlantInspectionRequiredNo').attr("disabled", true);
                        $('#PlantInspectionRequiredNo').removeClass('radio-checked');
                    }
                    else {
                        $('#PlantInspectionRequiredYes').attr("disabled", true);
                        $('#PlantInspectionRequiredNo').attr("disabled", true);
                    }

                    $('#ValidationBatches option[value="' + response.data.raList[0].validationBatches + '"]').attr("selected", true);
                    $('#ValidationBatches').attr("disabled", true);


                    if (response.data.raList[0].coaAvailability == true) {
                        $('#COAAvailabilityYes').attr("checked", true);
                        $('#COAAvailabilityYes').attr("disabled", true);
                        $('#COAAvailabilityNo').attr("disabled", true);
                        $('#COAAvailabilityNo').removeClass('radio-checked');
                    }
                    else {
                        $('#COAAvailabilityYes').attr("disabled", true);
                        $('#COAAvailabilityNo').attr("disabled", true);
                    }

                    if (response.data.raList[0].beAvailability == true) {
                        $('#BEAvailabililtyYes').attr("checked", true);
                        $('#BEAvailabililtyYes').attr("disabled", true);
                        $('#BEAvailabililtyNo').attr("disabled", true);
                        $('#BEAvailabililtyNo').removeClass('radio-checked');
                    }
                    else {
                        $('#BEAvailabililtyYes').attr("disabled", true);
                        $('#BEAvailabililtyNo').attr("disabled", true);
                    }

					if (response.data.raList[0].apidmFstatus == true) {
						$('#APIDMFstatusRequiredYes').attr("checked", true);
						$('#APIDMFstatusRequiredNo').removeClass('radio-checked');
					}
					else {
						$('#APIDMFstatusRequiredNo').attr("checked", true);
					}

                    if (response.data.raList[0].plantApproval == true) {
                        $('#PlantApprovalRequiredYes').attr("checked", true);
                        $('#PlantApprovalRequiredYes').attr("disabled", true);
                        $('#PlantApprovalRequiredNo').attr("disabled", true);
                        $('#PlantApprovalRequiredNo').removeClass('radio-checked');

                        if (response.data.raList[0].plantApprovalIfYes == "Onsite") {
                            $('#Onsite').attr("checked", true);
                        }
                        else {
                            $('#Desktop').attr("checked", true);
                        }
                    }
                    else {
                        $('#PlantApprovalRequiredYes').attr("disabled", true);
                        $('#PlantApprovalRequiredNo').attr("disabled", true);
					}

                    $('#DRFRAModel_RegistrationValidity').val(response.data.raList[0].registrationValidity);
                    $('#DRFRAModel_RegistrationValidity').attr("disabled", true);

                    $('#DRFRAModel_Timefordossierpreparation').val(response.data.raList[0].timefordossierpreparation);
                    $('#DRFRAModel_Timefordossierpreparation').attr("disabled", true);

                    $('#DRFRAModel_AMV').val(response.data.raList[0].amv);
                    $('#DRFRAModel_AMV').attr("disabled", true);

                    if (response.data.raList[0].pdr == true) {
                        $('#PDRYes').attr("checked", true);
                        $('#PDRYes').attr("disabled", true);
                        $('#PDRNo').attr("disabled", true);
                        $('#PDRNo').removeClass('radio-checked');
                    }
                    else {
                        $('#PDRYes').attr("disabled", true);
                        $('#PDRNo').attr("disabled", true);
                    }

                    if (response.data.raList[0].samplesAvailability == true) {
                        $('#SamplesAvailabilityYes').attr("checked", true);
                        $('#SamplesAvailabilityYes').attr("disabled", true);
                        $('#SamplesAvailabilityNo').attr("disabled", true);
                        $('#SamplesAvailabilityNo').removeClass('radio-checked');
                    }
                    else {
                        $('#SamplesAvailabilityYes').attr("disabled", true);
                        $('#SamplesAvailabilityNo').attr("disabled", true);
                    }

                    if (response.data.raList[0].importPermit == true) {
                        $('#ImportPermitYes').attr("checked", true);
                        $('#ImportPermitYes').attr("disabled", true);
                        $('#ImportPermitNo').attr("disabled", true);
                        $('#ImportPermitNo').removeClass('radio-checked');
                    }
                    else {
                        $('#ImportPermitYes').attr("disabled", true);
                        $('#ImportPermitNo').attr("disabled", true);
                    }
                    
                    if (response.data.raList[0].brandNameApproval == 'Yes') {
                        $('#BrandNameApprovalYes').attr("checked", true);
                        $('#BrandNameApprovalYes').attr("disabled", true);
                        $('#BrandNameApprovalNo').attr("disabled", true);
                        $('#BrandNameApprovalNotApplicable').attr("disabled", true);
                        $('#BrandNameApprovalNo').removeClass('radio-checked');
                    }
                    else if (response.data.raList[0].brandNameApproval == 'No') {
                        $('#BrandNameApprovalYes').attr("disabled", true);
                        $('#BrandNameApprovalNo').attr("disabled", true);
                        $('#BrandNameApprovalNotApplicable').attr("disabled", true);
                    }
                    else {
                        $('#BrandNameApprovalNotApplicable').attr("checked", true);
                        $('#BrandNameApprovalYes').attr("disabled", true);
                        $('#BrandNameApprovalNo').attr("disabled", true);
                        $('#BrandNameApprovalNotApplicable').attr("disabled", true);
                        $('#BrandNameApprovalNo').removeClass('radio-checked');
                    }


                    if (response.data.raList[0].availabilityofCDA == true) {
                        $('#AvailabilityOfCDAYes').attr("checked", true);
                        $('#AvailabilityOfCDAYes').attr("disabled", true);
                        $('#AvailabilityOfCDANo').attr("disabled", true);
                        $('#AvailabilityOfCDANo').removeClass('radio-checked');
                    }
                    else {
                        $('#AvailabilityOfCDAYes').attr("disabled", true);
                        $('#AvailabilityOfCDANo').attr("disabled", true);
                    }


                    $('#DRFRAModel_CurrencyID option[value="' + response.data.raList[0].currencyID + '"]').attr("selected", true);
                    $('#DRFRAModel_CurrencyID').attr("disabled", true);

                    $('#DRFRAModel_ProductRegistrationFee').val(response.data.raList[0].productRegistrationFee.toFixed(2));
                    $('#DRFRAModel_ProductRegistrationFee').attr("disabled", true);

                    $('#DRFRAModel_ComparativeDissolutionProfileData').val(response.data.raList[0].comparativeDissolutionProfileData);
                    $('#DRFRAModel_ComparativeDissolutionProfileData').attr("disabled", true);

                    $('#DRFRAModel_Remarks').val(response.data.raList[0].remarks);
                    $('#DRFRAModel_Remarks').attr("disabled", true);
					$('#DRFRAModel_ConsultantCost').val(response.data.raList[0].consultantCost.toFixed(2));
					$('#DRFRAModel_LegalizationCost').val(response.data.raList[0].legalizationCost.toFixed(2));
					$('#DRFRAModel_TranslationCost').val(response.data.raList[0].translationCost.toFixed(2));
					$('#DRFRAModel_OtherCost').val(response.data.raList[0].otherCost.toFixed(2));
                    $('#DRFRAModel_Submit').hide();
                    $('#RATabID').addClass('bg-success border');
                }

                if (response.data.medicalList.length>0) {                            
                    $('#Remark1').val(response.data.medicalList[0].remark1);
                    $('#Remark1').attr("disabled", true);
                    $('#Remark2').val(response.data.medicalList[0].remark2);
                    $('#Remark2').attr("disabled", true);
                    $('#Remark3').val(response.data.medicalList[0].remark3);
                    $('#Remark3').attr("disabled", true);


                    if (response.data.medicalList[0].beCtVitroAvailable == true) {
                        $('#BeCtVitroAvailableYes').attr("checked", true);
                        $('#BeCtVitroAvailableYes').attr("disabled", true);
                        $('#BeCtVitroAvailableNo').attr("disabled", true);
                        $('#BeCtVitroAvailableNo').removeClass('radio-checked');
                    }
                    else {
                        $('#BeCtVitroAvailableYes').attr("disabled", true);
                        $('#BeCtVitroAvailableNo').attr("disabled", true);
                    }


                    if (response.data.medicalList[0].bioWaiver == true) {
                        $('#BioWaiverYes').attr("checked", true);
                        $('#BioWaiverYes').attr("disabled", true);
                        $('#BioWaiverNo').attr("disabled", true);
                        $('#BioWaiverNo').removeClass('radio-checked');
                    }
                    else {
                        $('#BioWaiverYes').attr("disabled", true);
                        $('#BioWaiverNo').attr("disabled", true);
                    }

                    if (response.data.medicalList[0].ctWaiver == true) {
                        $('#CTWaiverYes').attr("checked", true);
                        $('#CTWaiverYes').attr("disabled", true);
                        $('#CTWaiverNo').attr("disabled", true);
                        $('#CTWaiverNo').removeClass('radio-checked');
                    }
                    else {
                        $('#CTWaiverYes').attr("disabled", true);
                        $('#CTWaiverNo').attr("disabled", true);
                    }

                    $('#DRFMedicalModel_Submit').hide();
                    $('#MedicalTabID').addClass('bg-success border');

                }
            },
            failure: function () {

            }
        });


		var dataTable = $('#PIDFTable').DataTable({
			responsive: false,
			lengthChange: false,
			autoWidth: false,
                paging: false,
                searching: false,
                sort: false,
                "bInfo": false,
                columnDefs: [
                    { responsivePriority: 1, targets: -5 },
                    { responsivePriority: 1, targets: -3 },
                    { responsivePriority: 100, targets: -4 }
                ],

                language: {
                    "emptyTable": "@SharedLocalizer["No data available in table"].Value",
                    "info": "@SharedLocalizer["Showing _START_ to _END_ of _TOTAL_ entries"].Value",
                    "infoEmpty":"@SharedLocalizer["Showing 0 to 0 of 0 entries"].Value",
                    "infoFiltered":"@SharedLocalizer["(filtered from _MAX_ total entries)"].Value",
                    "lengthMenu":"@SharedLocalizer["Show _MENU_ entries"].Value",
                    "loadingRecords": "@SharedLocalizer["Loading..."].Value",
                    "processing": "@SharedLocalizer["Processing..."].Value",
                    "search": "@SharedLocalizer["Search"].Value",
                    "zeroRecords":"@SharedLocalizer["No matching records found"].Value",
                    "paginate": {
                        "first":"@SharedLocalizer["First"].Value",
                        "last":"@SharedLocalizer["Last"].Value",
                        "next": "@SharedLocalizer["Next"].Value",
                        "previous":"@SharedLocalizer["Previous"].Value"
                    },
                }
            });

            getPIDFList = function () {
                //$('#loaderContainer').show();
                var data = {
                    "DRFID":@ViewBag.DetInitializationID,
                    "CountryID":@ViewBag.DetCountryID
                };

               // console.log(data);

               $.ajax({
                    type: "POST",
                    url: '@Url.Action("AttachedPIDFDetails", "DRFInitialization")/',
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data:data,
                    success: function (response) {
                        $('#loading').hide();
                        var jsonObject = response.data;

                        //console.log(jsonObject);

                        var result = jsonObject.map(function (item) {
                            var result = [];

                            result.push(item.pidfNo);
                            result.push(item.projectorProductName);
                            result.push(item.strengths);
                            result.push(item.patentStatus);
                            result.push(item.continentName);
                            result.push(item.countryName);
                            result.push(item.packing);
                            result.push(item.batchSize);
                            result.push(item.packSize);
                            result.push(item.cogs);
                            result.push(item.freight);
                            result.push(item.totalCIFCost);
                            result.push(item.cifPricePerUnit);
                            result.push(item.cifPricePerPack);
                            result.push(item.profitPerPack);
                            result.push(item.percentCont);
                            result.push(item.contributionThreeYear);
                            result.push(item.costofThreeBatches);
                            result.push(item.randDCost);
                            result.push(item.filingCost);
                            result.push(item.stabilityCost);
                            result.push(item.totalInvest);
                            result.push(item.roi);
                            //result.push(item.PidfStatus);
                            return result;
                        });
                        dataTable.clear();
                        dataTable.rows.add(result); // add to DataTable instance
                        dataTable.draw();
                    },
                    failure: function () {
                        $("#PIDFTable").append('@SharedLocalizer["Error when fetching data please contact administrator"].Value');
                    }
                });
            }
            getPIDFList();
    });

    $(function () {

        $('#DRFManufacturingModel_TentativeSchedule').datetimepicker({
            format: 'DD-MM-YYYY',
            minDate: new Date()
        });

        $('#MANTentativeSchedule .fa-calendar').click(function () {
            $("#DRFManufacturingModel_TentativeSchedule").focus();
        });


        $('#DRFSCMModel_TentativeDestination').datetimepicker({
            format: 'DD-MM-YYYY',
            minDate: new Date()
        });

        $('#SCMTentativeDestination .fa-calendar').click(function () {
            $("#DRFSCMModel_TentativeDestination").focus();
        });

        $('#DRFSCMModel_TentativeShipmente').datetimepicker({
            format: 'DD-MM-YYYY',
            minDate: new Date()
        });

        $('#SCMTentativeShipmente .fa-calendar').click(function () {
            $("#DRFSCMModel_TentativeShipmente").focus();
        });



    });

    function SubmitDRFSCMForm(form) {
        $('#DRFSCMModel_InitializationID').val(@ViewBag.DetInitializationID);
        var url = "/DRFInitialization/Index";
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            $('#loading').show();
            $.ajax({
                type : "POST",
                url : '@Url.Action("InsertDRFSCMDetails", "DRFInitialization")/',
                data : $(form).serialize(),
                success: function (result) {
                    //console.log(result);
                    $('#loading').hide();
                    if (result.data === "success") {
                        openCommonModal('successModal modal-sm', '@Html.Raw(SharedLocalizer["Success"].Value)', '@Html.Raw(SharedLocalizer["Supply Chain Management data updated successfully."].Value)', true);
                        setTimeout(function () { location.href = url; }, 2000);
                        //location.reload();
                    }
                    else {
                        openCommonModal('alertModal modal-sm', '@SharedLocalizer["Error"].Value', result.message, false);
                    }
                }
            });
        }
        return false;
    }

    function SubmitDRFManufacturingForm(form) {
        $('#DRFManufacturingModel_InitializationID').val(@ViewBag.DetInitializationID);
		$('#DRFManufacturingModel_ManufacturingAPISiteList').val(JSON.stringify(arrManufacturingAPISite));

        var url = "/DRFInitialization/Index";
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            $('#loading').show();
            $.ajax({
                type : "POST",
                url : '@Url.Action("InsertDRFManufacturingDetails", "DRFInitialization")/',
                data : $(form).serialize(),
                success: function (result) {                    
                    $('#loading').hide();
                    if (result.data === "success") {
                        openCommonModal('successModal modal-sm', '@Html.Raw(SharedLocalizer["Success"].Value)', '@Html.Raw(SharedLocalizer["Manufacturing data updated successfully."].Value)', true);
                        setTimeout(function () { location.href = url; }, 2000);                        
                    }
                    else {
                        openCommonModal('alertModal modal-sm', '@SharedLocalizer["Error"].Value', result.message, false);
                    }
                }
            });
        }
        return false;
    }

    function SubmitDRFRAForm(form) {
        $('#DRFRAModel_InitializationID').val(@ViewBag.DetInitializationID);
        var url = "/DRFInitialization/Index";
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            $('#loading').show();
            $.ajax({
                type : "POST",
                url : '@Url.Action("InsertDRFRADetails", "DRFInitialization")/',
                data : $(form).serialize(),
                success: function (result) {
                    $('#loading').hide();
                    if (result.data === "success") {
                        openCommonModal('successModal modal-sm', '@Html.Raw(SharedLocalizer["Success"].Value)', '@Html.Raw(SharedLocalizer["Regulatory data updated successfully."].Value)', true);
                        setTimeout(function () { location.href = url; }, 2000);                        
                    }
                    else {
                        openCommonModal('alertModal modal-sm', '@SharedLocalizer["Error"].Value', result.message, false);
                    }
                }
            });
        }
        return false;
    }

    function SubmitIPForm(form) {
        $('#DRFIPModel_InitializationID').val(@ViewBag.DetInitializationID);

        var url = "/DRFInitialization/Index";
       
        if (detailsArray.length == 0) {
            $('#IPD_RegulatedDetails_Error').empty().append("Filled atleast one record");
            return false;
        }
        else {
            $('#IPD_RegulatedDetails_Error').empty();
        }

        $('#DRFIPModel_DRFIPModelDetailsList').val(JSON.stringify(detailsArray));
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            $('#loading').show();
            $.ajax({
                type : "POST",
                url : '@Url.Action("InsertDRFIPDetails", "DRFInitialization")/',
                data : $(form).serialize(),
                success: function (result) {                    
                        $('#loading').hide();
                    if (result.data === "success") {
                        openCommonModal('successModal modal-sm', '@Html.Raw(SharedLocalizer["Success"].Value)', '@Html.Raw(SharedLocalizer["IP data updated successfully."].Value)', true);
                        setTimeout(function () { location.href = url; }, 2000);                        
                    }
                    else {
                        openCommonModal('alertModal modal-sm', '@SharedLocalizer["Error"].Value', result.message, false);
                    }
                }
            });
        }
        return false;
    }

    function SubmitDRFMedicalForm(form)
    {

        $('#DRFMedicalModel_InitializationID').val(@ViewBag.DetInitializationID);
        var url = "/DRFInitialization/Index";
        $('#DRFMedicalModel_InitializationID').val(@ViewBag.UpdateInitializationID);
		var url = "/DRFInitialization/Index";

        //following commneted by Yogesh B on date 22/09/2021 as told by Rahul Patil
		////if ($('[id="BeCtVitroAvailableYes"]:checked').val() === 'True' && ($('#DRFMedicalModel_BECost').val() == '' || $('#DRFMedicalModel_BECost').val() == null || $('#DRFMedicalModel_BECost').val() == undefined || $('#DRFMedicalModel_BECost').val() == '0.00')) {
  //      if ($('[id="BeCtVitroAvailableYes"]:checked').val() === 'True' && ($('#DRFMedicalModel_BECost').val() == '' || $('#DRFMedicalModel_BECost').val() == null || $('#DRFMedicalModel_BECost').val() == undefined )) {
  //      $('#DRFMedicalModel_BECost_Error').text('The BECost field is required');
		//	return false;
		//}
		//if ($('[id="BioWaiverYes"]:checked').val() === 'True' && ($('#DRFMedicalModel_BioCost').val() == '' || $('#DRFMedicalModel_BioCost').val() == null || $('#DRFMedicalModel_BioCost').val() == undefined || $('#DRFMedicalModel_BioCost').val() == '0.00')) {
		//	$('#DRFMedicalModel_BioCost_Error').text('The BioCost field is required');
		//	return false;
		//}
		//if ($('[id="CTWaiverYes"]:checked').val() === 'True' && ($('#DRFMedicalModel_CTCost').val() == '' || $('#DRFMedicalModel_CTCost').val() == null || $('#DRFMedicalModel_CTCost').val() == undefined || $('#DRFMedicalModel_CTCost').val() == '0.00')) {
		//	$('#DRFMedicalModel_CTCost_Error').text('The CTCost field is required');
		//	return false;
		//}
        
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            $('#loading').show();
            $.ajax({
                type : "POST",
                url : '@Url.Action("InsertDRFMedicalDetails", "DRFInitialization")/',
                data : $(form).serialize(),
                success: function (result) {
                    //console.log(result);
                        $('#loading').hide();
                    if (result.data === "success") {
                        openCommonModal('successModal modal-sm', '@Html.Raw(SharedLocalizer["Success"].Value)', '@Html.Raw(SharedLocalizer["Medical data updated successfully."].Value)', true);
                        setTimeout(function () { location.href = url; }, 2000);
                        //location.reload();
                    }
                    else {
                        openCommonModal('alertModal modal-sm', '@SharedLocalizer["Error"].Value', result.message, false);
                    }
                }
            });
        }
        return false;
    }

	function convertDDMMYYY(tempDate) {
        return tempDate.split('-')[2] + '-' + tempDate.split('-')[1] + '-' + tempDate.split('-')[0];
    }
	var arrManufacturingAPISite = [];

    $("#addrow_for_Api").on("click", function () {
        var isValid = true;

        if ($('#APISite').val() == null || $('#APISite').val() == "" || $('#APISite').val() == undefined) {
            isValid = false;
			$('#DRF_APISite_Error').empty().append("The 'APISite' field is required.");
        }
        else {
            $('#DRF_APISite_Error').empty();
        }
        // alert($('#cmbUOM').val());
        if ($('#cmbSOM').val() == null || $('#cmbSOM').val() == "" || $('#cmbSOM').val() == undefined) {
            isValid = false;
            $('#DRF_cmbSOM_Error').empty().append("The 'API' field is required.");
        }
        else {
            $('#DRF_cmbSOM_Error').empty();
        }

        if ($('#APIName').val() == null || $('#APIName').val() == "" || $('#APIName').val() == undefined) {
            isValid = false;
            $('#DRF_APIName_Error').empty().append("The 'APIName' field is required.");
        }
        else {
            $('#DRF_APIName_Error').empty();
        }


        if (isValid) {
            
            var tempAPISite = $('#APISite').val();
            var tempAPIName = $('#APIName').val();
            var tempcmbSOMid = $('#cmbSOM').val();
            var tempcmbSOM = $("#cmbSOM option:selected").text(); //$('#cmbUOM').OptionSelecttext();

            var newRow = $("<tr id='" + counter + "'>");
            var cols = "";

            // console.log($('#cmbUOM').text);
            cols += '<td><input type="text" class="form-control" value="' + tempcmbSOM + '" readonly/></td>';
            cols += '<td><input type="text" class="form-control" value="' + tempAPIName + '" readonly/></td>';
            cols += '<td><input type="text" class="form-control" value="' + tempAPISite + '" readonly/></td>';

            cols += '<td><button type="button" class="ibtnDel btn btn-sm btn-danger"><i class="far fa-trash-alt"></i></button></td>';
            newRow.append(cols);
            $("table.order-listAPI").append(newRow);

            var temp = {
                CounterID: counter,
				APISiteName: tempAPISite,
                APIId: tempcmbSOMid,
                APIName: tempAPIName
            };
            //console.log(temp);
			arrManufacturingAPISite.push(temp);

            //console.log(detailsArray);

            counter++;
            clearRow();
        }
    });
	function clearRow() {
        $('#APISite').val("");
        $('#APIName').val("");
        $('#cmbSOM').val("");

    }
    $("table.order-listAPI").on("click", ".ibtnDel", function (event) {
            var get_id = $(this).parent().parent().attr('id');
            $(this).closest("tr").remove();
			for (var i = 0; i < arrManufacturingAPISite.length; i++) {
				if (arrManufacturingAPISite[i].CounterID == get_id) {
					arrManufacturingAPISite.splice(i, 1);
                }
            }
        });

    function clearPreviousData() {
        $("#MTT").find("tr:gt(1)").remove();
    }

</script>