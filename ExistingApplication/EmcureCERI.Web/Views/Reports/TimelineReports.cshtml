@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> SharedLocalizer
@model EmcureCERI.Web.Models.IndexPageModel

@{
    ViewData["Title"] = "Reports View";

}

<style>
    .treegrid-control span {
        cursor: pointer;
        padding: 0px 5px;
        display: block;
        box-shadow: 0 0 1px #999;
        width: 20px;
        height: 25px;
    }

    .treegrid-control-open span {
        cursor: pointer;
        padding: 0px 7px;
        display: block;
        box-shadow: 0 0 1px #999;
        width: 20px;
        height: 25px;
    }
</style>

<div class="content-wrapper">
    <section class="content pt-3">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <!-- Custom tabs (Charts with tabs)-->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">
                                <i class="fas fa-list mr-2"></i> Report List
                            </h3>
                            <div class="card-tools md-left">
                                <div class="mybtn-group">
                                    <a class="btn btn-primary" href="@Url.Action("Index","Dashboard")"><i class="fas fa-undo mr-1"></i>Back</a>

                                    <div class="export-btn mybtn-group"></div>
                                </div>
                            </div>
                        </div>

                        <div class="card-body report-scroll">
                            <div class="row">
                                <div class="col-lg-4 col-md-12 zindexupper">
                                    <div class="row">
                                        <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                            <label for="country">DRF</label>
                                            @Html.DropDownListFor(m => m.CommonVModel.InitializationID, new SelectList(string.Empty, "Value", "Text"), "Select", htmlAttributes: new { @class = "form-control input-sm f-s-15 bg-eff4f55c w100per molecule_filter ", id = "cmbMolecule" })
                                            @Html.ValidationMessageFor(m => m.CommonVModel.InitializationID, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                            <label for="molecule">Status</label>
                                            @Html.DropDownListFor(m => m.CommonVModel.StatusID, new SelectList(string.Empty, "Value", "Text"), "Select", htmlAttributes: new { @class = "form-control input-sm f-s-15 bg-eff4f55c w100per country_filter", id = "cmbStatus" })
                                            @Html.ValidationMessageFor(m => m.CommonVModel.StatusID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="table-responsive match-filter">
                                        <table id="TimelineMoleculeTable" class="table table-bordered" cellspacing="0" width="100%"></table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<script src='~/js/dataTables.treeGrid.js'></script>

@section Scripts {
    <script>

        var defaultValue = "<option value=''>Select</option>";
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetDropdownsForReports", "Reports")/',
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            //data: data,
            success: function (response) {
                //debugger
                //console.log(response);

                $('#cmbStatus').empty();
                $('#cmbStatus').empty().append(
                    defaultValue
                );
                $.each(response.data.statusList, function (i, List) {
                    $("#cmbStatus").append('<option value="' + List.statusID + '">' +
                        List.status + '</option>');
                });

                $('#cmbMolecule').empty();
                $('#cmbMolecule').empty().append(
                    defaultValue
                );
                $.each(response.data.moleculeList, function (i, List) {
                    $("#cmbMolecule").append('<option value="' + List.initializationID + '">' +
                        List.genericName + '</option>');
                });
            },
            failure: function () {
                $('#cmbStatus').empty().append(
                    defaultValue
                );
                $('#cmbStatus').val("");

                $('#cmbMolecule').empty().append(
                    defaultValue
                );
                $('#cmbMolecule').val("");
            }
        });


        var columns = [
            //{

            //    title: '',
            //    target: 0,
            //    className: 'treegrid-control',
            //    data: function (item) {
            //        if (item.srNo) {
            //            return '<span>+<\/span>';
            //        }
            //        return '';
            //    }

            //},

            {
                title: 'SrNo',
                target: 1,
                data: function (item) {
                    return item.srNo;
                }

            },
            {
                title: 'DRF No.',
                target: 2,
                data: function (item) {
                    return item.drfNo;
                }

            },
            {
                title: 'DRF',
                target: 3,
                data: function (item) {
                    return item.genericName;
                }

            },

          {
                title: 'Region',
                target: 4,
                data: function (item) {
                    return item.region;
                }

            },

            {
                title: 'Country',
                target: 5,
                data: function (item) {
                    return item.country;
                }

            },
            {
                title: 'Pharmaceutical<br>Form',
                target: 6,
                data: function (item) {
                    return item.pharmaceutical_Form;
                }
            },
            {
                title: 'Strength',
                target: 7,
                data: function (item) {
                    return item.strength_Name;
                }
            },
            //{
            //    title: 'In-House OR Third-Party',
            //    target: 8,
            //    data: function (item) {
            //        return item.partner;
            //    }
            //},
            {
                title: 'Status',
                target: 8,
                data: function (item) {
                    return item.status;
                }
            },
            {
                title: 'Created Date',
                target: 9,
                data: function (item) {
                    return item.createdDate;
                }
            },
            {
                title: 'DRF CreatedBy',
                target: 10,
                data: function (item) {
                    if (item.drfCreatedDate.includes('-')) {
                        return '0 Days,0 Hours';
                    }
                    else {
                        return item.drfCreatedDate;
                    }
                }
            },

            {
                title: 'Country Manager Approved',
                target: 11,
                data: function (item) {
                    return item.cmnNameApprovedDate;


                }
            },
              {
                title: 'Country Manager Timeline',
                target: 12,
                data: function (item) {
                    //return item.cM_Approved_DayHours;
                    if (item.cM_Approved_DayHours != null) {
                        if (item.cM_Approved_DayHours.includes('-')) {
                            return '0 Days,0 Hours';
                        }
                        else {
                            return item.cM_Approved_DayHours;
                        }
                    }
                    else {
                        return item.cM_Approved_DayHours;
                    }
                }
            },

            {
                title: 'Reginal Manager Approved',
                target: 13,
                data: function (item) {
                    return item.lmApprovedDate;
                }
            },

              {
                  title: 'Reginal Manager Timeline',
                target: 14,
                data: function (item) {
                   // return item.lM_Approved_DayHours;
                    if (item.lM_Approved_DayHours != null) {
                        if (item.lM_Approved_DayHours.includes('-')) {
                            return '0 Days,0 Hours';
                        }
                        else {
                            return item.lM_Approved_DayHours;
                        }
                    }
                    else {
                        return item.lM_Approved_DayHours;
                    }
                }
            },

            {
                title: 'HOD Approved',
                target: 15,
                data: function (item) {
                    return item.hodApprovedDate;
                }
            },

              {
                title: 'HOD Approved Timeline',
                target: 16,
                data: function (item) {
                    //return item.hoD_Approved_DayHours;

                    if (item.hoD_Approved_DayHours != null) {
                        if (item.hoD_Approved_DayHours.includes('-')) {
                            return '0 Days,0 Hours';
                        }
                        else {
                            return item.hoD_Approved_DayHours;
                        }
                    }
                    else {
                        return item.hoD_Approved_DayHours;
                    }
                }
            },

            {
                title: 'IP Approved',
                target: 17,
                data: function (item) {
                    return item.iP_Approved;
                }
            },

              {
                title: 'IP Approved Timeline',
                target: 18,
                data: function (item) {
                    //return item.after1stApproved_IPDept_DayHourse;

                    if (item.after1stApproved_IPDept_DayHourse != null) {
                        if (item.after1stApproved_IPDept_DayHourse.includes('-')) {
                            return '0 Days,0 Hours';
                        }
                        else {
                            return item.after1stApproved_IPDept_DayHourse;
                        }
                    }
                    else {
                        return item.after1stApproved_IPDept_DayHourse;
                    }
                }
            },

            {
                title: 'Manufacturing Approved',
                target: 19,
                data: function (item) {
                    return item.manufacturing_Approved;



                }
            },

              {
                title: 'Manufacturing Approved Timeline',
                target: 20,
                data: function (item) {
                    //return item.after1stApproved_ManufacturingDept_DayHourse;

                    if (item.after1stApproved_ManufacturingDept_DayHourse != null) {
                        if (item.after1stApproved_ManufacturingDept_DayHourse.includes('-')) {
                            return '0 Days,0 Hours';
                        }
                        else {
                            return item.after1stApproved_ManufacturingDept_DayHourse;
                        }
                    }
                    else {
                        return item.after1stApproved_ManufacturingDept_DayHourse;
                    }
                }
            },

            {
                title: 'SCM Approved',
                target: 21,
                data: function (item) {
                    return item.scM_Approved;
                }
            },
            {
                title: 'SCM Approved Timeline',
                target: 22,
                data: function (item) {
                    //return item.after1stApproved_SCMDept_DayHourse;

                    if (item.after1stApproved_SCMDept_DayHourse != null) {
                        if (item.after1stApproved_SCMDept_DayHourse.includes('-')) {
                            return '0 Days,0 Hours';
                        }
                        else {
                            return item.after1stApproved_SCMDept_DayHourse;
                        }
                    }
                    else {
                        return item.after1stApproved_SCMDept_DayHourse;
                    }
                }
            },
            {
                title: 'RA Approved',
                target: 23,
                data: function (item) {
                    return item.rA_Approved;
                }
            },
            {
                title: 'RA Approved Timeline',
                target: 24,
                data: function (item) {
                    //return item.after1stApproved_RADept_DayHourse;

                    if (item.after1stApproved_RADept_DayHourse != null) {
                        if (item.after1stApproved_RADept_DayHourse.includes('-')) {
                            return '0 Days,0 Hours';
                        }
                        else {
                            return item.after1stApproved_RADept_DayHourse;
                        }
                    }
                    else {
                        return item.after1stApproved_RADept_DayHourse;
                    }
                }
            },


            {
                title: 'Medical Approved',
                target: 25,
                data: function (item) {
                    return item.medical_Approved;
                }
            },
            {
                title: 'Medical Approved Timeline',
                target: 26,
                data: function (item) {
                    //return item.after1stApproved_MedicalDept_DayHourse;
                    if (item.after1stApproved_MedicalDept_DayHourse != null) {
                        if (item.after1stApproved_MedicalDept_DayHourse.includes('-')) {
                            return '0 Days,0 Hours';
                        }
                        else {
                            return item.after1stApproved_MedicalDept_DayHourse;
                        }
                    }
                    else {
                        return item.after1stApproved_MedicalDept_DayHourse;
                    }
                }
            },
            {
                title: 'Finance Approved',
                target: 27,
                data: function (item) {
                    return item.finance_Approved;
                }
            },
            {
                title: 'Finance Approved Timeline',
                target: 28,
                data: function (item) {
                    //return item.after1stApproved_FinanceialDept_DayHourse;
                    if (item.after1stApproved_FinanceialDept_DayHourse != null) {
                        if (item.after1stApproved_FinanceialDept_DayHourse.includes('-')) {
                            return '0 Days,0 Hours';
                        }
                        else {
                            return item.after1stApproved_FinanceialDept_DayHourse;
                        }
                    }
                    else {
                        return item.after1stApproved_FinanceialDept_DayHourse;
                    }
                }
            }

        ];

        $(document).ready(function () {
            //var StatusId = 19;
            // var regEx = "^" + StatusId + "$";
            var table = $('#TimelineMoleculeTable').DataTable({
                columns: columns,
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'excel', text: '<i class="far fa-file-excel"></i> Export In Excel ', className: "btn-primary", exportOptions: {
                            columns: ':visible'
                        }
                    },
                    { extend: 'colvis', className: "btn-primary" }
                ],

                lengthChange: false,
                //columnDefs: [
                //    {
                //        visible: false,
                //        targets: 8
                //    }

                //],
                //initComplete: function () {
                //    this
                //        .api()
                //        .column(8)
                //        .search(regEx, true, false,true)
                //        .draw()
                //},
                ajax: '/Reports/GetReportTimeline',
                treeGrid: {
                    'left': 10,
                    'expandIcon': '<span>+<\/span>',
                    'collapseIcon': '<span>-<\/span>'
                }

            });

            $('.molecule_filter').on('change', function () {
                var term = $('#cmbMolecule').find(":selected").text();

               // alert(term);
                if (term == "Please Select Option") {

                    table.columns(2).search("", true, false, true).draw();
                }
                else {
                    var regExp = "^" + term + "$";

                    table.columns(2).search(regExp, true, false, true).draw();
                }

            });

            $('.country_filter').on('change', function () {
                var term = $('#cmbStatus').find(":selected").text();
                // alert(term);
                if (term == "Please Select Option") {

                    table.columns(7).search("", true, false, true).draw();
                }
                else {
                    var regExp = "(^|,)" + term + "(,|$)";

                    table.columns(7).search(regExp, true, false, true).draw();
                }

            });
            table.buttons().container()
                .appendTo('.export-btn');

            //$('.status_filter').on('click', function () {
            //    var term = $(this).data('status');
            //    var regExp = "^" + term + "$";
            //    table.columns(8).search(regExp, true, false,true).draw();

            //});

            $(".buttons-excel").removeClass("btn-secondary");
            $(".buttons-collection").removeClass("btn-secondary");

        });


    </script>
}

