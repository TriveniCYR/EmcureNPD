@using Microsoft.AspNetCore.Http
@using EmcureNPD.Web.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using EmcureNPD.Utility.Utility;
@using EmcureNPD.Utility.Enums
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.Extensions.Localization.IStringLocalizer<EmcureNPD.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<EmcureNPD.Resource.Shared> SharedLocalizer
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@model EmcureNPD.Business.Models.PidfPbfFormEntity
@{
    ViewData["Title"] = "PBFAnaLytical";
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
}


<div class="card" style="width:100%">
    <div class="card-body" style="background-color:white">
        @*<form asp-action="PBFAnalyticalForm" asp-controller="PBF" enctype="multipart/form-data" method="post">*@
        <input type="hidden" asp-for="PidfPbfAnalyticals.PIDFID" />
        <input type="hidden" asp-for="PidfPbfAnalyticals.PBFAnalyticalID" />
        <input id="hdnBusinessUnitId" type="hidden" asp-for="PidfPbfAnalyticals.BusinessUnitId" />
        <input id="hdnStrengthId" type="hidden" asp-for="PidfPbfAnalyticals.StrengthId" />
        <input type="hidden" asp-for="PidfPbfAnalyticals.TestLicenseAvailability"/>

        <div class="card-header">
            <h5 class="mb-0"><b>General</b></h5>
        </div>
        <br>
        <div class="card-body">
            <div class="row">

                <div class="col-md-3">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.ProjectName,@MasterLocalizer["ProjectName"], new { @class = "control-label" })<span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.PidfPbfAnalyticals.ProjectName, new {@readonly = "readonly", @class = "form-control", @placeholder = @MasterLocalizer["ProjectName"] })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        <label class="control-label">Strength</label><span class="text-danger">*</span>
                        <div style="display: -webkit-inline-box;" id="strengthlblAnalytical">
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.SAPProjectProjectCode,"SAP Code / Project Code", new { @class = "control-label" })<span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.PidfPbfAnalyticals.SAPProjectProjectCode, new {@readonly = "readonly", @class = "form-control", @placeholder = "SAP Code / Project Code" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.ImprintingEmbossingCodes,"Imprinting Embossing Codes", new { @class = "control-label" })<span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.PidfPbfAnalyticals.ImprintingEmbossingCodes, new {@readonly = "readonly", @class = "form-control", @placeholder = "Imprinting Embossing Codes" })
                    </div>
                </div>
            </div>

            <div class="row">

                <div class="col-md-3">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.TotalExpense,"Total Expenses", new { @class = "control-label" })<span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.PidfPbfAnalyticals.TotalExpense, new { @class = "form-control", @placeholder = "Total Expenses" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.ProjectComplexity,"Project Complexity", new { @class = "control-label" })<span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.PidfPbfAnalyticals.ProjectComplexity, new { @class = "form-control", @placeholder = "Project Complexity" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.ProductTypeId, "Product Type", new { @class = "control-label" })<span class="text-danger">*</span>
                        <select id="AnalyticalProductTypeId" name="PidfPbfAnalyticals.ProductTypeId" class="form-control readOnlyUpdate" ></select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group required">
                        <label class="control-label">Test Licence Availability</label><span class="text-danger">*</span>

                        <div stylle="display: inline-block;" id="Analyticallicence">
                            @* <input type="checkbox" value="AHD" name=TestLicenseAvailability>AHD
                            <input type="checkbox" value="BHS" name=TestLicenseAvailability>BHS
                            <input type="checkbox" value="HNJ" name=TestLicenseAvailability>HNJ
                            <input type="checkbox" value="LYO" name=TestLicenseAvailability>LYO Cycle*@
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col-md-3">
                    <div class="form-group required">
                        <label class="control-label">Budget and Timeline Submission Date</label><span class="text-danger">*</span>
                        @Html.TextBoxFor(@modal=> modal.PidfPbfAnalyticals.BudgetTimelineSubmissionDate,"{0:yyyy-MM-dd}",new{@type="date",@class="form-control readOnlyUpdate"})
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.FormulationId, "Formulation GL", new { @class = "control-label" })<span class="text-danger">*</span>
                        <select id="AnalyticalFormulationId" name="PidfPbfAnalyticals.FormulationId" class="form-control readOnlyUpdate" ></select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.AnalyticalId, "Analytical GL", new { @class = "control-label" })<span class="text-danger">*</span>
                        <select id="AnalyticalAnalyticalId" name="PidfPbfAnalyticals.AnalyticalId" class="form-control readOnlyUpdate" ></select>
                    </div>
                </div>

            </div>
            <br />
            <div class="row border m-2">
                <div class="col-md-3">
					@Html.LabelFor(model => model.PidfPbfAnalyticals.StrengthId, "Strength", new { @class = "control-label" })<span class="text-danger">*</span>
                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.StrengthId,"", new { @class = "text-danger" })

                </div>
                <div class="col-md-9 pl-lg-5">
                      @*-----------------Strength---------------------*@

            <div class="card card-maroon card-outline card-outline-tabs m-0">
                <div class="card-header p-0 border-bottom-0">
                    @if (Model.MasterStrengthEntities.Count() > 0 || Model.MasterStrengthEntities != null)
                        {
                                <input type="hidden" id="PIDFProductStrengthId" value="@Model.MasterStrengthEntities[0].PidfproductStrengthId" />
                        }
                            <ul class="nav nav-tabs row m-0 text-center" id="ProductStrengthTabs">
                        @if (Model.MasterStrengthEntities.Count() > 0 || Model.MasterStrengthEntities != null)
                        {
                            int k = 0;
                            @foreach (var _strength in Model.MasterStrengthEntities)
                            {
                            <li class="nav-item col-6 p-0">
                                    <a class="nav-link" href="#tab_@_strength.Strength" onClick="StrengthtabClick('@UtilityHelper.Encrypt(_strength.PidfproductStrengthId.ToString())','@Model.Pidfid');" id="Strengthtab_@_strength.PidfproductStrengthId">@_strength.Strength</a>
                                </li>
                                k = k + 1;
                            }
                        }
                    </ul>
                </div>
            </div>
            @*-----------------End- of-Strength---------------------*@
                </div>
            </div>
            <br />
            <div class="card-header">
                <h5 class="mb-0"><b>Analytical Activities</b></h5>
            </div>
            <br />
            @*//Prototype Section Start*@
            <div class="card-header">
                <h5 class="mb-0"><b>Prototype</b></h5>
            </div>
            <br />
            <div>
                <table id="PrototypeTable" class="table table-bordered table-striped table-hover" style="width:100%">
                    <thead>
                        <tr>
                            <th>Test Type</th>
                            <th>Number of tests</th>
                            <th>Prototype Development</th>
                            <th>Rs /test</th>
                            <th>Prototype Cost</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="PrototypeTableBody">
                        @if (Model.PidfPbfAnalyticals != null)
                        {
                            if (Model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes != null)
                            {
                                for (int j = 0; j < Model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes.Count(); j++)
                                {
                                    <tr id="PrototypeTableRow_@j">
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    <select id="AnalyticalPrototypeTestTypeId" name="PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes.TestTypeId" class="form-control readOnlyUpdate" ></select>

                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].Numberoftests, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "No Of Tests" } })
                                                @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].Numberoftests, "", new { @class = "text-danger" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].PrototypeDevelopment, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Prototype Development" } })
                                                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].PrototypeDevelopment, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].Cost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Cost" } })
                                                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].Cost, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].PrototypeCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control analyticalcalculatecost", @placeholder = "Prototype Cost" } })
                                                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].PrototypeCost, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group">
                                                    <i class="fas fa-plus" id="PrototypeaddIcon_@j" onclick="PrototypeaddRow(@j)"></i>
                                                    &nbsp;&nbsp;&nbsp;&nbsp;
                                                    <span><i class="fas fa-trash-alt PrototypeDeleteIcon" id="PrototypedeleteIco_@j" onclick="PrototypedeleteRow(@j, this)"></i></span>
                                                    @Html.HiddenFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].StrengthId, new { id = "PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[" + j + "].StrengthId"})
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                       
                        else
                        {
                            int j = 0;
                            <tr id="PrototypeTableRow_@j">
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            <select id="AnalyticalPrototypeTestTypeId" name="PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[@j].TestTypeId" class="form-control readOnlyUpdate" ></select>

                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].Numberoftests, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "No Of Tests" } })
                                        @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].Numberoftests, "", new { @class = "text-danger" })
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].PrototypeDevelopment, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Prototype Development" } })
                                            @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].PrototypeDevelopment, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].Cost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Cost" } })
                                            @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].Cost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].PrototypeCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control analyticalcalculatecost", @placeholder = "Prototype Cost" } })
                                            @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].PrototypeCost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group">
                                            <i class="fas fa-plus" id="PrototypeaddIcon_@j" onclick="PrototypeaddRow(@j)"></i>
                                            &nbsp;&nbsp;&nbsp;&nbsp;
                                            <span><i class="fas fa-trash-alt PrototypeDeleteIcon" id="PrototypedeleteIcon_@j" onclick="PrototypedeleteRow(@j, this)"></i></span>
                                            @Html.HiddenFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[j].StrengthId, new { id = "PidfPbfAnalyticals.PidfPbfAnalyticalPrototypes[" + j + "].StrengthId",Value = 43})

                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                         }
                    </tbody>

                </table>
            </div>
            @*//Prototype Section End*@
            <br />
            @*//Exhibit Section Start*@
            <div class="card-header">
                <h5 class="mb-0"><b>Exhibit</b></h5>
            </div>
            <br />
            <div>
                <table id="ExhibitTable" class="table table-bordered table-striped table-hover" style="width:100%">
                    <thead>
                        <tr>
                            <th>Test Type</th>
                            <th>Number of tests</th>
                            <th>Prototype Development</th>
                            <th>Rs /test</th>
                            <th>Prototype Cost</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="ExhibitTableBody">
                        @if (Model.PidfPbfAnalyticals != null)
                        {
                            if (Model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits != null)
                            {
                                for (int j = 0; j < Model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits.Count(); j++)
                                {
                                    <tr id="ExhibitTableRow_@j">
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    <select id="AnalyticalExhibitTestTypeId" name="PidfPbfAnalyticals.PidfPbfAnalyticalExhibits.TestTypeId" class="form-control readOnlyUpdate" required ></select>

                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].Numberoftests, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "No Of Tests" } })
                                                @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].Numberoftests, "", new { @class = "text-danger" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].PrototypeDevelopment, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Prototype Development" } })
                                                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].PrototypeDevelopment, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].Cost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Cost" } })
                                                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].Cost, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].PrototypeCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control analyticalcalculatecost", @placeholder = "Prototype Cost" } })
                                                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].PrototypeCost, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group">
                                                    <i class="fas fa-plus" id="ExhibitaddIcon_@j" onclick="ExhibitaddRow(@j)"></i>
                                                    &nbsp;&nbsp;&nbsp;&nbsp;
                                                    <span><i class="fas fa-trash-alt ExhibitDeleteIcon" id="ExhibitdeleteIco_@j" onclick="ExhibitdeleteRow(@j, this)"></i></span>
                                                    @Html.HiddenFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].StrengthId, new { id = "PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[" + j + "].StrengthId"})

                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        
                        else
                        {
                            int j = 0;
                            <tr id="ExhibitTableRow_@j">
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            <select id="AnalyticalExhibitTestTypeId" name="PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[@j].TestTypeId" class="form-control readOnlyUpdate" ></select>

                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].Numberoftests, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "No Of Tests" } })
                                        @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].Numberoftests, "", new { @class = "text-danger" })
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].PrototypeDevelopment, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Prototype Development" } })
                                            @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].PrototypeDevelopment, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].Cost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Cost" } })
                                            @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].Cost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].PrototypeCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control analyticalcalculatecost", @placeholder = "Prototype Cost" } })
                                            @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].PrototypeCost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group">
                                            <i class="fas fa-plus" id="ExhibitaddIcon_@j" onclick="ExhibitaddRow(@j)"></i>
                                            &nbsp;&nbsp;&nbsp;&nbsp;
                                            <span><i class="fas fa-trash-alt ExhibitDeleteIcon" id="ExhibitdeleteIcon_@j" onclick="ExhibitdeleteRow(@j, this)"></i></span>
                                            @Html.HiddenFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[j].StrengthId, new { id = "PidfPbfAnalyticals.PidfPbfAnalyticalExhibits[" + j + "].StrengthId"})

                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                       }
                    </tbody>

                </table>
            </div>
            @*//Exhibit Section End*@

            <br />
            @*//ScaleUp Section Start*@
            <div class="card-header">
                <h5 class="mb-0"><b>ScaleUp</b></h5>
            </div>
            <br />
            <div>
                <table id="ScaleUpTable" class="table table-bordered table-striped table-hover" style="width:100%">
                    <thead>
                        <tr>
                            <th>Test Type</th>
                            <th>Number of tests</th>
                            <th>ScaleUp Development</th>
                            <th>Rs /test</th>
                            <th>ScaleUp Cost</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="ScaleUpTableBody">
                        @if (Model.PidfPbfAnalyticals != null)
                        {
                            if (Model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps != null)
                            {
                                for (int j = 0; j < Model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps.Count(); j++)
                                {
                                    <tr id="ScaleUpTableRow_@j">
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    <select id="AnalyticalScaleUpTestTypeId" name="PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps.TestTypeId" class="form-control readOnlyUpdate" ></select>

                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].Numberoftests, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "No Of Tests" } })
                                                @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].Numberoftests, "", new { @class = "text-danger" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].PrototypeDevelopment, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Prototype Development" } })
                                                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].PrototypeDevelopment, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].Cost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Cost" } })
                                                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].Cost, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group required">
                                                    @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].PrototypeCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control analyticalcalculatecost", @placeholder = "Prototype Cost" } })
                                                    @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].PrototypeCost, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="col-md">
                                                <div class="form-group">
                                                    <i class="fas fa-plus" id="ScaleUpaddIcon_@j" onclick="ScaleUpaddRow(@j)"></i>
                                                    &nbsp;&nbsp;&nbsp;&nbsp;
                                                    <span><i class="fas fa-trash-alt ScaleUpDeleteIcon" id="ScaleUpdeleteIco_@j" onclick="ScaleUpdeleteRow(@j, this)"></i></span>
                                                    @Html.HiddenFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].StrengthId, new { id = "PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[" + j + "].StrengthId"})

                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        
                        else
                        {
                            int j = 0;
                            <tr id="ScaleUpTableRow_@j">
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            <select id="AnalyticalScaleUpTestTypeId" name="PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[@j].TestTypeId" class="form-control readOnlyUpdate" ></select>

                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].Numberoftests, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "No Of Tests" } })
                                        @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].Numberoftests, "", new { @class = "text-danger" })
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].PrototypeDevelopment, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Prototype Development" } })
                                            @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].PrototypeDevelopment, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].Cost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "Cost" } })
                                            @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].Cost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group required">
                                            @Html.EditorFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].PrototypeCost, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control analyticalcalculatecost", @placeholder = "Prototype Cost" } })
                                            @Html.ValidationMessageFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].PrototypeCost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="col-md">
                                        <div class="form-group">
                                            <i class="fas fa-plus" id="ScaleUpaddIcon_@j" onclick="ScaleUpaddRow(@j)"></i>
                                            &nbsp;&nbsp;&nbsp;&nbsp;
                                            <span><i class="fas fa-trash-alt ScaleUpDeleteIcon" id="ScaleUpdeleteIcon_@j" onclick="ScaleUpdeleteRow(@j, this)"></i></span>
                                            @Html.HiddenFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[j].StrengthId, new { id = "PidfPbfAnalyticals.PidfPbfAnalyticalScaleUps[" + j + "].StrengthId"})

                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                        }
                    </tbody>

                </table>
            </div>
            @*//ScaleUp Section End*@
            <br />
            @*//Total Cost Section Start*@

            <div class="card-header">
                <h5 class="mb-0"><b>AWV Cost</b></h5>
            </div>
            <br />

            <div class="row">

                <div class="col-md-3">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalAMVCost, "Total AWV Cost", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalAMVCost, new { @class = "form-control analyticalcalculatecost", @placeholder = "Total AWV Cost" })

                    </div>
                </div>

                <div class="col-md-9">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.Remark, "Remark", new { @class = "control-label" })

                        @Html.TextAreaFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.Remark, new { @class = "form-control analyticalcalculatecost", @placeholder = "Remark" })
                    </div>
                </div>
            </div>
            <br />
            <div class="card-header">
                <h5 class="mb-0"><b>Total Cost</b></h5>
            </div>
            <br />
            <table id="CostTable" class="table table-bordered table-striped table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th>Total Prototype Cost</th>
                        <th>Total ScaleUp Cost</th>
                        <th>Total Exhibit Cost</th>
                        <th>Total AWV Cost</th>
                        <th>Total Cost</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <div class="form-group required">
                                @*@Html.LabelFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalPrototypeCost, "Total Prototype Cost", new { @class = "control-label" })*@
                                @Html.TextBoxFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalPrototypeCost, new {@readonly = "readonly", @class = "form-control", @placeholder = "Total Prototype Cost" })
                            </div>
                        </td>
                        <td>
                            <div class="form-group required">
                                @*@Html.LabelFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalScaleUpCost, "Total ScaleUp Cost", new { @class = "control-label" })*@
                                @Html.TextBoxFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalScaleUpCost, new {@readonly = "readonly", @class = "form-control", @placeholder = "Total ScaleUp Cost" })
                            </div>
                        </td>
                        <td>
                            <div class="form-group required">
                                @*@Html.LabelFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalExhibitCost, "Total Exhibit Cost", new { @class = "control-label" })*@
                                @Html.TextBoxFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalExhibitCost, new { @readonly = "readonly", @class = "form-control", @placeholder = "Total Exhibit Cost" })
                            </div>
                        </td>
                        <td>
                            <div class="form-group required">

                                @*@Html.LabelFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalAMVCost, "Total AMV Cost", new { @class = "control-label" })*@
                                <input type="text" id="txtAMVCost" class="form-control required" placeholder="Total AMV Cost" disabled="disabled" />
                                @*@Html.TextBoxFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalAMVCost, new {@readonly = "readonly", @class = "form-control", @placeholder = "Total AMV Cost" })*@
                            </div>
                        </td>
                        <td>
                            <div class="form-group required">
                                @*@Html.LabelFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalCost, "Total Cost", new { @class = "control-label" })*@
                                @Html.TextBoxFor(model => model.PidfPbfAnalyticals.PidfPbfAnalyticalCosts.TotalCost, new {@readonly = "readonly", @class = "form-control", @placeholder = "Total Cost" })
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>

            @*//Total Cost Section End*@
        </div>
        @* </form>*@

    </div>
</div>
